Metadata-Version: 2.1
Name: job-farmer
Version: 0.0.2
Summary: A simple job farmer for HPC platforms
Home-page: https://gitlab.com/riffard/job_farmer
Author: Quentin Riffard
Author-email: quentin.riffard@gmail.com
License: GNU Affero General Public License v3.0
Project-URL: ReadTheDoc, https://riffard.gitlab.io/job_farmer/read_the_doc/
Platform: UNKNOWN
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: coverage-badge (==1.1.0)
Requires-Dist: pylint (==2.12.2)
Requires-Dist: pylint-json2html (==0.4.0)
Requires-Dist: pylint-gitlab (==1.0.0)
Requires-Dist: pytest (==7.0.1)
Requires-Dist: pytest-cov (==3.0.0)
Requires-Dist: sphinx (==4.4.0)
Requires-Dist: sphinx-rtd-theme (==1.0.0)

# Job Farmer

[![PyPi version](https://badge.fury.io/py/job-farmer.svg)](https://pypi.org/project/job-farmer/)
[![PyPi Read the doc](https://img.shields.io/badge/doc-ReadTheDoc-0b72b7)](https://riffard.gitlab.io/job_farmer/read_the_doc/)
[![PyPi Pylint](https://riffard.gitlab.io/job_farmer/badges/pylint.svg)](https://riffard.gitlab.io/job_farmer/lint/)
[![PyPi Pipeline](https://gitlab.com/riffard/job_farmer/badges/main/pipeline.svg)](https://gitlab.com/riffard/job_farmer)
[![PyPi Coverage](https://riffard.gitlab.io/job_farmer/badges/coverage.svg)](https://riffard.gitlab.io/job_farmer/coverage/)

## Description

Job Farmer is a python API designed to prepare jobs for HPC platforms supporting SLURM.
It collects the job configurations, the associated tasks and prepare the task list and slurm configuration files
based on the system constrains and the required ressources.

## Getting started

### Installation from PyPi

To install the job farmer from PyPi, use pip:
```bash
pip install job-farmer
```

### Install from sources

You can also install job-farmer using the sources. First, clone the repository:
```bash
git clone git@gitlab.com:riffard/job_farmer.git
```

move to the repository:
```bash
cd job_farmer
```

and install the job-farmer:
```bash
pip install .
```


## Usage

In the file [`test/simple_job.py`](test/simple_job.py), we are showing a simple job submission.

First, you import the job-farmer:
```python
import job_farmer
```

Then you create the `System` object (NERSC/CORI-Haswell in this example) and the `Farmer` object
```python
system = job_farmer.CoriHaswell()

farmer = job_farmer.Farmer(system)
```

The nex step consists on creation the `JobConfiguration` and add it to the `Farmer`:
```python
job_configuration = job_farmer.JobConfiguration(name='test_job',
                       account='your_account',
                       queue='queue',
                       duration='xx:xx:xx')

farmer.add_global_job_configuration(job_configuration)
```

You add the `Tasks` to the `Farmer` and you link them to the job_configuration 
```python
task = job_farmer.Task(commands=[f'export MY_MESSAGE="Hello World!"',
                                 'echo "${MY_MESSAGE}"'], 
                        n_threads=1)
farmer.add_task(job_configuration.name, task)
```
    
And it builds the task list and the slurm configuration file:
```python
farmer.build()
```

Finally, you can submit the jobs to the batch system using:
```python
farmer.submit(dry_run = False)
```
(by default, `dry_run = True`).


**Note:** By default, the job-farmer logs are not displayed. 
To display them, you need to import the `logging` package and set the log level to `logging.INFO` such as:
```python
logging.basicConfig(level=logging.INFO)
```
## Support

If you are encountering an issue, please open a git issue: [here](https://gitlab.com/riffard/job_farmer/-/issues)

## Contributing

### Adding a new system or data center



## Authors and acknowledgment



## License
GNU Affero General Public License v3.0


