# generated by datamodel-codegen:
#   filename:  schema/api/data/createGlossary.json
#   timestamp: 2022-02-23T10:13:15+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from ...entity.data import glossary
from ...type import entityReference, tagLabel


class CreateGlossaryRequest(BaseModel):
    name: glossary.Name = Field(..., description='Name that identifies this glossary.')
    displayName: Optional[str] = Field(
        None, description='Display Name that identifies this glossary.'
    )
    description: Optional[str] = Field(
        None, description='Description of the glossary instance.'
    )
    reviewers: Optional[List[str]] = Field(
        None, description='User names of the reviewers for this glossary.'
    )
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this glossary'
    )
    tags: Optional[List[tagLabel.TagLabel]] = Field(
        None, description='Tags for this glossary'
    )
