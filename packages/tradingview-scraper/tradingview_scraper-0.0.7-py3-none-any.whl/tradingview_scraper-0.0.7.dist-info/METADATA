Metadata-Version: 2.1
Name: tradingview-scraper
Version: 0.0.7
Summary: Tradingview scraper tool
Home-page: https://github.com/mnwato/tradingview-scraper
Download-URL: https://github.com/mnwato/tradingview-scraper/archive/refs/tags/0.0.7.tar.gz
Author: Mostafa Najmi
Author-email: m.n.irib@gmail.com
License: UNKNOWN
Keywords: tradingview,scraper,python,crawler,financial
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.txt
Requires-Dist: requests
Requires-Dist: pandas (==1.1.5)
Requires-Dist: beautifulsoup4 (==4.9.3)
Requires-Dist: numpy

# Tradingview scraper

The goal is to develop this package for scapping anything on https://tradingview.com with realtime response.
**I would thankful of any contributers**


## To Do List:
- [x] Scrape ideas section of a symbol
- [x] Export as `csv` file
- [ ] Export as `JSON`
- [ ] Scrape indicators status data             
  etc ... (You suggest)


## Features

- Scrape idea's informations like:
> #### Idea's Title
> #### Idea's symbol
> #### Idea's timeframe
> #### Idea's timestamp
> #### Idea's label
> #### Idea's social informations
> #### Idea's description
- Three ways to scrape webpage:
> #### Scrape just first page
> #### Scrape all pages
> #### Scrape specific range of pages
- Save data into a CSV file


## Installation
Open your favorite Terminal and run the command:
```sh
pip install tradingview_scrape
```


## Examples

```sh
from tradingview_scraper import scraper
ClassA.scraper()
```
### Output:
A tuple which includes:
1. A pandas dataframe (contains: timeStamp, symbol, timeFrame, label, title, socialInfo) 
2. A string (Symbol description in the first webpage)

### Note:
Default arguments are set to:
```sh
ClassA.scraper(symbol = 'btc',
            wholePage = False,
            startPage = 1,
            endPage = 2, 
            to_csv = False)
```
Argument  | Description
--------  | -----------
symbol | Symbol name
wholePage | Set it True if you want to scrape all pages
startPage | Set start page to scrape
endPage	| Set end page to scrape
to_csv | Set True to save data as a 'CSV' file

## License
- MIT


