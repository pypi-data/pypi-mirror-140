[tool.poetry]
name = "pydoc-markdown"
version = "4.5.1"
description = "Create Python API documentation in Markdown format."
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
readme = "readme.md"
packages = [{include = "pydoc_markdown", from = "src"}]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Utilities",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
keywords = [ 'documentation', 'docs', 'generator', 'markdown', 'pydoc' ]

[tool.poetry.dependencies]
python = "^3.7"
click = ">=7.1,<9.0"
"databind" = "^1.5.0"
docspec = "^1.0.0"
docspec-python = "^1.0.0"
docstring-parser = "^0.11"
"nr.fs" = "^1.6.0"
"nr.stream" = "^0.1.2"
requests = "^2.23.0"
PyYAML = "^5.3"
toml = "^0.10.1"
watchdog = "*"

[tool.poetry.dev-dependencies]
#pytest = "^6.2.5"
#mypy = "^0.931"
types-PyYAML = "^6.0.3"

[tool.poetry.scripts]
pydoc-markdown = "pydoc_markdown.main:cli"

[tool.poetry.plugins."pydoc_markdown.interfaces.Loader"]
python = "pydoc_markdown.contrib.loaders.python:PythonLoader"

[tool.poetry.plugins."pydoc_markdown.interfaces.Processor"]
crossref = "pydoc_markdown.contrib.processors.crossref:CrossrefProcessor"
filter = "pydoc_markdown.contrib.processors.filter:FilterProcessor"
google = "pydoc_markdown.contrib.processors.google:GoogleProcessor"
pydocmd = "pydoc_markdown.contrib.processors.pydocmd:PydocmdProcessor"
smart = "pydoc_markdown.contrib.processors.smart:SmartProcessor"
sphinx = "pydoc_markdown.contrib.processors.sphinx:SphinxProcessor"

[tool.poetry.plugins."pydoc_markdown.interfaces.Renderer"]
hugo = "pydoc_markdown.contrib.renderers.hugo:HugoRenderer"
markdown = "pydoc_markdown.contrib.renderers.markdown:MarkdownRenderer"
mkdocs = "pydoc_markdown.contrib.renderers.mkdocs:MkdocsRenderer"
docusaurus = "pydoc_markdown.contrib.renderers.docusaurus:DocusaurusRenderer"
jinja2 = "pydoc_markdown.contrib.renderers.jinja2:Jinja2Renderer"

[tool.poetry.plugins."pydoc_markdown.interfaces.SourceLinker"]
git = "pydoc_markdown.contrib.source_linkers.git:GitSourceLinker"
github = "pydoc_markdown.contrib.source_linkers.git:GithubSourceLinker"
gitlab = "pydoc_markdown.contrib.source_linkers.git:GitlabSourceLinker"
gitea = "pydoc_markdown.contrib.source_linkers.git:GiteaSourceLinker"
bitbucket = "pydoc_markdown.contrib.source_linkers.git:BitbucketSourceLinker"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.shut.test]
pytest = "pytest test"
mypy = "mypy src"
