# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")


from . import _PhaseSymmetryPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSteerableFilterFreqImageSourcePython
else:
    import _itkSteerableFilterFreqImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSteerableFilterFreqImageSourcePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSteerableFilterFreqImageSourcePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkSteerableFilterFreqImageSourceID2_New():
    return itkSteerableFilterFreqImageSourceID2.New()

class itkSteerableFilterFreqImageSourceID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceID2
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceID2

        Create a new object of the class itkSteerableFilterFreqImageSourceID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceID2 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_swigregister(itkSteerableFilterFreqImageSourceID2)
itkSteerableFilterFreqImageSourceID2___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2___New_orig__
itkSteerableFilterFreqImageSourceID2_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID2_cast


def itkSteerableFilterFreqImageSourceID3_New():
    return itkSteerableFilterFreqImageSourceID3.New()

class itkSteerableFilterFreqImageSourceID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceID3
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceID3

        Create a new object of the class itkSteerableFilterFreqImageSourceID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceID3 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_swigregister(itkSteerableFilterFreqImageSourceID3)
itkSteerableFilterFreqImageSourceID3___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3___New_orig__
itkSteerableFilterFreqImageSourceID3_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID3_cast


def itkSteerableFilterFreqImageSourceID4_New():
    return itkSteerableFilterFreqImageSourceID4.New()

class itkSteerableFilterFreqImageSourceID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceID4
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceID4

        Create a new object of the class itkSteerableFilterFreqImageSourceID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceID4 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_swigregister(itkSteerableFilterFreqImageSourceID4)
itkSteerableFilterFreqImageSourceID4___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4___New_orig__
itkSteerableFilterFreqImageSourceID4_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceID4_cast


def itkSteerableFilterFreqImageSourceIF2_New():
    return itkSteerableFilterFreqImageSourceIF2.New()

class itkSteerableFilterFreqImageSourceIF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceIF2
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceIF2

        Create a new object of the class itkSteerableFilterFreqImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceIF2 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_swigregister(itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2___New_orig__
itkSteerableFilterFreqImageSourceIF2_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_cast


def itkSteerableFilterFreqImageSourceIF3_New():
    return itkSteerableFilterFreqImageSourceIF3.New()

class itkSteerableFilterFreqImageSourceIF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceIF3
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceIF3

        Create a new object of the class itkSteerableFilterFreqImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceIF3 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_swigregister(itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3___New_orig__
itkSteerableFilterFreqImageSourceIF3_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_cast


def itkSteerableFilterFreqImageSourceIF4_New():
    return itkSteerableFilterFreqImageSourceIF4.New()

class itkSteerableFilterFreqImageSourceIF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkSteerableFilterFreqImageSourceIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_Clone)
    SetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetSize)
    GetSize = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetDirection)
    SetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetOrientation)
    GetOrientation = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetOrientation)
    SetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_SetAngularBandwidth)
    GetAngularBandwidth = _swig_new_instance_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_GetAngularBandwidth)
    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceIF4
    cast = _swig_new_static_method(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceIF4

        Create a new object of the class itkSteerableFilterFreqImageSourceIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSteerableFilterFreqImageSourceIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSteerableFilterFreqImageSourceIF4 in _itkSteerableFilterFreqImageSourcePython:
_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_swigregister(itkSteerableFilterFreqImageSourceIF4)
itkSteerableFilterFreqImageSourceIF4___New_orig__ = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4___New_orig__
itkSteerableFilterFreqImageSourceIF4_cast = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def steerable_filter_freq_image_source(*args,  size: Sequence[int]=..., spacing: Sequence[float]=..., origin: Sequence[float]=..., direction=..., orientation: Sequence[float]=..., angular_bandwidth: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SteerableFilterFreqImageSource"""
    import itk

    kwarg_typehints = { 'size':size,'spacing':spacing,'origin':origin,'direction':direction,'orientation':orientation,'angular_bandwidth':angular_bandwidth }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.SteerableFilterFreqImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def steerable_filter_freq_image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.PhaseSymmetry.SteerableFilterFreqImageSource
    steerable_filter_freq_image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    steerable_filter_freq_image_source.__doc__ = filter_object.__doc__




