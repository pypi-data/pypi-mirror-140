[tool.poetry]
name = "pel"
version = "0.0.1"
description = "The most elegant build system."
readme = "README.md"
authors = ["Neocrym Records Inc. <engineering@neocrym.com>"]
homepage = "https://github.com/neocrym/pel"
repository = "https://github.com/neocrym/pel"
license = "MIT"

classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"

[tool.poetry.dev-dependencies]
pytest = "^7.0"
vendorize = "^0.2.2"
isort = "^5.10.1"
black = "^22.1.0"
pylint = "^2.12.2"
mypy = "^0.931"
pyinstaller = "^4.9"
pyclean = "^2.0.0"

[tool.poetry.scripts]
pel = 'pel.console:run'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
    | \.git
    | \.mypy_cache
    | \.venv
    | venv
    | _vendor
  )/
)
'''
[tool.isort]
known_first_party = ["pel"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
skip = [".git", ".mypy_cache", ".venv", "venv", "_vendor"]


[tool.mypy]
python_version = "3.8"
follow_imports = "silent"
strict = true
exclude = [
    '^pel/_vendor'
]

[[tool.mypy.overrides]]
module = [
    "pytest",
]
ignore_missing_imports = true


[tool.pylint]

[tool.pylint.master]
ignore = ['.git', '.mypy_cache', '.venv', 'venv', '_vendor']
disable = [
  'exec-used',
  'protected-access',
  'wildcard-import',
  'unused-wildcard-import',
  'no-self-use',
  'too-many-instance-attributes',
  'duplicate-code'
]