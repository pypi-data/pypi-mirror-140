Metadata-Version: 2.1
Name: rapa
Version: 0.0.9
Summary: Robust Automtated Parsimony Analysis
Home-page: https://github.com/FoxoTech/rapa
Author: Life Epigenetics
Author-email: info@FOXOBioScience.com
License: MIT
Keywords: feature reduction features datarobot robust automated parsimony analysis
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Framework :: Jupyter
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: scikit-learn
Requires-Dist: matplotlib
Requires-Dist: datarobot
Requires-Dist: tqdm
Requires-Dist: seaborn
Requires-Dist: sphinxcontrib-apidoc
Requires-Dist: m2r
Requires-Dist: nbsphinx
Requires-Dist: myst-parser

# Robust Automated Parsimony Analysis (RAPA)

With RAPA, we plan to provide a robust, freely usable, and shareable tool for automated parsimony analysis in Python.

RAPA will initially be developed on top of DataRobot's Python API to use DataRobot as a "model-running engine." In the RAPA MVP, we will provide two primary features:

* Initial feature filtering to reduce a feature list down to a size that DataRobot can receive as input.

* Automated parsimony analysis to present to the user the trade-off between the size of Feature List and the best model performance on each Feature List, presented as a Pareto front.

Although the MVP implementation of these features will be based on basic techniques such as linear feature filters and recursive feature elimination, we plan to rapidly improve these features by integrating state-of-the-art techniques from the academic literature.


The RAPA MVP is currently being demonstrated in [demo-rapa.ipynb](https://github.com/FoxoTech/rapa/blob/main/tutorials/02-tutorial.ipynb). In the near future, we will transition this project from a demo to a functioning Python module.

