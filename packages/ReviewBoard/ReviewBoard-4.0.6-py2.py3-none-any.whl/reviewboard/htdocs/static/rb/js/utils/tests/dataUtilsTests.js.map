{"version":3,"sources":["dataUtilsTests.es6.js"],"names":[],"mappings":"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","file":"dataUtilsTests.js","sourcesContent":["suite('rb/utils/dataUtils', function() {\n    it('readBlobAsArrayBuffer', function(done) {\n        const str = 'abc123';\n        const blob = new Blob([str]);\n\n        RB.DataUtils.readBlobAsArrayBuffer(blob, result => {\n            expect(result.byteLength).toBe(6);\n\n            const dataView = new DataView(result);\n\n            for (let i = 0; i < result.byteLength; i++) {\n                expect(dataView.getUint8(i)).toBe(str.charCodeAt(i));\n            }\n\n            done();\n        });\n    });\n\n    it('readBlobAsString', function(done) {\n        const blob = new Blob(['This is a test.']);\n\n        RB.DataUtils.readBlobAsString(blob, result => {\n            expect(typeof result).toBe('string');\n            expect(result).toBe('This is a test.');\n\n            done();\n        });\n    });\n\n    it('readManyBlobsAsArrayBuffers', function(done) {\n        const str1 = 'abc123';\n        const str2 = 'foo';\n\n        const blob1 = new Blob([str1]);\n        const blob2 = new Blob([str2]);\n\n        RB.DataUtils.readManyBlobsAsArrayBuffers([blob1, blob2],\n                                                 (result1, result2) => {\n            expect(result1.byteLength).toBe(6);\n            expect(result2.byteLength).toBe(3);\n\n            const dataView1 = new DataView(result1);\n\n            for (let i = 0; i < result1.byteLength; i++) {\n                expect(dataView1.getUint8(i)).toBe(str1.charCodeAt(i));\n            }\n\n            const dataView2 = new DataView(result2);\n\n            for (let i = 0; i < result2.byteLength; i++) {\n                expect(dataView2.getUint8(i)).toBe(str2.charCodeAt(i));\n            }\n\n            done();\n        });\n    });\n\n    it('readManyBlobsAsStrings', function(done) {\n        const blob1 = new Blob(['This is a test.']);\n        const blob2 = new Blob(['hello world']);\n\n        RB.DataUtils.readManyBlobsAsStrings([blob1, blob2],\n                                            (result1, result2) => {\n            expect(typeof result1).toBe('string');\n            expect(typeof result2).toBe('string');\n            expect(result1).toBe('This is a test.');\n            expect(result2).toBe('hello world');\n\n            done();\n        });\n    });\n\n    describe('buildArrayBuffer', function() {\n        it('With int8', function() {\n            const values = [-1, 0, 1];\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'int8',\n                    values: values,\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(3);\n\n            const dataView = new DataView(arrayBuffer);\n\n            for (let i = 0; i < values.length; i++) {\n                expect(dataView.getInt8(i)).toBe(values[i]);\n            }\n        });\n\n        it('With uint8', function() {\n            const values = [1, 2, 3];\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'uint8',\n                    values: values,\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(3);\n\n            const dataView = new DataView(arrayBuffer);\n\n            for (let i = 0; i < values.length; i++) {\n                expect(dataView.getUint8(i)).toBe(values[i]);\n            }\n        });\n\n        describe('With int16', function() {\n            const values = [-1, 0, 1];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int16',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt16(i * 2, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int16',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt16(i * 2)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With uint16', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint16',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint16(i * 2, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint16',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint16(i * 2)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With int32', function() {\n            const values = [-1, 0, 1];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With uint32', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With float32', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With float64', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float64',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(24);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat64(i * 8, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float64',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(24);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat64(i * 8)).toBe(values[i]);\n                }\n            });\n        });\n\n        it('With complex schema', function() {\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'int32',\n                    values: [10, 20],\n                    bigEndian: true,\n                },\n                {\n                    type: 'uint8',\n                    values: [100],\n                },\n                {\n                    type: 'uint16',\n                    values: [64],\n                },\n                {\n                    type: 'float64',\n                    values: [1.234],\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(19);\n\n            const dataView = new DataView(arrayBuffer);\n            expect(dataView.getInt32(0)).toBe(10);\n            expect(dataView.getInt32(4)).toBe(20);\n            expect(dataView.getUint8(8)).toBe(100);\n            expect(dataView.getUint16(9, true)).toBe(64);\n            expect(dataView.getFloat64(11, true)).toEqual(1.234);\n        });\n    });\n\n    it('buildBlob', function(done) {\n        const blob = RB.DataUtils.buildBlob([\n            'abc',\n            [\n                {\n                    type: 'uint8',\n                    values: [1, 2],\n                },\n                {\n                    type: 'uint32',\n                    values: [100],\n                },\n            ],\n            new Blob(['def']),\n        ]);\n\n        RB.DataUtils.readBlobAsArrayBuffer(blob, arrayBuffer => {\n            expect(arrayBuffer.byteLength).toBe(12);\n\n            const dataView = new DataView(arrayBuffer);\n            expect(dataView.getUint8(0)).toBe('a'.charCodeAt(0));\n            expect(dataView.getUint8(1)).toBe('b'.charCodeAt(0));\n            expect(dataView.getUint8(2)).toBe('c'.charCodeAt(0));\n            expect(dataView.getUint8(3)).toBe(1);\n            expect(dataView.getUint8(4)).toBe(2);\n            expect(dataView.getUint32(5, true)).toBe(100);\n            expect(dataView.getUint8(9)).toBe('d'.charCodeAt(0));\n            expect(dataView.getUint8(10)).toBe('e'.charCodeAt(0));\n            expect(dataView.getUint8(11)).toBe('f'.charCodeAt(0));\n\n            done();\n        });\n    });\n});\n"]}