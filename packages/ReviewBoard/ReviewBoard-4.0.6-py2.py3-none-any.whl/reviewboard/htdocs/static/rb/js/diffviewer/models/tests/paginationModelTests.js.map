{"version":3,"sources":["paginationModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,iCAAD,EAAoC,YAAW;AAChD,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB,IAAA,KAAK,GAAG,IAAI,EAAE,CAAC,UAAP,EAAR;AACH,GAFS,CAAV;AAIA,EAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AACzB,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,UAAI,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;AACnB,QAAA,YAAY,EAAE,IADK;AAEnB,QAAA,KAAK,EAAE,CAFY;AAGnB,QAAA,YAAY,EAAE,IAHK;AAInB,QAAA,QAAQ,EAAE,IAJS;AAKnB,QAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALK;AAMnB,QAAA,aAAa,EAAE,CANI;AAOnB,QAAA,SAAS,EAAE,CAPQ;AAQnB,QAAA,YAAY,EAAE;AARK,OAAZ,CAAX;AAWA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,IAA9B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,KAAN,CAAN,CAAmB,IAAnB,CAAwB,CAAxB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,OAAzB,CAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjC;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,IAA9B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,IAA1B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,YAAN,CAAN,CAA0B,IAA1B,CAA+B,CAA/B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,CAA3B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,CAA9B;AACH,KArBC,CAAF;AAsBH,GAvBO,CAAR;AAwBH,CA/BI,CAAL","file":"paginationModelTests.js","sourcesContent":["suite('rb/diffviewer/models/Pagination', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.Pagination();\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            var data = model.parse({\n                is_paginated: true,\n                pages: 4,\n                has_previous: true,\n                has_next: true,\n                page_numbers: [1, 2, 3, 4],\n                previous_page: 1,\n                next_page: 3,\n                current_page: 2,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.isPaginated).toBe(true);\n            expect(data.pages).toBe(4);\n            expect(data.pageNumbers).toEqual([1, 2, 3, 4]);\n            expect(data.hasPrevious).toBe(true);\n            expect(data.hasNext).toBe(true);\n            expect(data.previousPage).toBe(1);\n            expect(data.nextPage).toBe(3);\n            expect(data.currentPage).toBe(2);\n        });\n    });\n});\n"]}