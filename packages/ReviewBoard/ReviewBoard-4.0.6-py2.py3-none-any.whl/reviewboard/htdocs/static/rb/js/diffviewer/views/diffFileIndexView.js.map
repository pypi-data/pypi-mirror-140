{"version":3,"sources":["diffFileIndexView.es6.js"],"names":[],"mappings":"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","file":"diffFileIndexView.js","sourcesContent":["/**\n * Displays the file index for the diffs on a page.\n *\n * The file page lists the names of the files, as well as a little graph\n * icon showing the relative size and complexity of a file, a list of chunks\n * (and their types), and the number of lines added and removed.\n */\nRB.DiffFileIndexView = Backbone.View.extend({\n    chunkTemplate: _.template(\n        '<a href=\"#<%= chunkID %>\" class=\"<%= className %>\"> </a>'\n    ),\n\n    _itemTemplate: _.template(dedent`\n        <tr class=\"loading\n         <% if (newfile) { %>new-file<% } %>\n         <% if (binary) { %>binary-file<% } %>\n         <% if (deleted) { %>deleted-file<% } %>\n         <% if (destFilename !== depotFilename) { %>renamed-file<% } %>\n         \">\n         <td class=\"diff-file-icon\">\n          <span class=\"fa fa-spinner fa-pulse\"></span>\n         </td>\n         <td class=\"diff-file-info\">\n          <a href=\"#<%- index %>\"><%- destFilename %></a>\n          <% if (destFilename !== depotFilename) { %>\n          <span class=\"diff-file-rename\"><%- wasText %></span>\n          <% } %>\n         </td>\n         <td class=\"diff-chunks-cell\">\n          <% if (binary) { %>\n           <%- binaryFileText %>\n          <% } else if (deleted) { %>\n           <%- deletedFileText %>\n          <% } else { %>\n           <div class=\"diff-chunks\"></div>\n          <% } %>\n         </td>\n        </tr>\n    `),\n\n    events: {\n        'click a': '_onAnchorClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     collection (RB.DiffFileCollection):\n     *         The collection containing the files.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$items = null;\n        this._$itemsTable = null;\n\n        this.collection = this.options.collection;\n        this.listenTo(this.collection, 'reset update', this.update);\n    },\n\n    /**\n     * Render the view to the page.\n     *\n     * Returns:\n     *     RB.DiffFileIndexView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.empty();\n\n        this._$itemsTable = $('<table/>').appendTo(this.$el);\n        this._$items = this.$('tr');\n\n        // Add the files from the collection\n        this.update();\n\n        return this;\n    },\n\n    /**\n     * Update the list of files in the index view.\n     */\n    update() {\n        this._$itemsTable.empty();\n\n        this.collection.each(file => {\n            this._$itemsTable.append(this._itemTemplate(\n                _.defaults({\n                    binaryFileText: gettext('Binary file'),\n                    deletedFileText: gettext('Deleted'),\n                    wasText: interpolate(gettext('Was %s'),\n                                         [file.get('depotFilename')]),\n                }, file.attributes)\n            ));\n        });\n\n        this._$items = this.$('tr');\n    },\n\n    /**\n     * Add a loaded diff to the index.\n     *\n     * The reserved entry for the diff will be populated with a link to the\n     * diff, and information about the diff.\n     *\n     * Args:\n     *     index (number):\n     *         The array index at which to add the new diff.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file being added.\n     */\n    addDiff(index, diffReviewableView) {\n        const $item = $(this._$items[index])\n            .removeClass('loading');\n\n        if (diffReviewableView.$el.hasClass('diff-error')) {\n            this._renderDiffError($item);\n        } else {\n            this._renderDiffEntry($item, diffReviewableView);\n        }\n    },\n\n    /**\n     * Render a diff loading error.\n     *\n     * An error icon will be displayed in place of the typical complexity\n     * icon.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which encountered the error.\n     */\n    _renderDiffError($item) {\n        $item.find('.diff-file-icon')\n            .html('<div class=\"rb-icon rb-icon-warning\" />')\n            .attr('title',\n                  gettext('There was an error loading this diff. See the details below.'));\n    },\n\n    /**\n     * Render the display of a loaded diff.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which was loaded.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file which was loaded.\n     */\n    _renderDiffEntry($item, diffReviewableView) {\n        const $table = diffReviewableView.$el;\n        const fileDeleted = $item.hasClass('deleted-file');\n        const fileAdded = $item.hasClass('new-file');\n        const linesEqual = $table.data('lines-equal');\n        let numDeletes = 0;\n        let numInserts = 0;\n        let numReplaces = 0;\n        let tooltip = '';\n        const tooltipParts = [];\n        const chunksList = [];\n\n        if (fileAdded) {\n            numInserts = 1;\n        } else if (fileDeleted) {\n            numDeletes = 1;\n        } else if ($item.hasClass('binary-file')) {\n            numReplaces = 1;\n        } else {\n            $table.children('tbody').each((i, chunk) => {\n                const numRows = chunk.rows.length;\n                const $chunk = $(chunk);\n\n                if ($chunk.hasClass('delete')) {\n                    numDeletes += numRows;\n                } else if ($chunk.hasClass('insert')) {\n                    numInserts += numRows;\n                } else if ($chunk.hasClass('replace')) {\n                    numReplaces += numRows;\n                } else {\n                    return;\n                }\n\n                chunksList.push(this.chunkTemplate({\n                    chunkID: chunk.id.substr(5),\n                    className: chunk.className,\n                }));\n            });\n\n            /* Add clickable blocks for each diff chunk. */\n            $item.find('.diff-chunks').html(chunksList.join(''));\n        }\n\n        /* Render the complexity icon. */\n        const iconView = new RB.DiffComplexityIconView({\n            numInserts: numInserts,\n            numDeletes: numDeletes,\n            numReplaces: numReplaces,\n            totalLines: linesEqual + numDeletes + numInserts + numReplaces,\n        });\n\n        const $fileIcon = $item.find('.diff-file-icon');\n        $fileIcon\n            .empty()\n            .append(iconView.$el);\n\n        iconView.render();\n\n        /* Add tooltip for icon */\n        if (fileAdded) {\n            tooltip = gettext('New file');\n        } else if (fileDeleted) {\n            tooltip = gettext('Deleted file');\n        } else {\n            if (numInserts > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s new line', '%s new lines', numInserts),\n                    [numInserts]));\n            }\n\n            if (numReplaces > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line changed', '%s lines changed', numReplaces),\n                    [numReplaces]));\n            }\n\n            if (numDeletes > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line removed', '%s lines removed', numDeletes),\n                    [numDeletes]));\n            }\n\n            tooltip = tooltipParts.join(', ');\n        }\n\n        $fileIcon.attr('title', tooltip);\n\n        this.listenTo(\n            diffReviewableView,\n            'chunkDimmed chunkUndimmed',\n            chunkID => {\n                this.$(`a[href=\"#${chunkID}\"]`).toggleClass('dimmed');\n            });\n    },\n\n    /**\n     * Handler for when an anchor is clicked.\n     *\n     * Gets the name of the target and emits anchorClicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onAnchorClicked: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('anchorClicked', e.target.href.split('#')[1]);\n    },\n});\n"]}