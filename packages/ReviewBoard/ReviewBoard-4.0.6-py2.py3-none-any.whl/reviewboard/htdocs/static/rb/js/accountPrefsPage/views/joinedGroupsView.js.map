{"version":3,"sources":["joinedGroupsView.es6.js"],"names":[],"mappings":"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","file":"joinedGroupsView.js","sourcesContent":["(function() {\n\n\n/**\n * An item representing the user's membership with a group.\n *\n * This keeps track of the group's information and the membership state\n * for the user. It also allows changing that membership.\n *\n * This provides two actions: 'Join', and 'Leave'.\n */\nconst GroupMembershipItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        localSiteName: null,\n        displayName: null,\n        groupName: null,\n        joined: false,\n        showRemove: false,\n        url: null\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Initialize the item.\n     *\n     * The item's name and URL will be taken from the serialized group\n     * information, and a proxy ReviewGroup will be created to handle\n     * membership.\n     */\n    initialize() {\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        const name = this.get('name');\n        const localSiteName = this.get('localSiteName');\n\n        this.set({\n            text: name,\n            editURL: this.get('url')\n        });\n\n        this.group = new RB.ReviewGroup({\n            id: this.get('reviewGroupID'),\n            name: name,\n            localSitePrefix: (localSiteName ? 's/' + localSiteName + '/' : '')\n        });\n\n        this.on('change:joined', this._updateActions, this);\n        this._updateActions();\n    },\n\n    /**\n     * Join the group.\n     *\n     * This will add the user to the group, and set the 'joined' property\n     * to true upon completion.\n     */\n    joinGroup() {\n        this.group.addUser(\n            RB.UserSession.instance.get('username'),\n            {\n                success: () => this.set('joined', true)\n            });\n    },\n\n    /**\n     * Leave the group.\n     *\n     * This will remove the user from the group, and set the 'joined' property\n     * to false upon completion.\n     */\n    leaveGroup() {\n        this.group.removeUser(\n            RB.UserSession.instance.get('username'),\n            {\n                success: () => this.set('joined', false)\n            });\n    },\n\n    /**\n     * Update the list of actions.\n     *\n     * This will replace the existing action, if any, with a new action\n     * allowing the user to join or leave the group, depending on their\n     * current membership status.\n     */\n    _updateActions() {\n        if (this.get('joined')) {\n            this.actions = [{\n                id: 'leave',\n                label: gettext('Leave')\n            }];\n        } else {\n            this.actions = [{\n                id: 'join',\n                label: gettext('Join')\n            }];\n        }\n\n        this.trigger('actionsChanged');\n    }\n});\n\n\n/**\n * Provides UI for showing a group membership.\n *\n * This will display the group information and provide buttons for\n * the Join/Leave actions.\n */\nconst GroupMembershipItemView = Djblets.Config.ListItemView.extend({\n    actionHandlers: {\n        'join': '_onJoinClicked',\n        'leave': '_onLeaveClicked'\n    },\n\n    template: _.template([\n        '<span class=\"config-group-name\">',\n        ' <a href=\"<%- editURL %>\"><%- text %></a>',\n        '</span>',\n        '<span class=\"config-group-display-name\"><%- displayName %></span>'\n    ].join('')),\n\n    /**\n     * Handler for when Join is clicked.\n     *\n     * Tells the model to join the group.\n     */\n    _onJoinClicked() {\n        this.model.joinGroup();\n    },\n\n    /**\n     * Handler for when Leave is clicked.\n     *\n     * Tells the model to leave the group.\n     */\n    _onLeaveClicked() {\n        this.model.leaveGroup();\n    }\n});\n\n\n/**\n * Displays a list of group membership items, globally or for a Local Site.\n *\n * If displaying for a Local Site, then the name of the site will be shown\n * before the list.\n *\n * Each group in the list will be shown as an item with Join/Leave buttons.\n *\n * The list of groups are filterable. When filtering, if there are no groups\n * that match the filter, then the whole view will be hidden.\n */\nconst SiteGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <% if (name) { %>\n         <div class=\"djblets-l-config-forms-container\">\n          <h3><%- name %></h3>\n         </div>\n        <% } %>\n        <div class=\"groups\"></div>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * This will create a list for all groups in this view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     name (string):\n     *         The name of the local site, if any.\n     */\n    initialize(options) {\n        this.name = options.name;\n        this.collection = new RB.FilteredCollection(null, {\n            collection: new Backbone.Collection(options.groups, {\n                model: GroupMembershipItem\n            })\n        });\n        this.groupList = new Djblets.Config.List({}, {\n            collection: this.collection\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     SiteGroupsView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._listView = new Djblets.Config.ListView({\n            ItemView: GroupMembershipItemView,\n            model: this.groupList\n        });\n\n        this.$el.html(this.template({\n            name: this.name\n        }));\n\n        this._listView.render();\n        this._listView.$el.appendTo(this.$('.groups'));\n\n        return this;\n    },\n\n    /**\n     * Filter the list of groups by name.\n     *\n     * If no groups are found, then the view will hide itself.\n     *\n     * Args:\n     *     name (string):\n     *         The group name to search for.\n     */\n    filterBy(name) {\n        this.collection.setFilters({\n            'name': name\n        });\n\n        this.$el.setVisible(this.collection.length > 0);\n    }\n});\n\n\n/**\n * Provides UI for managing a user's group memberships.\n *\n * All accessible groups will be shown to the user, sectioned by\n * Local Site. This list is filterable through a search box at the top of\n * the view.\n *\n * Each group entry provides a button for joining or leaving the group,\n * allowing users to manage their memberships.\n */\nRB.JoinedGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"djblets-l-config-forms-container\">\n         <div class=\"rb-c-search-field\">\n          <span class=\"fa fa-search\"></span>\n          <input class=\"rb-c-search-field__input\" type=\"search\">\n         </div>\n        </div>\n        <div class=\"group-lists\"></div>\n    `),\n\n    events: {\n        'submit': '_onSubmit',\n        'keyup .rb-c-search-field__input': '_onGroupSearchChanged',\n        'change .rb-c-search-field__input': '_onGroupSearchChanged',\n    },\n\n    /*\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     groups (Array of object):\n     *         Initial set of groups.\n     */\n    initialize(options) {\n        this.groups = options.groups;\n\n        this._$listsContainer = null;\n        this._$search = null;\n        this._searchText = null;\n        this._groupViews = [];\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will set up the elements and the list of SiteGroupsViews.\n     *\n     * Returns:\n     *     RB.JoinedGroupsView.\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this.template());\n\n        this._$listsContainer = this.$('.group-lists');\n        this._$search = this.$('.rb-c-search-field__input');\n\n        for (let [localSiteName, groups] of Object.entries(this.groups)) {\n            if (groups.length > 0) {\n                const view = new SiteGroupsView({\n                    name: localSiteName,\n                    groups: groups\n                });\n\n                view.$el.appendTo(this._$listsContainer);\n                view.render();\n\n                this._groupViews.push(view);\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Handler for when the search box changes.\n     *\n     * This will instruct the SiteGroupsViews to filter their contents\n     * by the text entered into the search box.\n     */\n    _onGroupSearchChanged() {\n        const text = this._$search.val();\n\n        if (text !== this._searchText) {\n            this._searchText = text;\n            this._groupViews.forEach(view => view.filterBy(this._searchText));\n        }\n    },\n\n    /**\n     * Prevent form submission.\n     *\n     * This form live updates based on the content of the <input> field and\n     * submitting it will result in a CSRF error.\n     *\n     * Args:\n     *     e (Event):\n     *         The form submission event.\n     */\n    _onSubmit(e) {\n        e.preventDefault();\n    }\n});\n\n\n})();\n"]}