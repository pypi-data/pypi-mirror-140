{"version":3,"sources":["uploadDiffView.es6.js"],"names":[],"mappings":"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","file":"uploadDiffView.js","sourcesContent":["/**\n * An abstract view for uploading diffs.\n *\n * This is extended by the PreCommitView (for creating new review requests)\n * and UpdateDiffView (for updating the diff on existing review requests).\n */\nRB.UploadDiffView = Backbone.View.extend({\n    events: {\n        'dragenter .dnd': '_onDragEnter',\n        'dragover .dnd': '_onDragOver',\n        'dragleave .dnd': '_onDragLeave',\n        'drop .dnd': '_onDrop',\n        'submit #basedir-form': '_onBasedirSubmit',\n        'submit #changenum-form': '_onChangenumSubmit',\n        'click .startover': '_onStartOverClicked',\n        'click #select-diff-file': '_onSelectFileClicked',\n        'click #select-parent-diff-file': '_onSelectFileClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'change:state', this._onStateChanged);\n        this.listenTo(this.model, 'change:error', this._onErrorChanged);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.UploadDiffView:\n     *     This object, for chaining.\n     */\n    render() {\n        let selectDiffText;\n        let selectParentDiffText;\n\n        if (this._canDragDrop()) {\n            selectDiffText = gettext('<input type=\"button\" id=\"select-diff-file\" value=\"Select\"> or drag and drop a diff file to begin');\n            selectParentDiffText = gettext('<input type=\"button\" id=\"select-parent-diff-file\" value=\"Select\"> or drag and drop a parent diff file if you have one');\n        } else {\n            selectDiffText = gettext('<input type=\"button\" id=\"select-diff-file\" value=\"Select\"> a file to begin');\n            selectParentDiffText = gettext('<input type=\"button\" id=\"select-parent-diff-file\" value=\"Select\"> a parent diff file if you have one');\n        }\n\n        this.$el.html(this.template({\n            pendingChangeHeader: gettext('Create from a local change'),\n            tipHeader: gettext('Tip:'),\n            tip: gettext('Use <tt>rbt post</tt> from <a href=\"https://www.reviewboard.org/downloads/rbtools/\">RBTools</a> to more easily create and update review requests.'),\n            selectDiff: selectDiffText,\n            selectParentDiff: selectParentDiffText,\n            baseDir: gettext('What is the base directory for this diff?'),\n            changeNum: gettext('What is the change number for this diff?'),\n            startOver: gettext('Start Over'),\n            ok: gettext('OK'),\n        }));\n\n        this._$fileInput = $('<input type=\"file\">')\n            .hide()\n            .appendTo(this.$el)\n            .change(() => this.model.handleFiles(this._$fileInput.get(0).files));\n        this._$diffRevisionError = this.$('#parent-diff-error-contents');\n        this._$error = this.$('#error-indicator')\n            .hide();\n        this._$errorContents = this.$('#error-contents');\n        this._$processingDiff = this.$('#processing-diff')\n            .hide();\n        this._$promptForBasedir = this.$('#prompt-for-basedir')\n            .hide();\n        this._$promptForChangeNumber = this.$('#prompt-for-change-number')\n            .hide();\n        this._$promptForDiff = this.$('#prompt-for-diff')\n            .hide();\n        this._$promptForParentDiff = this.$('#prompt-for-parent-diff')\n            .hide();\n        this._$uploading = this.$('#uploading-diffs')\n            .hide();\n\n        this._onStateChanged(this.model, this.model.get('state'));\n\n        return this;\n    },\n\n    /**\n     * Return whether drag-and-drop is supported on this browser.\n     *\n     * We check if the DOM has the appropriate support for file drag-and-drop,\n     * which will give us the right answer on most browsers. We also need to\n     * check iOS specifically, as Safari lies about the support.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether the user's browser supports drag-and-drop of files.\n     */\n    _canDragDrop() {\n        return ('draggable' in this.el ||\n                ('ondragstart' in this.el && 'ondrop' in this.el)) &&\n               !navigator.userAgent.match('iPhone OS') &&\n               !navigator.userAgent.match('iPad');\n    },\n\n    /**\n     * Callback for when the model's error attribute changes.\n     *\n     * Updates the text and position of error indicators in the various pages.\n     *\n     * Args:\n     *     model (RB.UploadDiffModel):\n     *         The model which handles uploading the diff.\n     *\n     *     error (string):\n     *         The text of the error.\n     */\n    _onErrorChanged(model, error) {\n        const errorHTML = `<div class=\"rb-icon rb-icon-warning\"></div> ${error}`;\n\n        this._$errorContents.html(errorHTML);\n        this._$diffRevisionError.html(errorHTML);\n\n        const innerHeight = this._$errorContents.height();\n        const outerHeight = this._$error.height();\n\n        this._$errorContents.css({\n            top: Math.floor((outerHeight - innerHeight) / 2) + 'px',\n        });\n    },\n\n    /**\n     * Callback for when the model's state attribute changes.\n     *\n     * Sets the corresponding element visible and all others invisible.\n     *\n     * Args:\n     *     model (RB.UploadDiffModel):\n     *         The model which handles uploading the diff.\n     *\n     *     state (number):\n     *         The current state of the upload process.\n     */\n    _onStateChanged(model, state) {\n        this._$promptForDiff.setVisible(\n            state === this.model.State.PROMPT_FOR_DIFF);\n        this._$promptForParentDiff.setVisible(\n            state === this.model.State.PROMPT_FOR_PARENT_DIFF);\n        this._$promptForBasedir.setVisible(\n            state === this.model.State.PROMPT_FOR_BASEDIR);\n        this._$processingDiff.setVisible(\n            state === this.model.State.PROCESSING_DIFF);\n        this._$promptForChangeNumber.setVisible(\n            state === this.model.State.PROMPT_FOR_CHANGE_NUMBER);\n        this._$uploading.setVisible(state === this.model.State.UPLOADING);\n        this._$error.setVisible(state === this.model.State.ERROR);\n    },\n\n    /**\n     * Event handler for a dragenter event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragenter event.\n     */\n    _onDragEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        this.$('.dnd').addClass('drag-hover');\n    },\n\n    /**\n     * Event handler for a dragover event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragover event.\n     */\n    _onDragOver(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const dt = event.originalEvent.dataTransfer;\n\n        if (dt) {\n            dt.dropEffect = 'copy';\n        }\n    },\n\n    /**\n     * Event handler for a dragleave event.\n     *\n     * Args:\n     *     event (Event):\n     *         The dragleave event.\n     */\n    _onDragLeave(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        this.$('.dnd').removeClass('drag-hover');\n\n        const dt = event.originalEvent.dataTransfer;\n\n        if (dt) {\n            dt.dropEffect = \"none\";\n        }\n    },\n\n    /**\n     * Event handler for a drop event.\n     *\n     * Args:\n     *     event (Event):\n     *         The drop event.\n     */\n    _onDrop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const  dt = event.originalEvent.dataTransfer;\n        const files = dt && dt.files;\n\n        if (files) {\n            this.model.handleFiles(files);\n        }\n    },\n\n    /**\n     * Handle when the user inputs a base directory.\n     *\n     * Args:\n     *     event (Event):\n     *         The form submit event.\n     */\n    _onBasedirSubmit(event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const basedir = this.$('#basedir-input').val();\n\n        if (basedir) {\n            this.model.set('basedir', basedir);\n        }\n    },\n\n    /**\n     * Handle when the user inputs a change number.\n     */\n    _onChangenumSubmit() {\n        const changenum = this.$('#changenum-input').val();\n\n        if (changenum) {\n            this.model.set('changeNumber', changenum);\n        }\n    },\n\n    /**\n     * Callback when \"start over\" is clicked.\n     */\n    _onStartOverClicked() {\n        const $input = this._$fileInput.clone(true);\n\n        this._$fileInput.replaceWith($input);\n        this._$fileInput = $input;\n\n        this.model.startOver();\n    },\n\n    /**\n     * Callback when \"Select [diff file]\" is clicked.\n     */\n    _onSelectFileClicked() {\n        this._$fileInput.click();\n    },\n});\n"]}