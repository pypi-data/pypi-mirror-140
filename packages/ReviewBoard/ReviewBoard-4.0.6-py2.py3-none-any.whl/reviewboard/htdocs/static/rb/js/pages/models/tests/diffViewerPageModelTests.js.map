{"version":3,"sources":["diffViewerPageModelTests.es6.js"],"names":[],"mappings":"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","file":"diffViewerPageModelTests.js","sourcesContent":["suite('rb/pages/models/DiffViewerPage', function() {\n    describe('parse', function() {\n        it('{}', function() {\n            const page = new RB.DiffViewerPage({}, {parse: true});\n\n            expect(page.get('reviewRequest')).toBeTruthy();\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('lastActivityTimestamp')).toBe(null);\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('checkUpdatesType')).toBe(null);\n            expect(page.get('numDiffs')).toBe(0);\n\n            expect(page.commentsHint).not.toBe(null);\n            expect(page.files).not.toBe(null);\n            expect(page.pagination).not.toBe(null);\n            expect(page.revision).not.toBe(null);\n\n            /* These shouldn't be attributes. */\n            expect(page.get('editorData')).toBe(undefined);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n        });\n\n        it('reviewRequestData', function() {\n            const page = new RB.DiffViewerPage({\n                reviewRequestData: {\n                    bugTrackerURL: 'http://bugs.example.com/--bug_id--/',\n                    id: 123,\n                    localSitePrefix: 's/foo/',\n                    branch: 'my-branch',\n                    bugsClosed: [101, 102, 103],\n                    closeDescription: 'This is closed',\n                    closeDescriptionRichText: true,\n                    description: 'This is a description',\n                    descriptionRichText: true,\n                    hasDraft: true,\n                    lastUpdatedTimestamp: '2017-08-23T15:10:20Z',\n                    public: true,\n                    repository: {\n                        id: 200,\n                        name: 'My repo',\n                        requiresBasedir: true,\n                        requiresChangeNumber: true,\n                        scmtoolName: 'My Tool',\n                        supportsPostCommit: true,\n                    },\n                    reviewURL: '/s/foo/r/123/',\n                    state: 'CLOSE_SUBMITTED',\n                    summary: 'This is a summary',\n                    targetGroups: [\n                        {\n                            name: 'Some group',\n                            url: '/s/foo/groups/some-group/',\n                        },\n                    ],\n                    targetPeople: [\n                        {\n                            username: 'some-user',\n                            url: '/s/foo/users/some-user/',\n                        },\n                    ],\n                    testingDone: 'This is testing done',\n                    testingDoneRichText: true,\n                    visibility: 'ARCHIVED',\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n\n            /* Check the review request. */\n            const reviewRequest = page.get('reviewRequest');\n            expect(reviewRequest).toBeTruthy();\n            expect(reviewRequest.id).toBe(123);\n            expect(reviewRequest.url())\n                .toBe('/s/foo/api/review-requests/123/');\n            expect(reviewRequest.get('bugTrackerURL'))\n                .toBe('http://bugs.example.com/--bug_id--/');\n            expect(reviewRequest.get('localSitePrefix')).toBe('s/foo/');\n            expect(reviewRequest.get('branch')).toBe('my-branch');\n            expect(reviewRequest.get('bugsClosed')).toEqual([101, 102, 103]);\n            expect(reviewRequest.get('closeDescription'))\n                .toBe('This is closed');\n            expect(reviewRequest.get('closeDescriptionRichText')).toBe(true);\n            expect(reviewRequest.get('description'))\n                .toBe('This is a description');\n            expect(reviewRequest.get('descriptionRichText')).toBe(true);\n            expect(reviewRequest.get('hasDraft')).toBe(true);\n            expect(reviewRequest.get('lastUpdatedTimestamp'))\n                .toBe('2017-08-23T15:10:20Z');\n            expect(reviewRequest.get('public')).toBe(true);\n            expect(reviewRequest.get('reviewURL')).toBe('/s/foo/r/123/');\n            expect(reviewRequest.get('state'))\n                .toBe(RB.ReviewRequest.CLOSE_SUBMITTED);\n            expect(reviewRequest.get('summary'))\n                .toBe('This is a summary');\n            expect(reviewRequest.get('targetGroups')).toEqual([{\n                name: 'Some group',\n                url: '/s/foo/groups/some-group/',\n            }]);\n            expect(reviewRequest.get('targetPeople')).toEqual([{\n                username: 'some-user',\n                url: '/s/foo/users/some-user/',\n            }]);\n            expect(reviewRequest.get('testingDone'))\n                .toBe('This is testing done');\n            expect(reviewRequest.get('testingDoneRichText')).toBe(true);\n            expect(reviewRequest.get('visibility'))\n                .toBe(RB.ReviewRequest.VISIBILITY_ARCHIVED);\n\n            /* Check the review request's repository. */\n            const repository = reviewRequest.get('repository');\n            expect(repository.id).toBe(200);\n            expect(repository.get('name')).toBe('My repo');\n            expect(repository.get('requiresBasedir')).toBe(true);\n            expect(repository.get('requiresChangeNumber')).toBe(true);\n            expect(repository.get('scmtoolName')).toBe('My Tool');\n            expect(repository.get('supportsPostCommit')).toBe(true);\n        });\n\n        it('extraReviewRequestDraftData', function() {\n            const page = new RB.DiffViewerPage({\n                extraReviewRequestDraftData: {\n                    changeDescription: 'Draft change description',\n                    changeDescriptionRichText: true,\n                    interdiffLink: '/s/foo/r/123/diff/1-2/',\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n\n            const draft = page.get('reviewRequest').draft;\n            expect(draft.get('changeDescription'))\n                .toBe('Draft change description');\n            expect(draft.get('changeDescriptionRichText')).toBe(true);\n            expect(draft.get('interdiffLink')).toBe('/s/foo/r/123/diff/1-2/');\n        });\n\n        it('editorData', function() {\n            const page = new RB.DiffViewerPage({\n                editorData: {\n                    changeDescriptionRenderedText: 'Change description',\n                    closeDescriptionRenderedText: 'This is closed',\n                    hasDraft: true,\n                    mutableByUser: true,\n                    showSendEmail: true,\n                    statusMutableByUser: true,\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('editorData')).toBe(undefined);\n\n            /* Check the ReviewRequestEditor. */\n            const editor = page.reviewRequestEditor;\n            expect(editor.get('changeDescriptionRenderedText'))\n                .toBe('Change description');\n            expect(editor.get('closeDescriptionRenderedText'))\n                .toBe('This is closed');\n            expect(editor.get('hasDraft')).toBe(true);\n            expect(editor.get('mutableByUser')).toBe(true);\n            expect(editor.get('showSendEmail')).toBe(true);\n            expect(editor.get('statusMutableByUser')).toBe(true);\n        });\n\n        it('lastActivityTimestamp', function() {\n            const page = new RB.DiffViewerPage({\n                lastActivityTimestamp: '2017-08-22T18:20:30Z',\n                checkUpdatesType: 'diff',\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('lastActivityTimestamp'))\n                .toBe('2017-08-22T18:20:30Z');\n        });\n\n        it('checkUpdatesType', function() {\n            const page = new RB.DiffViewerPage({\n                checkUpdatesType: 'diff',\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkUpdatesType')).toBe('diff');\n        });\n\n        it('comments_hint', function() {\n            const page = new RB.DiffViewerPage({\n                comments_hint: {\n                    diffsets_with_comments: [\n                        {\n                            revision: 1,\n                            is_current: false,\n                        },\n                    ],\n                    has_other_comments: true,\n                    interdiffs_with_comments: [\n                        {\n                            old_revision: 1,\n                            new_revision: 2,\n                            is_current: true,\n                        },\n                    ],\n                },\n            }, {\n                parse: true,\n            });\n\n            const commentsHint = page.commentsHint;\n            expect(commentsHint.get('hasOtherComments')).toBe(true);\n            expect(commentsHint.get('diffsetsWithComments')).toEqual([\n                {\n                    revision: 1,\n                    isCurrent: false,\n                },\n            ]);\n            expect(commentsHint.get('interdiffsWithComments')).toEqual([\n                {\n                    oldRevision: 1,\n                    newRevision: 2,\n                    isCurrent: true,\n                },\n            ]);\n        });\n    });\n\n    describe('loadDiffRevision', function() {\n        let page;\n\n        beforeEach(function() {\n            page = new RB.DiffViewerPage({\n                reviewRequestData: {\n                    id: 123,\n                },\n            }, {\n                parse: true,\n            });\n\n            spyOn($, 'ajax').and.callFake(url => {\n                const query = {};\n                const queryParams = url.split('?')[1].split('&');\n\n                for (let i = 0; i < queryParams.length; i++) {\n                    const pair = queryParams[i].split('=');\n                    query[decodeURIComponent(pair[0])] =\n                        decodeURIComponent(pair[1]);\n                }\n\n                return {\n                    done: cb => cb({\n                        diff_context: {\n                            revision: {\n                                revision: query.revision,\n                                interdiff_revision:\n                                    query['interdiff-revision'] || null,\n                            },\n                        },\n                    }),\n                };\n            });\n        });\n\n        describe('Generates URL for', function() {\n            it('First page, normal diffs', function() {\n                page.loadDiffRevision({\n                    page: 1,\n                    revision: 1,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/?revision=1');\n            });\n\n            it('Other page, normal diffs', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&page=2');\n            });\n\n            it('First page, interdiffs', function() {\n                page.loadDiffRevision({\n                    page: 1,\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&interdiff-revision=2');\n            });\n\n            it('Other page, interdiffs', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&interdiff-revision=2&page=2');\n            });\n\n            it('Filename patterns', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                    filenamePatterns: '*.txt,src/*',\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&page=2&filenames=*.txt%2Csrc%2F*');\n            });\n        });\n\n        describe('Sets canDownloadDiff to', function() {\n            it('true for normal diffs', function() {\n                page.loadDiffRevision({\n                    revision: 1,\n                });\n                expect(page.get('canDownloadDiff')).toBe(true);\n            });\n\n            it('false for interdiffs', function() {\n                page.loadDiffRevision({\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n                expect(page.get('canDownloadDiff')).toBe(false);\n            });\n        });\n    });\n});\n"]}