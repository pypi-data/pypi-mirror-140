{"version":3,"sources":["textBasedReviewableViewTests.es6.js"],"names":[],"mappings":"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","file":"textBasedReviewableViewTests.js","sourcesContent":["suite('rb/views/TextBasedReviewableView', function() {\n    const template = dedent`\n      <div id=\"container\">\n       <div class=\"text-review-ui-views\">\n        <ul>\n         <li class=\"active\" data-view-mode=\"rendered\">\n          <a href=\"#rendered\">Rendered</a>\n         </li>\n         <li data-view-mode=\"source\"><a href=\"#source\">Source</a></li>\n        </ul>\n       </div>\n       <table class=\"text-review-ui-rendered-table\"></table>\n       <table class=\"text-review-ui-text-table\"></table>\n      </div>\n    `;\n\n    let $container;\n    let reviewRequest;\n    let model;\n    let view;\n\n    beforeEach(function() {\n        $container = $(template).appendTo($testsScratch);\n\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/123/',\n        });\n\n        model = new RB.TextBasedReviewable({\n            hasRenderedView: true,\n            viewMode: 'rendered',\n            fileAttachmentID: 456,\n            reviewRequest: reviewRequest,\n        });\n\n        view = new RB.TextBasedReviewableView({\n            model: model,\n            el: $container,\n        });\n\n        /*\n         * Disable the router so that the page doesn't change the URL on the\n         * page while tests run.\n         */\n        spyOn(window.history, 'pushState');\n        spyOn(window.history, 'replaceState');\n\n        /*\n         * Bypass all the actual history logic and get to the actual\n         * router handler.\n         */\n        spyOn(Backbone.history, 'matchRoot').and.returnValue(true);\n        spyOn(view.router, 'trigger').and.callThrough();\n        spyOn(view.router, 'navigate').and.callFake((url, options) => {\n            if (!options || options.trigger !== false) {\n                Backbone.history.loadUrl(url);\n            }\n        });\n\n        view.render();\n    });\n\n    afterEach(function() {\n        view.remove();\n        $container.remove();\n\n        Backbone.history.stop();\n    });\n\n    it('Router switches view modes', function() {\n        view.router.navigate('#rendered');\n        expect(view.router.trigger).toHaveBeenCalledWith('route:viewMode', 'rendered', null, null);\n        expect($container.find('.active').attr('data-view-mode')).toBe('rendered');\n        expect(model.get('viewMode')).toBe('rendered');\n\n        view.router.navigate('#source');\n        expect(view.router.trigger).toHaveBeenCalledWith('route:viewMode', 'source', null, null);\n        expect($container.find('.active').attr('data-view-mode')).toBe('source');\n        expect(model.get('viewMode')).toBe('source');\n\n        view.router.navigate('#rendered');\n        expect(view.router.trigger).toHaveBeenCalledWith('route:viewMode', 'rendered', null, null);\n        expect($container.find('.active').attr('data-view-mode')).toBe('rendered');\n        expect(model.get('viewMode')).toBe('rendered');\n    });\n});\n"]}