{"version":3,"sources":["diffReviewableModelTests.es6.js"],"names":[],"mappings":"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","file":"diffReviewableModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffReviewable', function() {\n    let callbacks;\n    let reviewRequest;\n\n    beforeEach(function() {\n        callbacks = {\n            success: function() {},\n            error: function() {},\n            complete: function() {},\n        };\n\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/1/',\n        });\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n        spyOn(callbacks, 'complete');\n    });\n\n    describe('getRenderedDiff', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3/?index=4&' + TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With base FileDiff', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                baseFileDiffID: 1,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?base-filediff-id=1&index=4&' +\n                    TEMPLATE_SERIAL);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiff(callbacks);\n\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('getRenderedDiffFragment', function() {\n        it('Without interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe('/r/1/diff/2/fragment/3/chunk/4/');\n                expect(request.data.index).toBe(5);\n                expect(request.data['lines-of-context']).toBe(6);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With interdiffs', function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe('/r/1/diff/2-3/fragment/3-4/chunk/4/');\n                expect(request.data.index).toBe(5);\n                expect(request.data['lines-of-context']).toBe(6);\n\n                request.success('abc');\n                request.complete('abc', 'success');\n            });\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            }, callbacks);\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalledWith('abc');\n            expect(callbacks.complete).toHaveBeenCalledWith('abc', 'success');\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}