{"version":3,"sources":["diffCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"diffCommentModelTests.js","sourcesContent":["suite('rb/resources/models/DiffComment', function() {\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.DiffComment({\n            fileDiffID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            })\n        });\n    });\n\n    it('getNumLines', function() {\n        model.set({\n            beginLineNum: 5,\n            endLineNum: 10,\n        });\n\n        expect(model.getNumLines()).toBe(6);\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                diff_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    first_line: 10,\n                    num_lines: 5,\n                    filediff: {\n                        id: 1,\n                        source_file: 'my-file',\n                    },\n                    interfilediff: {\n                        id: 2,\n                        source_file: 'my-file',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.beginLineNum).toBe(10);\n            expect(data.endLineNum).toBe(14);\n            expect(data.fileDiff).not.toBe(undefined);\n            expect(data.fileDiff.id).toBe(1);\n            expect(data.fileDiff.get('sourceFilename')).toBe('my-file');\n            expect(data.interFileDiff).not.toBe(undefined);\n            expect(data.interFileDiff.id).toBe(2);\n            expect(data.interFileDiff.get('sourceFilename')).toBe('my-file');\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        it('first_line field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 100\n            });\n\n            const data = model.toJSON();\n            expect(data.first_line).toBe(100);\n        });\n\n        it('num_lines field', function() {\n            model.set({\n                beginLineNum: 100,\n                endLineNum: 105\n            });\n\n            const data = model.toJSON();\n            expect(data.num_lines).toBe(6);\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        describe('filediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                const data = model.toJSON();\n                expect(data.filediff_id).toBe(16);\n            });\n        });\n\n        describe('interfilediff_id field', function() {\n            it('When loaded', function() {\n                model.set('loaded', true);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set('interFileDiffID', 50);\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(50);\n            });\n\n            it('When not loaded and unset', function() {\n                const data = model.toJSON();\n                expect(data.interfilediff_id).toBe(undefined);\n            });\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('beginLineNum/endLineNum', function() {\n            describe('Valid values', function() {\n                it('beginLineNum == 0, endLineNum == 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 0,\n                        endLineNum: 0,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum == beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 10,\n                    })).toBe(undefined);\n                });\n\n                it('beginLineNum > 0, endLineNum > 0', function() {\n                    expect(model.validate({\n                        beginLineNum: 10,\n                        endLineNum: 11,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                it('beginLineNum < 0', function() {\n                    expect(model.validate({\n                        beginLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.BEGINLINENUM_GTE_0);\n                });\n\n                it('endLineNum < 0', function() {\n                    expect(model.validate({\n                        endLineNum: -1,\n                    })).toBe(RB.DiffComment.strings.ENDLINENUM_GTE_0);\n                });\n\n                it('endLineNum < beginLineNum', function() {\n                    expect(model.validate({\n                        beginLineNum: 20,\n                        endLineNum: 10,\n                    })).toBe(\n                        RB.DiffComment.strings.BEGINLINENUM_LTE_ENDLINENUM);\n                });\n            });\n        });\n\n        describe('fileDiffID', function() {\n            it('With value', function() {\n                expect(model.validate({\n                    fileDiffID: 42,\n                })).toBe(undefined);\n            });\n\n            it('Unset', function() {\n                expect(model.validate({\n                    fileDiffID: null,\n                })).toBe(RB.DiffComment.strings.INVALID_FILEDIFF_ID);\n            });\n        });\n    });\n});\n"]}