{"version":3,"sources":["diffCommitListViewTests.es6.js"],"names":[],"mappings":"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","file":"diffCommitListViewTests.js","sourcesContent":["suite('rb/diffviewer/views/DiffCommitListView', function() {\n    function testRows($rows, options) {\n        expect($rows.length).toEqual(options.rowOptions.length);\n\n        const linkIndex = (\n            (options.haveHistory ? 1 : 0) +\n            (options.haveInterCommitDiffControls ? 2 : 0)\n        );\n\n        const valueStartIndex = (\n            linkIndex +\n            (options.haveExpandCollapse ? 1 : 0)\n        );\n\n        for (let i = 0; i < $rows.length; i++) {\n            const $row = $rows.eq(i).find('td');\n\n            const rowOptions = options.rowOptions[i];\n            const values = rowOptions.values;\n\n            expect($row.length).toEqual(values.length + valueStartIndex);\n\n            if (options.haveHistory) {\n                expect($row.eq(0).text().trim()).toEqual(\n                    rowOptions.historySymbol.trim());\n            }\n\n            if (options.haveInterCommitDiffControls) {\n                const $baseSelector = $row.eq(0).find('input');\n                expect($baseSelector.length).toEqual(1);\n                expect($baseSelector.attr('value')).toEqual((i + 1).toString());\n                expect($baseSelector.prop('checked')).toEqual(\n                    !!rowOptions.baseSelected);\n                expect($baseSelector.prop('disabled')).toEqual(\n                    !!rowOptions.baseDisabled);\n\n                const $tipSelector = $row.eq(1).find('input');\n                expect($tipSelector.length).toEqual(1);\n                expect($tipSelector.attr('value')).toEqual((i + 1).toString());\n                expect($tipSelector.prop('checked')).toEqual(\n                    rowOptions.tipSelected ? true : false);\n                expect($tipSelector.prop('disabled')).toEqual(\n                    !!rowOptions.tipDisabled);\n            }\n\n            if (options.haveExpandCollapse) {\n                const $link = $row.eq(linkIndex).find('a');\n\n                if (rowOptions.haveExpandCollapse) {\n                    expect($link.length).toEqual(1);\n\n                    const $span = $link.find('span');\n\n                    if (rowOptions.expanded) {\n                        expect($span.attr('class')).toEqual('fa fa-minus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Collapse commit message.'));\n                    } else {\n                        expect($span.attr('class')).toEqual('fa fa-plus');\n                        expect($span.attr('title'))\n                            .toEqual(gettext('Expand commit message.'));\n                    }\n                }\n            }\n\n            for (let j = 0; j < values; j++) {\n                expect($row.eq(valueStartIndex + j).text().trim()).toEqual(values[j]);\n            }\n        }\n    }\n\n    let view;\n    let $container;\n\n    beforeEach(function() {\n        $container = $('<div class=\"diff-commit-list\" />')\n            .appendTo($testsScratch);\n    });\n\n    afterEach(function() {\n        view.remove();\n        view = null;\n        $container = null;\n    });\n\n    describe('Render', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 1',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 2',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                historyDiff: new RB.CommitHistoryDiffEntryCollection(),\n                isInterdiff: false,\n                baseCommitID: null,\n                tipCommitID: null,\n            });\n        });\n\n        it('Without expand/collapse column', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n        });\n\n        it('With expand/collapse column', function() {\n            model.get('commits').models[0].set({\n                commitMessage: 'Long commit message\\n\\n' +\n                               'This is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: false,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Updates when collection reset', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            let $table = $container.find('table');\n\n            let $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                rowOptions: [\n                    {values: ['Commit message 1', 'Example Author']},\n                    {values: ['Commit message 2', 'Example Author']},\n                ],\n            });\n\n            model.get('commits').reset([\n                {\n                    commit_id: 'r4',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4\\n\\nIt is very long',\n                },\n            ], {parse: true});\n\n            $table = $container.find('table');\n\n            $cols = $table.find('thead th');\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Interdiff', function() {\n            model.get('historyDiff').reset([\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.REMOVED,\n                    old_commit_id: 1,\n                },\n                {\n                    entry_type: RB.CommitHistoryDiffEntry.ADDED,\n                    new_commit_id: 2,\n                }\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(3);\n            expect($cols.eq(0).text().trim()).toEqual('');\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: false,\n                haveHistory: true,\n                rowOptions: [\n                    {\n                        historySymbol: '-',\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        historySymbol: '+',\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff Controls', function() {\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        values: ['Commit message 1', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With Inter-Commit Diff and Expand/Collapse Controls', function() {\n             model.get('commits').get(1).set({\n                commitMessage: 'Long commit message\\n' +\n                               '\\nThis is a long message.\\n',\n                summary: 'Long commit message',\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        baseSelected: true,\n                        haveExpandCollapse: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipSelected: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('With base and tip commit IDs set', function() {\n            const commits = model.get('commits');\n\n            commits.add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            model.set({\n                'baseCommitID': commits.findWhere({commitID: 'r2'}).id,\n                'tipCommitID': commits.findWhere({commitID: 'r3'}).id,\n            });\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                model: model,\n                showInterCommitDiffControls: true,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n            expect($cols.length).toEqual(4);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('First'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Last'));\n            expect($cols.eq(2).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(3).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveInterCommitDiffControls: true,\n                rowOptions: [\n                    {\n                        tipDisabled: true,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        tipDisabled: true,\n                        values: ['Commit message 2', 'Example Author'],\n                    },\n                    {\n                        baseSelected: true,\n                        tipSelected: true,\n                        values: ['Commit message 3', 'Example Author'],\n\n                    },\n                    {\n                        baseDisabled: true,\n                        values: ['Commit message 4', 'Example Author'],\n                    },\n                ],\n            });\n        });\n    });\n\n    describe('Event handlers', function() {\n        let model;\n\n        beforeEach(function() {\n            let commits = new RB.DiffCommitCollection([\n                {\n                    id: 1,\n                    commit_id: 'r1',\n                    parent_id: 'r0',\n                    author_name: 'Example Author',\n                    commit_message: 'Long commit message\\n\\n' +\n                                    'This is a long message.\\n',\n                },\n                {\n                    id: 2,\n                    commit_id: 'r2',\n                    parent_id: 'r1',\n                    author_name: 'Example Author',\n                    commit_message: 'Super long\\n\\nSo very long.',\n                },\n            ], {parse: true});\n\n            model = new RB.DiffCommitList({\n                commits,\n                isInterdiff: false,\n            });\n        });\n\n        it('Expand/collapse', function() {\n            view = new RB.DiffCommitListView({\n                model: model,\n                el: $container,\n            });\n\n            view.render();\n\n            const $table = $container.find('table');\n            const $cols = $table.find('thead th');\n\n            expect($cols.length).toEqual(2);\n            expect($cols.eq(0).text().trim()).toEqual(gettext('Summary'));\n            expect($cols.eq(1).text().trim()).toEqual(gettext('Author'));\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            const $links = $table.find('a');\n\n            // Expand first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Long commit message\\n\\nThis is a long message.',\n                            'Example Author',\n                        ],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Collapse first row.\n            $links.eq(0).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        iconClass: 'fa-plus',\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n\n            // Expand second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: true,\n                        values: [\n                            'Super long\\n\\nSo very long.',\n                            'Example Author',\n                        ],\n                    },\n                ],\n            });\n\n            // Collapse second row.\n            $links.eq(1).click();\n\n            testRows($table.find('tbody tr'), {\n                haveExpandCollapse: true,\n                rowOptions: [\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Long commit message', 'Example Author'],\n                    },\n                    {\n                        haveExpandCollapse: true,\n                        expanded: false,\n                        values: ['Super long', 'Example Author'],\n                    },\n                ],\n            });\n        });\n\n        it('Select base/tip', function() {\n            model.get('commits').add([\n                {\n                    id: 3,\n                    commit_id: 'r3',\n                    parent_id: 'r2',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 3',\n\n                },\n                {\n                    id: 4,\n                    commit_id: 'r4',\n                    parent_id: 'r3',\n                    author_name: 'Example Author',\n                    commit_message: 'Commit message 4',\n                },\n            ], {parse: true});\n\n            view = new RB.DiffCommitListView({\n                el: $container,\n                showInterCommitDiffControls: true,\n                model: model,\n            });\n            view.render();\n\n            const $baseSelectors = $container.find('.base-commit-selector');\n            const $tipSelectors = $container.find('.tip-commit-selector');\n\n            expect($baseSelectors.length).toEqual(4);\n            expect($tipSelectors.length).toEqual(4);\n\n            // Select the interval (r4, r4].\n            $baseSelectors.eq(3).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(3);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r4].\n            $baseSelectors.eq(0).click();\n\n            for (let i = 0; i < 4; i++) {\n                expect($baseSelectors.eq(i).prop('disabled')).toEqual(false);\n                expect($tipSelectors.eq(i).prop('disabled')).toEqual(false);\n            }\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(null);\n\n            // Select the interval (r1, r1].\n            $tipSelectors.eq(0).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(true);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(3).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(null);\n            expect(model.get('tipCommitID')).toEqual(1);\n\n            // Select the interval (r3, r3].\n            $tipSelectors.eq(2).click();\n            $baseSelectors.eq(2).click();\n\n            expect($baseSelectors.eq(0).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(1).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($baseSelectors.eq(3).prop('disabled')).toEqual(true);\n\n            expect($tipSelectors.eq(0).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(1).prop('disabled')).toEqual(true);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n            expect($tipSelectors.eq(2).prop('disabled')).toEqual(false);\n\n            expect(model.get('baseCommitID')).toEqual(2);\n            expect(model.get('tipCommitID')).toEqual(3);\n        });\n    });\n});\n"]}