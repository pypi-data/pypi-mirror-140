{"version":3,"sources":["diffRevisionSelectorView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,EAAE,CAAC,wBAAH,GAA8B,EAAE,CAAC,oBAAH,CAAwB,MAAxB,CAA+B;AACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,UAAU,EAAE,oBAAS,OAAT,EAAkB;AAC1B,SAAK,OAAL,GAAe,OAAf;AAEA,IAAA,EAAE,CAAC,oBAAH,CAAwB,SAAxB,CAAkC,UAAlC,CAA6C,IAA7C,CAAkD,IAAlD,EAAwD;AACpD,MAAA,gBAAgB,EAAE,IADkC;AAEpD,MAAA,UAAU,EAAE;AAFwC,KAAxD;AAIH,GAnBwD;;AAqBzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MAAM,EAAE,kBAAW;AACf,QAAM,MAAM,GAAG,CAAC,MAAD,CAAf;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,KAAK,OAAL,CAAa,QAAlC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,MAAA,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,QAAF,EAAZ;AACH;;AAED,WAAO,EAAE,CAAC,oBAAH,CAAwB,SAAxB,CAAkC,MAAlC,CAAyC,IAAzC,CAA8C,IAA9C,EAAoD,MAApD,CAAP;AACH,GApCwD;;AAsCzD;AACJ;AACA;AACI,EAAA,OAAO,EAAE,mBAAW;AAChB,QAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,UAAf,CAAjB;AACA,QAAM,iBAAiB,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,mBAAf,CAA1B;AAEA,SAAK,OAAL,GAAe,CACX,iBAAiB,GAAG,QAAH,GAAc,CADpB,EAEX,iBAAiB,GAAG,iBAAH,GAAuB,QAF7B,CAAf;;AAKA,QAAI,KAAK,SAAT,EAAoB;AAChB,WAAK,cAAL;AACH;AACJ,GArDwD;;AAuDzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,aAAa,EAAE,uBAAS,EAAT,EAAa;AACxB,QAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,aAAJ,CAAjB;AAEA,SAAK,OAAL,CAAa,kBAAb,EAAiC,CAAC,CAAD,EAAI,OAAO,CAAC,IAAR,CAAa,UAAb,CAAJ,CAAjC;AACH;AAvEwD,CAA/B,CAA9B","file":"diffRevisionSelectorView.js","sourcesContent":["/**\n * A view that allows users to select a revision of the diff to view.\n */\nRB.DiffRevisionSelectorView = RB.RevisionSelectorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     numDiffs (number):\n     *         The total number of diff revisions available.\n     */\n    initialize: function(options) {\n        this.options = options;\n\n        RB.RevisionSelectorView.prototype.initialize.call(this, {\n            firstLabelActive: true,\n            numHandles: 2,\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffRevisionSelectorView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        const labels = ['orig'];\n\n        for (let i = 1; i <= this.options.numDiffs; i++) {\n            labels.push(i.toString());\n        }\n\n        return RB.RevisionSelectorView.prototype.render.call(this, labels);\n    },\n\n    /**\n     * Update the displayed revision based on the model.\n     */\n    _update: function() {\n        const revision = this.model.get('revision');\n        const interdiffRevision = this.model.get('interdiffRevision');\n\n        this._values = [\n            interdiffRevision ? revision : 0,\n            interdiffRevision ? interdiffRevision : revision\n        ];\n\n        if (this._rendered) {\n            this._updateHandles();\n        }\n    },\n\n    /**\n     * Callback for when one of the labels is clicked.\n     *\n     * This will jump to the target revision.\n     *\n     * TODO: we should allow people to click and drag over a range of labels to\n     * select an interdiff.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    _onLabelClick: function(ev) {\n        const $target = $(ev.currentTarget);\n\n        this.trigger('revisionSelected', [0, $target.data('revision')]);\n    },\n});\n"]}