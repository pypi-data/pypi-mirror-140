{"version":3,"sources":["generalCommentModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,oCAAD,EAAuC,YAAW;AACnD,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB;AACA,IAAA,KAAK,GAAG,IAAI,EAAE,CAAC,cAAP,CAAsB;AAC1B,MAAA,YAAY,EAAE,IAAI,EAAE,CAAC,YAAP,CAAoB;AAC9B,kBAAU;AADoB,OAApB;AADY,KAAtB,CAAR;AAKH,GAPS,CAAV;AASA,EAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AACzB,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,UAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;AACrB,QAAA,IAAI,EAAE,IADe;AAErB,QAAA,eAAe,EAAE;AACb,UAAA,EAAE,EAAE,EADS;AAEb,UAAA,YAAY,EAAE,IAFD;AAGb,UAAA,YAAY,EAAE,UAHD;AAIb,UAAA,SAAS,EAAE,UAJE;AAKb,UAAA,IAAI,EAAE;AALO;AAFI,OAAZ,CAAb;AAWA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,EAAN,CAAN,CAAgB,IAAhB,CAAqB,EAArB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,IAA9B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,EAAE,CAAC,WAAH,CAAe,cAA7C;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,IAA3B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,KAAvB;AACH,KAlBC,CAAF;AAmBH,GApBO,CAAR;AAsBA,EAAA,QAAQ,CAAC,QAAD,EAAW,YAAW;AAC1B,IAAA,EAAE,CAAC,2BAAD,EAA8B,YAAW;AACvC,MAAA,KAAK,CAAC,EAAE,CAAC,WAAH,CAAe,SAAhB,EAA2B,QAA3B,CAAL,CAA0C,GAA1C,CAA8C,WAA9C;AACA,MAAA,KAAK,CAAC,MAAN;AACA,MAAA,MAAM,CAAC,EAAE,CAAC,WAAH,CAAe,SAAf,CAAyB,MAA1B,CAAN,CAAwC,gBAAxC;AACH,KAJC,CAAF;AAKH,GANO,CAAR;AAQA,EAAA,QAAQ,CAAC,UAAD,EAAa,YAAW;AAC5B,IAAA,EAAE,CAAC,oBAAD,EAAuB,YAAW;AAChC,MAAA,KAAK,CAAC,EAAE,CAAC,WAAH,CAAe,SAAhB,EAA2B,UAA3B,CAAL;AACA,MAAA,KAAK,CAAC,QAAN,CAAe,EAAf;AACA,MAAA,MAAM,CAAC,EAAE,CAAC,WAAH,CAAe,SAAf,CAAyB,QAA1B,CAAN,CAA0C,gBAA1C;AACH,KAJC,CAAF;AAKH,GANO,CAAR;AAOH,CAjDI,CAAL","file":"generalCommentModelTests.js","sourcesContent":["suite('rb/resources/models/GeneralComment', function() {\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.GeneralComment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                general_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n    });\n});\n"]}