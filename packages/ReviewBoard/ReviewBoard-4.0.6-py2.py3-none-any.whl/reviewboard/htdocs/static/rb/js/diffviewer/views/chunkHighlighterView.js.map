{"version":3,"sources":["chunkHighlighterView.es6.js"],"names":[],"mappings":"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","file":"chunkHighlighterView.js","sourcesContent":["/**\n * Highlights a chunk of the diff.\n *\n * This will create and move four border elements around the chunk. We use\n * these border elements instead of setting a border since few browsers\n * render borders on <tbody> tags the same, and give us few options for\n * styling.\n *\n * In practice, there's only ever one highlighter on a page at a time.\n */\nRB.ChunkHighlighterView = Backbone.View.extend({\n    className: 'diff-highlight',\n\n    /**\n     * Initialize the highlighter.\n     */\n    initialize() {\n        this._chunkEl = null;\n        this._chunkContainerEl = null;\n        this._$pageContainer = null;\n        this._$window = $(window);\n        this._prevWindowWidth = null;\n        this._prevTop = null;\n        this._prevHeight = null;\n\n        _.bindAll(this, 'updateLayout');\n    },\n\n    /**\n     * Render the highlighter to the page.\n     *\n     * This will create all the border elements and compute any variables\n     * we want to keep around for further rendering.\n     *\n     * Returns:\n     *     RB.ChunkHighlighterView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$window.on('resize.' + this.cid, () => {\n            const windowWidth = this._$window.width();\n\n            if (windowWidth !== this._prevWindowWidth) {\n                this._prevWindowWidth = windowWidth;\n\n                this.updateLayout();\n            }\n        });\n\n        this._$pageContainer = $('#page-container');\n\n        this.updateLayout();\n\n        return this;\n    },\n\n    /**\n     * Remove the highlighter from the page and disconnects all events.\n     */\n    remove() {\n        Backbone.View.prototype.remove.call(this);\n\n        this._$window.off(this.cid);\n    },\n\n    /**\n     * Highlight a new chunk element.\n     *\n     * The borders will surround the chunk element and track its position\n     * and size as the page updates.\n     *\n     * Args:\n     *     $chunk (jQuery):\n     *         The chunk element to highlight.\n     */\n    highlight($chunk) {\n        this._chunkEl = $chunk[0];\n        this._chunkContainerEl = $chunk.parents('.diff-container')[0];\n\n        this.updateLayout();\n    },\n\n    /**\n     * Update of the position of the highlighter.\n     */\n    updateLayout() {\n        const chunkEl = this._chunkEl;\n\n        if (!chunkEl) {\n            return;\n        }\n\n        let changed = false;\n        const css = {};\n\n        /*\n         * NOTE: We're hard-coding the border widths (1px) so we don't have to\n         *       look them up. The borders aren't directly on the chunk (and\n         *       may not even be on a child of this chunk), and it's a bit\n         *       slow to look these up.\n         */\n        const top = Math.floor(chunkEl.offsetTop +\n                               this._chunkContainerEl.offsetTop + 1);\n        const height = chunkEl.clientHeight + 1;\n\n        if (top !== this._prevTop) {\n            css.top = top;\n            this._prevTop = top;\n            changed = true;\n        }\n\n        if (height !== this._prevHeight) {\n            css.height = height;\n            this._prevHeight = height;\n            changed = true;\n        }\n\n        if (changed) {\n            /*\n             * If the positions of the chunk changed, then it's possible the\n             * page container's padding has also changed (zooming in/out), so\n             * be safe and recompute.\n             *\n             * Technically we should compute separately for the left and right\n             * sides, but in practice we apply even spacing. Save a\n             * calculation, since this happens in resize events.\n             */\n            const padding = this._$pageContainer.getExtents('p', 'l');\n            css.left = -padding;\n            css.right = -padding;\n\n            this.$el.css(css);\n        }\n    },\n});\n"]}