{"version":3,"sources":["draftReviewRequestModelTests.es6.js"],"names":[],"mappings":"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","file":"draftReviewRequestModelTests.js","sourcesContent":["suite('rb/resources/models/DraftReviewRequest', function() {\n    let draft;\n    let callbacks;\n\n    beforeEach(function() {\n        const reviewRequest = new RB.ReviewRequest({\n            id: 1,\n            links: {\n                draft: {\n                    href: '/api/review-requests/123/draft/',\n                },\n            },\n        });\n\n        draft = reviewRequest.draft;\n\n        callbacks = {\n            success: function() {},\n            error: function() {},\n        };\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n\n        spyOn(reviewRequest, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n\n        spyOn(reviewRequest, 'ensureCreated').and.callFake(\n            (options, context) => options.success.call(context));\n\n        spyOn(draft, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n    });\n\n    it('url', function() {\n        expect(draft.url()).toBe('/api/review-requests/123/draft/');\n    });\n\n    it('publish', function() {\n        spyOn(RB, 'apiCall').and.callThrough();\n        spyOn($, 'ajax').and.callFake(request => {\n            expect(request.data.public).toBe(1);\n\n            request.success({\n                stat: 'ok',\n                draft: {\n                    id: 1,\n                    links: {},\n                },\n            });\n        });\n\n        /* Set some fields in order to pass validation. */\n        draft.set({\n            targetGroups: [{\n                name: 'mygroup',\n                url: '/groups/mygroup',\n            }],\n            summary: 'My summary',\n            description: 'My description',\n        });\n\n        draft.publish({\n            success: callbacks.success,\n            error: callbacks.error,\n        });\n\n        expect(callbacks.error).not.toHaveBeenCalled();\n        expect(callbacks.success).toHaveBeenCalled();\n        expect(RB.apiCall).toHaveBeenCalled();\n        expect($.ajax).toHaveBeenCalled();\n    });\n\n    it('parse', function() {\n        const data = draft.parse({\n            stat: 'ok',\n            draft: {\n                id: 1,\n                branch: 'branch',\n                bugs_closed: 'bugsClosed',\n                changedescription: 'changeDescription',\n                changedescription_text_type: 'markdown',\n                description: 'description',\n                'public': 'public',\n                description_text_type: 'markdown',\n                summary: 'summary',\n                target_groups: 'targetGroups',\n                target_people: 'targetPeople',\n                testing_done: 'testingDone',\n                testing_done_text_type: 'plain',\n                links: {\n                    submitter: 'submitter',\n                },\n            },\n        });\n\n        expect(data).not.toBe(undefined);\n        expect(data.id).toBe(1);\n        expect(data.branch).toBe('branch');\n        expect(data.bugsClosed).toBe('bugsClosed');\n        expect(data.changeDescription).toBe('changeDescription');\n        expect(data.changeDescriptionRichText).toBe(true);\n        expect(data.description).toBe('description');\n        expect(data.descriptionRichText).toBe(true);\n        expect(data.public).toBe('public');\n        expect(data.summary).toBe('summary');\n        expect(data.submitter).toBe('submitter');\n        expect(data.targetGroups).toBe('targetGroups');\n        expect(data.targetPeople).toBe('targetPeople');\n        expect(data.testingDone).toBe('testingDone');\n        expect(data.testingDoneRichText).toBe(false);\n    });\n});\n"]}