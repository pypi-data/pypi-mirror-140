{"version":3,"sources":["dialogViewTests.es6.js"],"names":[],"mappings":"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","file":"dialogViewTests.js","sourcesContent":["suite('rb/ui/views/DialogView', function() {\n    describe('Buttons', function() {\n        describe('Settings', function() {\n            it('Default', function() {\n                const dialogView = new RB.DialogView({\n                    buttons: [\n                        {\n                            label: 'Test',\n                            id: 'testid',\n                        }\n                    ],\n                });\n                dialogView._makeButtons();\n\n                const buttons = dialogView.$buttonsMap;\n                const button = buttons.testid;\n\n                expect(Object.keys(buttons).length).toBe(1);\n                expect(button.val()).toBe('Test');\n                expect(button.prop('id')).toBe('testid');\n                expect(button.prop('disabled')).toBe(false);\n                expect(button.hasClass('primary')).toBe(false);\n                expect(button.hasClass('danger')).toBe(false);\n            });\n\n            it('Primary', function() {\n                const dialogView = new RB.DialogView({\n                    buttons: [\n                        {\n                            label: 'Test',\n                            id: 'testid',\n                            primary: true,\n                        },\n                    ],\n                });\n                dialogView._makeButtons();\n\n                const buttons = dialogView.$buttonsMap;\n                const button = buttons.testid;\n\n                expect(Object.keys(buttons).length).toBe(1);\n                expect(button.val()).toBe('Test');\n                expect(button.prop('id')).toBe('testid');\n                expect(button.prop('disabled')).toBe(false);\n                expect(button.hasClass('primary')).toBe(true);\n                expect(button.hasClass('danger')).toBe(false);\n            });\n\n            it('Disabled', function() {\n                const dialogView = new RB.DialogView({\n                    buttons: [\n                        {\n                            label: 'Test',\n                            id: 'testid',\n                            disabled: true,\n                        },\n                    ],\n                });\n                dialogView._makeButtons();\n\n                const buttons = dialogView.$buttonsMap;\n                const button = buttons.testid;\n\n                expect(Object.keys(buttons).length).toBe(1);\n                expect(button.val()).toBe('Test');\n                expect(button.prop('id')).toBe('testid');\n                expect(button.prop('disabled')).toBe(true);\n                expect(button.hasClass('primary')).toBe(false);\n                expect(button.hasClass('danger')).toBe(false);\n            });\n\n            it('Danger', function() {\n                const dialogView = new RB.DialogView({\n                    buttons: [\n                        {\n                            label: 'Test',\n                            id: 'testid',\n                            danger: true,\n                        },\n                    ],\n                });\n                dialogView._makeButtons();\n\n                const buttons = dialogView.$buttonsMap;\n                const button = buttons.testid;\n\n                expect(Object.keys(buttons).length).toBe(1);\n                expect(button.val()).toBe('Test');\n                expect(button.prop('id')).toBe('testid');\n                expect(button.prop('disabled')).toBe(false);\n                expect(button.hasClass('primary')).toBe(false);\n                expect(button.hasClass('danger')).toBe(true);\n            });\n        });\n\n        describe('Events', function() {\n            describe('Click', function() {\n                it('When function', function() {\n                    const myFunc = jasmine.createSpy('cb');\n                    const dialogView = new RB.DialogView({\n                        buttons: [\n                            {\n                                label: 'Test',\n                                id: 'testid',\n                                onClick: myFunc,\n                            },\n                        ],\n                    });\n                    dialogView._makeButtons();\n\n                    const buttons = dialogView.$buttonsMap;\n                    const button = buttons.testid;\n\n                    expect(Object.keys(buttons).length).toBe(1);\n                    expect(button.val()).toBe('Test');\n                    button.click();\n                    expect(myFunc).toHaveBeenCalled();\n                });\n\n                it('When string on subclass', function() {\n                    const MyDialogView = RB.DialogView.extend({\n                        buttons: [\n                            {\n                                label: 'Test',\n                                id: 'testid',\n                                onClick: '_onClicked',\n                            },\n                        ],\n\n                        _onClicked: jasmine.createSpy('cb'),\n                    });\n                    const dialogView = new MyDialogView();\n                    dialogView._makeButtons();\n\n                    const buttons = dialogView.$buttonsMap;\n                    const button = buttons.testid;\n\n                    expect(Object.keys(buttons).length).toBe(1);\n                    expect(button.val()).toBe('Test');\n                    button.click();\n                    expect(dialogView._onClicked).toHaveBeenCalled();\n                });\n\n                describe('Keydown', function() {\n                    it('Esc key', function() {\n                        const dialogView = new RB.DialogView({\n                            buttons: [{\n                                id: 'testid',\n                                label: 'Test',\n                            }],\n                        });\n\n                        dialogView.show();\n\n                        const myFunc = jasmine.createSpy('hide');\n                        dialogView.hide = myFunc;\n\n                        const buttons = dialogView.$buttonsMap;\n                        expect(Object.keys(buttons).length).toBe(1);\n                        expect(buttons.testid.val()).toBe('Test');\n\n                        dialogView.$el.trigger(\n                            $.Event('keydown', { which: $.ui.keyCode.ESCAPE }));\n\n                        expect(myFunc).toHaveBeenCalled();\n\n                        dialogView.remove();\n                    });\n                });\n\n                describe('Submit', function() {\n                    it('with primary button enabled', function() {\n                        const myFunc = jasmine.createSpy('cb');\n                        const dialogView = new RB.DialogView({\n                            buttons: [{\n                                id: 'testid',\n                                label: 'Test',\n                                onClick: myFunc,\n                                disabled: false,\n                                primary: true,\n                            }],\n                            body: _.template(dedent`\n                                <form>\n                                 <input value=\"test\">\n                                </form>\n                            `),\n                        });\n\n                        dialogView.show();\n\n                        const buttons = dialogView.$buttonsMap;\n                        const button = buttons.testid;\n                        const form = dialogView.$el.find('form');\n\n                        expect(Object.keys(buttons).length).toBe(1);\n                        expect(button.val()).toBe('Test');\n                        expect(button.prop('disabled')).toBe(false);\n                        expect(button.hasClass('primary')).toBe(true);\n\n                        form.trigger($.Event('submit'));\n                        expect(myFunc).toHaveBeenCalled();\n\n                        dialogView.remove();\n                    });\n\n                    it('with primary button disabled', function() {\n                        const myFunc = jasmine.createSpy('cb');\n                        const dialogView = new RB.DialogView({\n                            buttons: [{\n                                id: 'testid',\n                                label: 'Test',\n                                onClick: myFunc,\n                                disabled: true,\n                                primary: true,\n                            }],\n                            body: _.template(dedent`\n                                <form>\n                                 <input value=\"test\">\n                                </form>\n                            `),\n                        });\n\n                        dialogView.show();\n\n                        const buttons = dialogView.$buttonsMap;\n                        const button = buttons.testid;\n                        const form = dialogView.$el.find('form');\n\n                        expect(Object.keys(buttons).length).toBe(1);\n                        expect(button.val()).toBe('Test')\n                        expect(button.prop('disabled')).toBe(true);\n                        expect(button.hasClass('primary')).toBe(true);\n\n                        form.trigger($.Event('submit'));\n                        expect(myFunc).not.toHaveBeenCalled();\n\n                        dialogView.remove();\n                    });\n\n                    it('with explicit action', function() {\n                        const myFunc1 = jasmine.createSpy('cb1');\n                        const myFunc2 = jasmine.createSpy('cb2')\n                            .and.returnValue(false);\n                        const dialogView = new RB.DialogView({\n                            buttons: [{\n                                id: 'testid',\n                                label: 'Test',\n                                onClick: myFunc1,\n                                disabled: false,\n                                primary: true,\n                            }],\n                            body: _.template(dedent`\n                                <form action=\".\">\n                                 <input value=\"test\">\n                                </form>\n                            `),\n                        });\n\n                        dialogView.show();\n\n                        const buttons = dialogView.$buttonsMap;\n                        const button = buttons.testid;\n                        const form = dialogView.$el.find('form');\n                        form.submit(myFunc2);\n\n                        expect(Object.keys(buttons).length).toBe(1);\n                        expect(button.val()).toBe('Test');\n                        expect(button.prop('disabled')).toBe(false);\n                        expect(button.hasClass('primary')).toBe(true);\n\n                        form.trigger($.Event('submit'));\n                        expect(myFunc1).not.toHaveBeenCalled();\n                        expect(myFunc2).toHaveBeenCalled();\n\n                        dialogView.remove();\n                    });\n                });\n            });\n        });\n    });\n});\n"]}