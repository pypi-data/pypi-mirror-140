{"version":3,"sources":["fileAttachmentCommentModelTests.es6.js"],"names":[],"mappings":"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","file":"fileAttachmentCommentModelTests.js","sourcesContent":["suite('rb/resources/models/FileAttachmentComment', function() {\n    const baseStrings = RB.BaseResource.strings;\n    let model;\n\n    beforeEach(function() {\n        /* Set some sane defaults needed to pass validation. */\n        model = new RB.FileAttachmentComment({\n            fileAttachmentID: 16,\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                file_attachment_comment: {\n                    id: 42,\n                    issue_opened: true,\n                    issue_status: 'resolved',\n                    text_type: 'markdown',\n                    text: 'foo',\n                    extra_data: {\n                        my_int: 123,\n                        my_bool: true,\n                        my_str: 'strvalue',\n                        my_null: null,\n                    },\n                    link_text: 'my-link-text',\n                    thumbnail_html: '<blink>Boo</blink>',\n                    review_url: '/review-ui/',\n                    file_attachment: {\n                        id: 10,\n                        filename: 'file.txt',\n                    },\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.issueOpened).toBe(true);\n            expect(data.issueStatus).toBe(RB.BaseComment.STATE_RESOLVED);\n            expect(data.richText).toBe(true);\n            expect(data.text).toBe('foo');\n            expect(data.extraData).not.toBe(undefined);\n            expect(data.extraData.my_int).toBe(123);\n            expect(data.extraData.my_bool).toBe(true);\n            expect(data.extraData.my_str).toBe('strvalue');\n            expect(data.extraData.my_null).toBe(null);\n            expect(data.linkText).toBe('my-link-text');\n            expect(data.thumbnailHTML).toBe('<blink>Boo</blink>');\n            expect(data.reviewURL).toBe('/review-ui/');\n            expect(data.fileAttachment).not.toBe(undefined);\n            expect(data.fileAttachment.id).toBe(10);\n            expect(data.fileAttachment.get('filename')).toBe('file.txt');\n            expect(data.fileAttachmentID).toBe(10);\n        });\n    });\n\n    describe('toJSON', function() {\n        it('BaseComment.toJSON called', function() {\n            spyOn(RB.BaseComment.prototype, 'toJSON').and.callThrough();\n            model.toJSON();\n            expect(RB.BaseComment.prototype.toJSON).toHaveBeenCalled();\n        });\n\n        describe('diff_against_file_attachment_id field', function() {\n            it('When loaded', function() {\n                model.set({\n                    loaded: true,\n                    diffAgainstFileAttachmentID: 123,\n                });\n                const data = model.toJSON();\n                expect(data.diff_against_file_attachment_id).toBe(undefined);\n            });\n\n            describe('When not loaded', function() {\n                it('With value', function() {\n                    model.set('diffAgainstFileAttachmentID', 123);\n                    const data = model.toJSON();\n                    expect(data.diff_against_file_attachment_id).toBe(123);\n                });\n\n                it('Without value', function() {\n                    const data = model.toJSON();\n                    expect(data.diff_against_file_attachment_id)\n                        .toBe(undefined);\n                });\n            });\n        });\n\n        describe('file_attachment_id field', function() {\n            it('When loaded', function() {\n                model.set({\n                    loaded: true,\n                    fileAttachmentID: 123,\n                });\n\n                const data = model.toJSON();\n                expect(data.file_attachment_id).toBe(undefined);\n            });\n\n            it('When not loaded', function() {\n                model.set('fileAttachmentID', 123);\n                const data = model.toJSON();\n                expect(data.file_attachment_id).toBe(123);\n            });\n        });\n\n        describe('force_text_type field', function() {\n            it('With value', function() {\n                model.set('forceTextType', 'html');\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.force_text_type).toBe(undefined);\n            });\n        });\n\n        describe('include_text_types field', function() {\n            it('With value', function() {\n                model.set('includeTextTypes', 'html');\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe('html');\n            });\n\n            it('Without value', function() {\n                const data = model.toJSON();\n                expect(data.include_text_types).toBe(undefined);\n            });\n        });\n\n        it('extra_data field', function() {\n            model.set({\n                extraData: {\n                    my_int: 123,\n                    my_bool: true,\n                    my_str: 'strvalue',\n                    my_null: null,\n                },\n            });\n\n            const data = model.toJSON();\n            expect(data['extra_data.my_int']).toBe(123);\n            expect(data['extra_data.my_bool']).toBe(true);\n            expect(data['extra_data.my_str']).toBe('strvalue');\n            expect(data['extra_data.my_null']).toBe(null);\n        });\n    });\n\n    describe('validate', function() {\n        it('Inherited behavior', function() {\n            spyOn(RB.BaseComment.prototype, 'validate');\n            model.validate({});\n            expect(RB.BaseComment.prototype.validate).toHaveBeenCalled();\n        });\n\n        describe('extraData', function() {\n            describe('Valid values', function() {\n                it('Empty object', function() {\n                    expect(model.validate({\n                        extraData: {},\n                    })).toBe(undefined);\n                });\n\n                it('Populated object', function() {\n                    expect(model.validate({\n                        extraData: {\n                            a: 42,\n                        },\n                    })).toBe(undefined);\n                });\n\n                it('Undefined', function() {\n                    expect(model.validate({\n                        extraData: undefined,\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                const errStr = baseStrings.INVALID_EXTRADATA_TYPE;\n\n                it('Array', function() {\n                    expect(model.validate({\n                        extraData: '',\n                    })).toBe(errStr);\n                });\n\n                it('Boolean', function() {\n                    expect(model.validate({\n                        extraData: false,\n                    })).toBe(errStr);\n                });\n\n                it('Integer', function() {\n                    expect(model.validate({\n                        extraData: 0,\n                    })).toBe(errStr);\n                });\n\n                it('Null', function() {\n                    expect(model.validate({\n                        extraData: null,\n                    })).toBe(errStr);\n                });\n\n                it('String', function() {\n                    expect(model.validate({\n                        extraData: '',\n                    })).toBe(errStr);\n                });\n            });\n        });\n\n        describe('extraData entries', function() {\n            describe('Valid values', function() {\n                it('Booleans', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: true,\n                        },\n                    })).toBe(undefined);\n                });\n\n                it('Integers', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: 42,\n                        },\n                    })).toBe(undefined);\n                });\n\n                it('Null', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: null,\n                        },\n                    })).toBe(undefined);\n                });\n\n                it('Strings', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: 'foo',\n                        },\n                    })).toBe(undefined);\n                });\n            });\n\n            describe('Invalid values', function() {\n                const errStr = baseStrings.INVALID_EXTRADATA_VALUE_TYPE\n                    .replace('{key}', 'value');\n\n                it('Arrays', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: [1, 2, 3],\n                        },\n                    })).toBe(errStr);\n                });\n\n                it('NaN', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: NaN,\n                        },\n                    })).toBe(errStr);\n                });\n\n                it('Objects', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: {\n                                a: 1,\n                            },\n                        },\n                    })).toBe(errStr);\n                });\n\n                it('Undefined', function() {\n                    expect(model.validate({\n                        extraData: {\n                            value: undefined,\n                        },\n                    })).toBe(errStr);\n                });\n            });\n        });\n    });\n});\n"]}