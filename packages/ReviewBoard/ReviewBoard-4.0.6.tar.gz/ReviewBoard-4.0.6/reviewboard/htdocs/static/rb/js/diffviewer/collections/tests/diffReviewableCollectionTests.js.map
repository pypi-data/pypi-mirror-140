{"version":3,"sources":["diffReviewableCollectionTests.es6.js"],"names":[],"mappings":"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","file":"diffReviewableCollectionTests.js","sourcesContent":["suite('rb/diffviewer/collections/DiffReviewableCollection', function() {\n    describe('Construction', function() {\n        it('Sets reviewRequest', function() {\n            const reviewRequest = new RB.ReviewRequest();\n            const collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: reviewRequest,\n            });\n\n            expect(collection.reviewRequest).toBe(reviewRequest);\n        });\n    });\n\n    describe('watchFiles', function() {\n        let collection;\n        let files;\n\n        beforeEach(function() {\n            collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: new RB.ReviewRequest(),\n            });\n            files = new RB.DiffFileCollection();\n        });\n\n        it('Initially populates', function() {\n            spyOn(collection, '_populateFromFiles');\n\n            collection.watchFiles(files);\n\n            expect(collection._populateFromFiles).toHaveBeenCalled();\n        });\n\n        it('Populates on files.reset', function() {\n            spyOn(collection, 'trigger');\n            spyOn(collection, 'reset');\n\n            collection.watchFiles(files);\n\n            files.reset([\n                new RB.DiffFile({\n                    filediff: {\n                        id: 300,\n                        revision: 1,\n                    },\n                    index: 1,\n                    id: 100,\n                }),\n                new RB.DiffFile({\n                    filediff: {\n                        id: 301,\n                        revision: 1,\n                    },\n                    interfilediff: {\n                        id: 400,\n                        revision: 2,\n                    },\n                    index: 2,\n                    id: 101,\n                    commentCounts: [1],\n                }),\n                new RB.DiffFile({\n                    baseFileDiffID: 123,\n                    filediff: {\n                        id: 302,\n                        revision: 2,\n                    },\n                    forceInterdiff: true,\n                    forceInterdiffRevision: 1,\n                    index: 3,\n                    id: 102,\n                }),\n            ]);\n\n            expect(collection.reset).toHaveBeenCalled();\n            expect(collection.trigger).toHaveBeenCalledWith('populating');\n            expect(collection.trigger).toHaveBeenCalledWith('populated');\n            expect(collection.length).toBe(3);\n\n            let diffReviewable = collection.at(0);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(null);\n            expect(diffReviewable.get('file').id).toBe(100);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(300);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(null);\n\n            diffReviewable = collection.at(1);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(null);\n            expect(diffReviewable.get('file').id).toBe(101);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(301);\n            expect(diffReviewable.get('interFileDiffID')).toBe(400);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(2);\n            expect(diffReviewable.get('serializedCommentBlocks')).toEqual([1]);\n\n            diffReviewable = collection.at(2);\n            expect(diffReviewable.get('baseFileDiffID')).toBe(123);\n            expect(diffReviewable.get('file').id).toBe(102);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(302);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(2);\n            expect(diffReviewable.get('interdiffRevision')).toBe(1);\n        });\n    });\n});\n"]}