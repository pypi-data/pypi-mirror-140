{"version":3,"sources":["screenshotModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,gCAAD,EAAmC,YAAW;AAC/C,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAU;AACjB,IAAA,KAAK,GAAG,IAAI,EAAE,CAAC,UAAP,CAAkB;AACtB,MAAA,YAAY,EAAE,IAAI,EAAE,CAAC,YAAP,CAAoB;AAC9B,kBAAU;AADoB,OAApB;AADQ,KAAlB,CAAR;AAKH,GANS,CAAV;AAQA,EAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAW;AAClC,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,MAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,YAArB;AAEA,MAAA,MAAM,CAAC,KAAK,CAAC,cAAN,EAAD,CAAN,CAA+B,IAA/B,CAAoC,YAApC;AACH,KAJC,CAAF;AAMA,IAAA,EAAE,CAAC,eAAD,EAAkB,YAAW;AAC3B,MAAA,KAAK,CAAC,GAAN,CAAU,UAAV,EAAsB,YAAtB;AAEA,MAAA,MAAM,CAAC,KAAK,CAAC,cAAN,EAAD,CAAN,CAA+B,IAA/B,CAAoC,YAApC;AACH,KAJC,CAAF;AAMA,IAAA,EAAE,CAAC,2BAAD,EAA8B,YAAW;AACvC,MAAA,KAAK,CAAC,GAAN,CAAU;AACN,QAAA,OAAO,EAAE,YADH;AAEN,QAAA,QAAQ,EAAE;AAFJ,OAAV;AAKA,MAAA,MAAM,CAAC,KAAK,CAAC,cAAN,EAAD,CAAN,CAA+B,IAA/B,CAAoC,YAApC;AACH,KAPC,CAAF;AAQH,GArBO,CAAR;AAuBA,EAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AACzB,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,UAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;AACrB,QAAA,IAAI,EAAE,IADe;AAErB,QAAA,UAAU,EAAE;AACR,UAAA,EAAE,EAAE,EADI;AAER,UAAA,OAAO,EAAE,YAFD;AAGR,UAAA,QAAQ,EAAE,aAHF;AAIR,UAAA,UAAU,EAAE;AAJJ;AAFS,OAAZ,CAAb;AAUA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,EAAN,CAAN,CAAgB,IAAhB,CAAqB,EAArB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,YAA1B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,aAA3B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,SAAN,CAAN,CAAuB,IAAvB,CAA4B,aAA5B;AACH,KAhBC,CAAF;AAiBH,GAlBO,CAAR;AAoBA,EAAA,QAAQ,CAAC,QAAD,EAAW,YAAW;AAC1B,IAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACjC,MAAA,EAAE,CAAC,YAAD,EAAe,YAAW;AACxB,QAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,KAArB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,KAA1B;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAOH,GARO,CAAR;AASH,CA/DI,CAAL","file":"screenshotModelTests.js","sourcesContent":["suite('rb/resources/models/Screenshot', function() {\n    let model;\n\n    beforeEach(function(){\n        model = new RB.Screenshot({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('getDisplayName', function() {\n        it('With caption', function() {\n            model.set('caption', 'My Caption');\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n\n        it('With filename', function() {\n            model.set('filename', 'myfile.png');\n\n            expect(model.getDisplayName()).toBe('myfile.png');\n        });\n\n        it('With caption and filename', function() {\n            model.set({\n                caption: 'My Caption',\n                filename: 'myfile.png'\n            });\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot: {\n                    id: 42,\n                    caption: 'my-caption',\n                    filename: 'my-filename',\n                    review_url: '/review-ui/',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('my-caption');\n            expect(data.filename).toBe('my-filename');\n            expect(data.reviewURL).toBe('/review-ui/');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n    });\n});\n"]}