{"version":3,"sources":["textBasedCommentBlockView.es6.js"],"names":[],"mappings":"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","file":"textBasedCommentBlockView.js","sourcesContent":["/**\n * Provides a visual comment indicator to display comments for text-based file\n * attachments.\n *\n * This will show a comment indicator flag (a \"ghost comment flag\") beside the\n * content indicating there are comments there. It will also show the\n * number of comments, along with a tooltip showing comment summaries.\n *\n * This is meant to be used with a TextCommentBlock model.\n */\nRB.TextBasedCommentBlockView = RB.AbstractCommentBlockView.extend({\n    tagName: 'span',\n    className: 'commentflag',\n\n    template: _.template(dedent`\n        <span class=\"commentflag-shadow\"></span>\n        <span class=\"commentflag-inner\">\n         <span class=\"commentflag-count\"></span>\n        </span>\n        <a name=\"<%= anchorName %>\" class=\"commentflag-anchor\"></a>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.$beginRow = null;\n        this.$endRow = null;\n        this._$window = $(window);\n\n        this._prevCommentHeight = null;\n        this._prevWindowWidth = null;\n        this._resizeRegistered = false;\n    },\n\n    /**\n     * Render the contents of the comment flag.\n     *\n     * This will display the comment flag and then start listening for\n     * events for updating the comment count or repositioning the comment\n     * (for zoom level changes and wrapping changes).\n     *\n     * Returns:\n     *     RB.TextBasedCommentBlockView:\n     *     This object, for chaining.\n     */\n    renderContent() {\n        this.$el.html(this.template(_.defaults(this.model.attributes, {\n            anchorName: this.buildAnchorName(),\n        })));\n\n        this.$('.commentflag-count')\n            .bindProperty('text', this.model, 'count', {\n                elementToModel: false,\n            });\n    },\n\n    /**\n     * Remove the comment from the page.\n     */\n    remove() {\n        /*\n         * This can't use _.super() because AbstractCommentBlockView doesn't\n         * define a 'remove'.\n         */\n        Backbone.View.prototype.remove.call(this);\n\n        if (this._resizeRegistered) {\n            this._$window.off('resize.' + this.cid);\n        }\n    },\n\n    /**\n     * Set the row span for the comment flag.\n     *\n     * The comment will update to match the row of lines.\n     *\n     * Args:\n     *     $beginRow (jQuery):\n     *         The first row of the comment.\n     *\n     *     $endRow (jQuery):\n     *         The last row of the comment. This may be the same as\n     *         ``$beginRow``.\n     */\n    setRows($beginRow, $endRow) {\n        this.$beginRow = $beginRow;\n        this.$endRow = $endRow;\n\n        /*\n         * We need to set the sizes and show the element after other layout\n         * operations and the DOM have settled.\n         */\n        _.defer(_.bind(function() {\n            this._updateSize();\n            this.$el.show();\n        }, this));\n\n        if ($beginRow && $endRow) {\n            if (!this._resizeRegistered) {\n                this._$window.on('resize.' + this.cid,\n                                 _.bind(this._updateSize, this));\n            }\n        } else {\n            if (this._resizeRegistered) {\n                this._$window.off('resize.' + this.cid);\n            }\n        }\n    },\n\n    /**\n     * Position the comment dialog relative to the comment flag position.\n     *\n     * The dialog will be positioned in the center of the page (horizontally),\n     * just to the bottom of the flag.\n     *\n     * Args:\n     *     commntDlg (RB.CommentDialogView):\n     *          The view for the comment dialog.\n     */\n    positionCommentDlg(commentDlg) {\n        commentDlg.$el.css({\n            left: $(document).scrollLeft() +\n                  (this._$window.width() - commentDlg.$el.width()) / 2,\n            top: this.$endRow.offset().top + this.$endRow.height(),\n        });\n    },\n\n    /**\n     * Position the comment update notifications bubble.\n     *\n     * The bubble will be positioned just to the top-right of the flag.\n     *\n     * Args:\n     *     $bubble (jQuery):\n     *         The selector for the notification bubble.\n     */\n    positionNotifyBubble($bubble) {\n        $bubble.css({\n            left: this.$el.width(),\n            top: 0,\n        });\n    },\n\n    /**\n     * Return the name for the comment flag anchor.\n     *\n     * Returns:\n     *     string:\n     *     The name to use for the anchor element.\n     */\n    buildAnchorName() {\n        return `line${this.model.get('beginLineNum')}`;\n    },\n\n    /**\n     * Update the size of the comment flag.\n     */\n    _updateSize() {\n        const windowWidth = this._$window.width();\n\n        if (this._prevWindowWidth === windowWidth) {\n            return;\n        }\n\n        this._prevWindowWidth = windowWidth;\n\n        /*\n         * On IE and Safari, the marginTop in getExtents may be wrong.\n         * We force a value that ends up working for us.\n         */\n        const commentHeight = this.$endRow.offset().top +\n                              this.$endRow.outerHeight() -\n                              this.$beginRow.offset().top -\n                              (this.$el.getExtents('m', 't') || -4);\n\n        if (commentHeight !== this._prevCommentHeight) {\n            this.$el.height(commentHeight);\n            this._prevCommentHeight = commentHeight;\n        }\n    },\n});\n"]}