{"version":3,"sources":["newsWidgetView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,EAAE,CAAC,KAAH,CAAS,cAAT,GAA0B,EAAE,CAAC,KAAH,CAAS,UAAT,CAAoB,MAApB,CAA2B;AACjD,EAAA,SAAS,EAAE,IADsC;AAEjD,EAAA,WAAW,8BAFsC;AAIjD,EAAA,aAAa,EAAE,CAAC,CAAC,QAAF,qVAJkC;;AAkBjD;AACJ;AACA;AACA;AACA;AACI,EAAA,YAvBiD,0BAuBlC;AAAA;;AACX,QAAM,KAAK,GAAG,KAAK,KAAnB;AAEA,SAAK,eAAL,CAAqB;AACjB,MAAA,EAAE,EAAE,WADa;AAEjB,MAAA,EAAE,EAAE,CAAC,CAAC,8BAAD,CAAD,CACC,IADD,uBAEC,IAFD,CAEM,MAFN,EAEc,KAAK,CAAC,GAAN,CAAU,SAAV,CAFd;AAFa,KAArB;AAOA,QAAM,YAAY,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,cAAf,CAArB;;AAEA,QAAI,YAAJ,EAAkB;AACd,WAAK,eAAL,CAAqB;AACjB,QAAA,EAAE,EAAE,WADa;AAEjB,QAAA,UAAU,EAAE,WAFK;AAGjB,QAAA,EAAE,EAAE,CAAC,CAAC,8BAAD,CAAD,CACC,IADD,uBAEC,IAFD,CAEM,MAFN,EAEc,YAFd;AAHa,OAArB;AAOH;;AAED,SAAK,QAAL,CAAc,KAAd,EAAqB,aAArB,EACc;AAAA,aAAM,KAAI,CAAC,YAAL,CAAkB,IAAlB,CAAN;AAAA,KADd;AAEA,SAAK,QAAL,CAAc,KAAd,EAAqB,kBAArB,EAAyC,KAAK,mBAA9C;AAEA,IAAA,KAAK,CAAC,QAAN;AACH,GAlDgD;;AAoDjD;AACJ;AACA;AACA;AACA;AACI,EAAA,aAzDiD,2BAyDjC;AACZ,SAAK,KAAL,CAAW,QAAX;AACH,GA3DgD;;AA6DjD;AACJ;AACA;AACA;AACA;AACA;AACI,EAAA,mBAnEiD,iCAmE3B;AAClB,QAAM,KAAK,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAAd;AAEA,SAAK,YAAL,CAAkB,KAAlB;;AAEA,QAAI,KAAK,CAAC,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,aAAL,CAAmB;AAClC,QAAA,KAAK,EAAE;AAD2B,OAAnB,CAAnB;AAGH,KAJD,MAIO;AACH,UAAM,MAAM,GAAG,CAAC,CAAC,2CAAD,CAAD,CACV,IADU,CACL,WAAW,8HAEb,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAD,CAFa,CADN,CAAf;AAKA,WAAK,QAAL,CACK,KADL,GAEK,MAFL,CAEY,MAFZ;AAGH;;AAED,SAAK,OAAL,CAAa,aAAb;AACH;AAxFgD,CAA3B,CAA1B","file":"newsWidgetView.js","sourcesContent":["/**\n * A widget for displaying news items from an RSS feed.\n */\nRB.Admin.NewsWidgetView = RB.Admin.WidgetView.extend({\n    canReload: true,\n    reloadTitle: gettext('Reload news posts'),\n\n    itemsTemplate: _.template(dedent`\n        <% _.each(items, function(item) { %>\n         <a href=\"<%- item.url %>\" class=\"rb-c-admin-news-widget__item\"\n            target=\"_blank\">\n          <span class=\"rb-c-admin-news-widget__item-date\">\n           <%- item.date.format('MMM DD') %>\n          </span>\n          <span class=\"rb-c-admin-news-widget__item-title\">\n           <%- item.title %>\n          </span>\n         </a>\n        <% }) %>\n    `),\n\n    /**\n     * Render the widget.\n     *\n     * This will set up the actions and begin loading the news.\n     */\n    renderWidget() {\n        const model = this.model;\n\n        this.addFooterAction({\n            id: 'more-news',\n            el: $('<a href=\"#\" target=\"_blank\">')\n                .text(gettext('More News'))\n                .attr('href', model.get('newsURL')),\n        });\n\n        const subscribeURL = this.model.get('subscribeURL');\n\n        if (subscribeURL) {\n            this.addFooterAction({\n                id: 'subscribe',\n                cssClasses: '-is-right',\n                el: $('<a href=\"#\" target=\"_blank\">')\n                    .text(gettext('Subscribe'))\n                    .attr('href', subscribeURL),\n            });\n        }\n\n        this.listenTo(model, 'loadingNews',\n                      () => this.setReloading(true));\n        this.listenTo(model, 'change:newsItems', this._onNewsItemsChanged);\n\n        model.loadNews();\n    },\n\n    /**\n     * Reload the news posts.\n     *\n     * This is called in response to a user clicking the Reload action.\n     */\n    reloadContent() {\n        this.model.loadNews();\n    },\n\n    /**\n     * Handle changes to the list of loaded news items.\n     *\n     * If the list is empty, this will present an error pointing to the news\n     * feed. Otherwise, it will render each of the news items.\n     */\n    _onNewsItemsChanged() {\n        const items = this.model.get('newsItems');\n\n        this.setReloading(false);\n\n        if (items.length > 0) {\n            this.$content.html(this.itemsTemplate({\n                items: items,\n            }));\n        } else {\n            const $error = $('<p class=\"rb-c-admin-news-widget__error\">')\n                .html(interpolate(\n                    gettext('There was an error loading the news. Please <a href=\"%s\">visit the news page</a> directly, or try again later.'),\n                    [this.model.get('newsURL')]));\n\n            this.$content\n                .empty()\n                .append($error);\n        }\n\n        this.trigger('sizeChanged');\n    },\n});\n"]}