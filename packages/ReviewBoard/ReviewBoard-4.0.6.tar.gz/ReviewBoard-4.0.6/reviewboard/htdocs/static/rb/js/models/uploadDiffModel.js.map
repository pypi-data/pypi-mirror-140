{"version":3,"sources":["uploadDiffModel.es6.js"],"names":[],"mappings":"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","file":"uploadDiffModel.js","sourcesContent":["/**\n * A model for uploading diffs (either to an existing review request, or\n * creating a new review request).\n */\nRB.UploadDiffModel = Backbone.Model.extend({\n    defaults: {\n        basedir: null,\n        changeNumber: null,\n        diffFile: null,\n        diffValid: false,\n        error: null,\n        parentDiffFile: null,\n        repository: null,\n        reviewRequest: null,\n        state: 0,\n    },\n\n    State: {\n        PROMPT_FOR_DIFF: 0,\n        PROMPT_FOR_BASEDIR: 1,\n        PROPMT_FOR_CHANGE_NUMBER: 2,\n        PROCESSING_DIFF: 3,\n        UPLOADING: 4,\n        PROMPT_FOR_PARENT_DIFF: 5,\n        ERROR: 6,\n    },\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        Backbone.Model.prototype.initialize.apply(this, arguments);\n\n        this.on('change:diffFile change:parentDiffFile change:basedir ' +\n                'change:changeNumber change:diffValid',\n                this._updateState, this);\n    },\n\n    /**\n     * Reset the various state of the pre-commit creator.\n     *\n     * This is used when the user clicks \"start over\" in the middle of the\n     * process.\n     */\n    startOver() {\n        this.set({\n            basedir: null,\n            changeNumber: null,\n            diffFile: null,\n            diffValid: false,\n            error: null,\n            parentDiffFile: null,\n            state: this.State.PROMPT_FOR_DIFF,\n        });\n    },\n\n    /**\n     * Handle a selected diff file.\n     *\n     * In the case where the current state is PROMPT_FOR_DIFF or\n     * PROMPT_FOR_PARENT_DIFF, this will take the diff file and set the\n     * relevant attribute, triggering the validation stage.\n     *\n     * Args:\n     *     files (FileList):\n     *         The selected file list from the input element.\n     */\n    handleFiles(files) {\n        switch (this.get('state')) {\n            case this.State.PROMPT_FOR_DIFF:\n                this.set('diffFile', files[0]);\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                this.set('parentDiffFile', files[0]);\n                break;\n\n            default:\n                console.assert('File received in wrong state');\n                break;\n        }\n    },\n\n    /**\n     * Perform a state transition, based on the current state and attributes.\n     */\n    _updateState() {\n        const basedir = this.get('basedir');\n        const changeNumber = this.get('changeNumber');\n        const diff = this.get('diffFile');\n        const diffValid = this.get('diffValid');\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const requiresBasedir = repository.get('requiresBasedir');\n        const requiresChangeNumber = repository.get('requiresChangeNumber');\n        const state = this.get('state');\n\n        switch (state) {\n            case this.State.PROMPT_FOR_DIFF:\n                if (diff) {\n                    if (requiresBasedir && !basedir) {\n                        this.set('state', this.State.PROMPT_FOR_BASEDIR);\n                    } else if (requiresChangeNumber && !changeNumber) {\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                if (diff && parentDiff) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROMPT_FOR_BASEDIR:\n                console.assert(\n                    diff, 'cannot be in basedir prompt state without a diff');\n\n                if (basedir) {\n                    if (requiresChangeNumber && !changeNumber) {\n                        /*\n                         * Right now we don't have anything that requires both a\n                         * basedir and a change number, but that might change in\n                         * the future.\n                         */\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_CHANGE_NUMBER:\n                console.assert(\n                    diff, 'cannot be in changenum prompt state without a diff');\n\n                if (changeNumber) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROCESSING_DIFF:\n                if (diffValid) {\n                    this.set('state', this.State.UPLOADING);\n\n                    if (this.get('reviewRequest') === null) {\n                        this._createReviewRequest();\n                    } else {\n                        this._createDiff();\n                    }\n                }\n                break;\n\n            case this.State.UPLOADING:\n                break;\n\n            case this.State.ERROR:\n                break;\n        }\n    },\n\n    /**\n     * Do a test validation of the selected diff and provided options.\n     *\n     * This starts an asynchronous process. When this process is completed\n     * successfully, the 'diffValid' attribute will be set to true. If the\n     * validation fails, the state will be set to State.ERROR and the 'state'\n     * attribute will be set to HTML with a user-visible error.\n     */\n    _tryValidate() {\n        this.set('diffValid', false);\n\n        const diff = this.get('diffFile');\n        console.assert(diff);\n\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const uploader = new RB.ValidateDiffModel();\n\n        uploader.set({\n            repository: repository.get('id'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            basedir: this.get('basedir'),\n            diff: diff,\n            parentDiff: parentDiff,\n        });\n\n        uploader.save({\n            success: _.bind(this._onValidateSuccess, this),\n            error: _.bind(this._onValidateError, this),\n        });\n    },\n\n    /**\n     * Callback for when validation succeeds.\n     */\n    _onValidateSuccess() {\n        this.set('diffValid', true);\n    },\n\n    /**\n     * Callback for when validation fails.\n     */\n    _onValidateError(model, xhr) {\n        const rsp = $.parseJSON(xhr.responseText);\n        let newState = this.State.ERROR;\n        let error;\n\n        if (rsp !== null) {\n            switch (rsp.err.code) {\n                case RB.APIErrors.REPO_FILE_NOT_FOUND:\n                    if (this.get('repository').get('scmtoolName') === 'Git' &&\n                        rsp.revision.length !== 40) {\n                        error = gettext('The uploaded diff uses short revisions, but Review Board requires full revisions.<br />Please generate a new diff using the <code>--full-index</code> parameter.');\n                    } else {\n                        error = interpolate(\n                            gettext('The file \"%(file)s\" (revision %(revision)s) was not found in the repository.'),\n                            {\n                                file: rsp.file,\n                                revision: rsp.revision,\n                            },\n                            true);\n\n                        if (this.get('parentDiffFile') === null) {\n                            // Allow the user to try providing a parent diff.\n                            newState = this.State.PROMPT_FOR_PARENT_DIFF;\n                        }\n                    }\n\n                    break;\n\n                case RB.APIErrors.DIFF_PARSE_ERROR:\n                    error = interpolate(\n                        gettext('%(error)s<br />Line %(line)s: %(reason)s'),\n                        {\n                            error: rsp.err.msg,\n                            line: rsp.linenum,\n                            reason: rsp.reason,\n                        },\n                        true);\n                    break;\n\n                default:\n                    error = rsp.err.msg;\n                    break;\n            }\n        } else {\n            error = gettext('Unknown error');\n        }\n\n        if (error) {\n            this.set({\n                state: newState,\n                error: error,\n            });\n        }\n    },\n\n    /**\n     * Actually create the review request.\n     *\n     * This should be all but guaranteed to succeed, since we've already\n     * determined that the supplied parameters ought to work through the\n     * ValidateDiffModel.\n     */\n    _createReviewRequest() {\n        const repository = this.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            commitID: this.get('changeNumber'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            repository: repository.get('id'),\n        });\n\n        reviewRequest.save({\n            success: () => {\n                this.set('reviewRequest', reviewRequest);\n                this._createDiff();\n            },\n            error: this._onValidateError.bind(this),\n        });\n    },\n\n    /**\n     * Create the diff.\n     *\n     * This requires that the review request object already exists.\n     */\n    _createDiff() {\n        const reviewRequest = this.get('reviewRequest');\n        const diff = reviewRequest.createDiff();\n\n        diff.set({\n            basedir: this.get('basedir'),\n            diff: this.get('diffFile'),\n            parentDiff: this.get('parentDiffFile'),\n        });\n        diff.url = reviewRequest.get('links').diffs.href;\n        diff.save({\n            success: () => {\n                window.location = reviewRequest.get('reviewURL');\n            },\n            error: this._onValidateError.bind(this),\n        });\n    },\n});\n"]}