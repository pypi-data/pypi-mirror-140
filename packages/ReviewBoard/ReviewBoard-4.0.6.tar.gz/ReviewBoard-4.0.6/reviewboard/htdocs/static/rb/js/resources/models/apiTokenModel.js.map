{"version":3,"sources":["apiTokenModel.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,EAAE,CAAC,QAAH,GAAc,EAAE,CAAC,YAAH,CAAgB,MAAhB,CAAuB;AACjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,QARiC,sBAQtB;AACP,WAAO,CAAC,CAAC,QAAF,CAAW;AACd,MAAA,UAAU,EAAE,IADE;AAEd,MAAA,IAAI,EAAE,IAFQ;AAGd,MAAA,MAAM,EAAE,EAHM;AAId,MAAA,QAAQ,EAAE;AAJI,KAAX,EAKJ,EAAE,CAAC,YAAH,CAAgB,SAAhB,CAA0B,QAA1B,EALI,CAAP;AAMH,GAfgC;AAiBjC,EAAA,YAAY,EAAE,WAjBmB;;AAmBjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,GA1BiC,iBA0B3B;AACF,QAAM,GAAG,GAAG,SAAS,IAAI,KAAK,GAAL,CAAS,iBAAT,KAA+B,EAAnC,CAAT,GACA,YADA,GACe,KAAK,GAAL,CAAS,UAAT,CADf,GACsC,cADlD;AAGA,WAAO,KAAK,KAAL,KAAe,GAAf,aAAwB,GAAxB,SAA8B,KAAK,EAAnC,MAAP;AACH,GA/BgC;;AAiCjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MAxCiC,oBAwCxB;AACL,WAAO;AACH,MAAA,IAAI,EAAE,KAAK,GAAL,CAAS,MAAT,CADH;AAEH,MAAA,MAAM,EAAE,IAAI,CAAC,SAAL,CAAe,KAAK,GAAL,CAAS,QAAT,CAAf;AAFL,KAAP;AAIH,GA7CgC;;AA+CjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,iBA1DiC,6BA0Df,GA1De,EA0DV;AACnB,WAAO;AACH,MAAA,UAAU,EAAE,GAAG,CAAC,KADb;AAEH,MAAA,IAAI,EAAE,GAAG,CAAC,IAFP;AAGH,MAAA,MAAM,EAAE,GAAG,CAAC;AAHT,KAAP;AAKH;AAhEgC,CAAvB,EAiEX;AACC,EAAA,eAAe,EAAE;AACb,IAAA,SAAS,EAAE,EADE;AAEb,IAAA,QAAQ,EAAE;AACN,MAAA,SAAS,EAAE;AACP,aAAK;AACD,UAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,CADN;AAED,UAAA,KAAK,EAAE,CAAC,GAAD;AAFN;AADE;AADL,KAFG;AAUb,IAAA,MAAM,EAAE;AACJ,MAAA,SAAS,EAAE;AACP,aAAK;AACD,UAAA,KAAK,EAAE,CAAC,GAAD,CADN;AAED,UAAA,KAAK,EAAE;AAFN;AADE;AADP;AAVK;AADlB,CAjEW,CAAd","file":"apiTokenModel.js","sourcesContent":["/**\n * An API token.\n */\nRB.APIToken = RB.BaseResource.extend({\n    /**\n     * Return defaults for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The default values for new model instances.\n     */\n    defaults() {\n        return _.defaults({\n            tokenValue: null,\n            note: null,\n            policy: {},\n            userName: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'api_token',\n\n    /**\n     * Return the URL for syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when making HTTP requests.\n     */\n    url() {\n        const url = SITE_ROOT + (this.get('localSitePrefix') || '') +\n                    'api/users/' + this.get('userName') + '/api-tokens/';\n\n        return this.isNew() ? url : `${url}${this.id}/`;\n    },\n\n    /**\n     * Return a JSON-serializable representation of the model.\n     *\n     * Returns:\n     *     object:\n     *     An object suitable for passing into JSON.stringify.\n     */\n    toJSON() {\n        return {\n            note: this.get('note'),\n            policy: JSON.stringify(this.get('policy'))\n        };\n    },\n\n    /**\n     * Parse the response from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server API endpoint.\n     *\n     * Returns:\n     *     object:\n     *     The parsed attribute values.\n     */\n    parseResourceData(rsp) {\n        return {\n            tokenValue: rsp.token,\n            note: rsp.note,\n            policy: rsp.policy\n        };\n    }\n}, {\n    defaultPolicies: {\n        readWrite: {},\n        readOnly: {\n            resources: {\n                '*': {\n                    allow: ['GET', 'HEAD', 'OPTIONS'],\n                    block: ['*']\n                }\n            }\n        },\n        custom: {\n            resources: {\n                '*': {\n                    allow: ['*'],\n                    block: []\n                }\n            }\n        }\n    }\n});\n"]}