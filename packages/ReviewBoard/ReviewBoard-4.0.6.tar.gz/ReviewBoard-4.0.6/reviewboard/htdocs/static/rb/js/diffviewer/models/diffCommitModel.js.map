{"version":3,"sources":["diffCommitModel.es6.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AAGZ,MAAM,eAAe,GAAG,EAAxB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,EAAA,EAAE,CAAC,UAAH,GAAgB,QAAQ,CAAC,KAAT,CAAe,MAAf,CAAsB;AAClC,IAAA,QAAQ,EAAE;AACN,MAAA,UAAU,EAAE,IADN;AAEN,MAAA,QAAQ,EAAE,IAFJ;AAGN,MAAA,aAAa,EAAE,IAHT;AAIN,MAAA,QAAQ,EAAE,IAJJ;AAKN,MAAA,OAAO,EAAE;AALH,KADwB;;AASlC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,KApBkC,iBAoB5B,KApB4B,EAoBrB;AACT,UAAI,OAAO,GAAG,KAAK,CAAC,cAAN,CAAqB,KAArB,CAA2B,IAA3B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,IAAvC,EAAd;;AAEA,UAAI,OAAO,CAAC,MAAR,GAAiB,eAArB,EAAsC;AAClC,QAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,eAAe,GAAG,CAApC,IAAyC,KAAnD;AACH;;AAED,aAAO;AACH,QAAA,UAAU,EAAE,KAAK,CAAC,WADf;AAEH,QAAA,QAAQ,EAAE,KAAK,CAAC,SAFb;AAGH,QAAA,aAAa,EAAE,KAAK,CAAC,cAAN,CAAqB,IAArB,EAHZ;AAIH,QAAA,EAAE,EAAE,KAAK,CAAC,EAJP;AAKH,QAAA,QAAQ,EAAE,KAAK,CAAC,SALb;AAMH,QAAA,OAAO,EAAE;AANN,OAAP;AAQH,KAnCiC;;AAqClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,UA5CkC,wBA4CrB;AACT,aAAQ,KAAK,GAAL,CAAS,SAAT,MAAwB,KAAK,GAAL,CAAS,eAAT,CAAhC;AACH;AA9CiC,GAAtB,CAAhB;AAkDC,CA3ED","file":"diffCommitModel.js","sourcesContent":["(function() {\n\n\nconst MAX_SUMMARY_LEN = 80;\n\n\n/**\n * A representation of a single commit in a diff.\n *\n * Model Attributes:\n *     authorName (string):\n *         The name of the author of the commit.\n *\n *     commitID (string):\n *         The unique identifier for the commit.\n *\n *     commitMessage (string):\n *         The commit message.\n *\n *     parentID (string):\n *         The unique identifier of the parent commit.\n *\n *     summary (string):\n *         A one-line summary of the commit message.\n */\nRB.DiffCommit = Backbone.Model.extend({\n    defaults: {\n        authorName: null,\n        commitID: null,\n        commitMessage: null,\n        parentID: null,\n        summary: null,\n    },\n\n    /**\n     * Parse a commit.\n     *\n     * Args:\n     *     attrs (object):\n     *         The raw attributes to parse.\n     *\n     * Returns:\n     *     object:\n     *     The parsed attribute-value pairs.\n     */\n    parse(attrs) {\n        let summary = attrs.commit_message.split('\\n', 1)[0].trim();\n\n        if (summary.length > MAX_SUMMARY_LEN) {\n            summary = summary.substr(0, MAX_SUMMARY_LEN - 3) + '...';\n        }\n\n        return {\n            authorName: attrs.author_name,\n            commitID: attrs.commit_id,\n            commitMessage: attrs.commit_message.trim(),\n            id: attrs.id,\n            parentID: attrs.parent_id,\n            summary: summary,\n        };\n    },\n\n    /**\n     * Whether or not the commit message differs from the summary.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether or not the commit message differs from the summary.\n     */\n    hasSummary() {\n        return (this.get('summary') !== this.get('commitMessage'));\n    },\n});\n\n\n})();\n"]}