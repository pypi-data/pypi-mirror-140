{"version":3,"sources":["revisionSelectorView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA,EAAE,CAAC,oBAAH,GAA0B,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;AAC3C,EAAA,QAAQ,EAAE,CAAC,CAAC,QAAF,iSADiC;AAW3C,EAAA,MAAM,EAAE;AACJ,2CAAuC,oBADnC;AAEJ,0CAAsC,mBAFlC;AAGJ,sCAAkC;AAH9B,GAXmC;;AAiB3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,UAhC2C,sBAgChC,OAhCgC,EAgCvB;AAChB,IAAA,OAAO,CAAC,MAAR,CAAe,CAAC,CAAC,QAAF,CAAW,OAAX,CAAf;AACA,IAAA,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,UAAR,KAAuB,CAAvB,IAA4B,OAAO,CAAC,UAAR,KAAuB,CAAlE;AAEA,SAAK,aAAL,GAAqB,IAArB;AACA,SAAK,iBAAL,GAAyB,OAAO,CAAC,gBAAjC;AACA,SAAK,YAAL,GAAoB,KAApB;AACA,SAAK,WAAL,GAAmB,OAAO,CAAC,UAA3B;AACA,SAAK,OAAL,GAAe,EAAf;AAEA,SAAK,SAAL,GAAiB,KAAjB;AAEA,SAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,QAA1B,EAAoC,KAAK,OAAzC;;AAEA,IAAA,CAAC,CAAC,OAAF,CAAU,IAAV,EAAgB,kBAAhB,EAAoC,oBAApC;AACH,GA/C0C;;AAiD3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MA5D2C,kBA4DpC,cA5DoC,EA4DpB;AAAA;;AACnB,SAAK,GAAL,CAAS,IAAT,CAAc,KAAK,QAAL,EAAd;AAEA,SAAK,UAAL,GAAkB,EAAlB;AAEA,QAAI,CAAJ;;AAEA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,cAAc,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC;AACA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,CAAC,GAAG,EAAzB;AACH;;AAED,SAAK,SAAL,GAAiB,KAAK,CAAL,CAAO,4BAAP,CAAjB;AACA,SAAK,OAAL,GAAe,KAAK,CAAL,CAAO,0BAAP,CAAf;AACA,SAAK,OAAL,GAAe,KAAK,CAAL,CAAO,0BAAP,CAAf;AACA,SAAK,QAAL,GAAgB,KAAK,CAAL,CAAO,2BAAP,CAAhB;AACA,SAAK,QAAL,GAAgB,KAAK,CAAL,CAAO,2BAAP,EACX,KADW,CACL,KAAK,UAAL,CAAgB,CAAC,GAAG,CAApB,CADK,CAAhB;;AAGA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,UAAC,KAAD,EAAQ,CAAR,EAAc;AACjC,MAAA,CAAC,CAAC,QAAD,CAAD,CACK,QADL,CACc,wBADd,EAEK,GAFL,CAES,MAFT,EAEiB,KAAI,CAAC,UAAL,CAAgB,CAAhB,IAAqB,IAFtC,EAGK,QAHL,CAGc,KAAI,CAAC,OAHnB;AAKA,UAAM,MAAM,GAAG,CAAC,CAAC,QAAD,CAAD,CACV,IADU,CACL,KADK,EAEV,QAFU,CAED,yBAFC,EAGV,QAHU,CAGD,KAAI,CAAC,QAHJ,CAAf;AAKA,MAAA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAoB,KAAI,CAAC,UAAL,CAAgB,CAAhB,IACC,MAAM,CAAC,KAAP,KAAiB,CADnB,GACyB,IAD5C;;AAGA,UAAI,KAAI,CAAC,iBAAL,IAA0B,CAAC,GAAG,CAAlC,EAAqC;AACjC,QAAA,MAAM,CACD,IADL,CACU,UADV,EACsB,CADtB,EAEK,QAFL,CAEc,gCAFd;AAGH;AACJ,KAnBD;;AAqBA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,KAAK,WAArB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,MAAA,CAAC,CAAC,QAAD,CAAD,CACK,QADL,CACc,uDADd,EAEK,IAFL,CAEU,WAFV,EAEuB,CAFvB,EAGK,QAHL,CAGc,KAAK,SAHnB;AAIH;;AAED,SAAK,SAAL,GAAiB,IAAjB;;AACA,SAAK,OAAL;;AAEA,WAAO,IAAP;AACH,GA/G0C;;AAiH3C;AACJ;AACA;AACA;AACA;AACA;AACI,EAAA,cAvH2C,4BAuH1B;AACb,QAAM,SAAS,GAAG,KAAK,UAAvB;AACA,QAAM,MAAM,GAAG,KAAK,YAAL,GAAoB,KAAK,aAAzB,GACoB,KAAK,OADxC;;AAGA,SAAK,SAAL,CAAe,QAAf,GAA0B,IAA1B,CAA+B,UAAC,CAAD,EAAI,EAAJ,EAAW;AACtC,MAAA,CAAC,CAAC,EAAD,CAAD,CAAM,GAAN,CAAU,MAAV,EAAmB,SAAS,CAAC,MAAM,CAAC,CAAD,CAAP,CAAT,GAAuB,CAAxB,GAA6B,IAA/C;AACH,KAFD;;AAIA,QAAI,KAAK,WAAL,KAAqB,CAAzB,EAA4B;AACxB,WAAK,OAAL,CAAa,GAAb,CAAiB;AACb,gBAAQ,SAAS,CAAC,MAAM,CAAC,CAAD,CAAP,CAAT,GAAuB,IADlB;AAEb,iBAAS,SAAS,CAAC,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,CAAD,CAAnB,CAAT,GAAmC;AAF/B,OAAjB;AAIH;AACJ,GAtI0C;;AAwI3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,kBAlJ2C,8BAkJxB,EAlJwB,EAkJpB;AACnB,IAAA,EAAE,CAAC,cAAH;AACA,IAAA,EAAE,CAAC,eAAH;AAEA,SAAK,aAAL,GAAqB,EAArB;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAL,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC1C,WAAK,aAAL,CAAmB,IAAnB,CAAwB,CAAxB;AACH;;AAED,SAAK,YAAL,GAAoB,IAApB;AACA,SAAK,aAAL,GAAqB,CAAC,CAAC,EAAE,CAAC,aAAJ,CAAD,CAAoB,IAApB,CAAyB,WAAzB,CAArB;AAEA,IAAA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,gBAA1C,EAA4D,IAA5D;AACA,IAAA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,KAAK,kBAA5C,EAAgE,IAAhE;AAEA,IAAA,CAAC,CAAC,MAAD,CAAD,CAAU,QAAV,CAAmB,2BAAnB;AACH,GAnK0C;;AAqK3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,gBA/K2C,4BA+K1B,EA/K0B,EA+KtB;AACjB,IAAA,OAAO,CAAC,MAAR,CAAe,KAAK,YAApB;AAEA,IAAA,EAAE,CAAC,eAAH;AACA,IAAA,EAAE,CAAC,cAAH;AAEA,SAAK,YAAL,GAAoB,KAApB;AACA,SAAK,aAAL,GAAqB,IAArB;AAEA,IAAA,QAAQ,CAAC,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,gBAA7C,EAA+D,IAA/D;AACA,IAAA,QAAQ,CAAC,mBAAT,CAA6B,WAA7B,EAA0C,KAAK,kBAA/C,EAAmE,IAAnE;AAEA,IAAA,CAAC,CAAC,MAAD,CAAD,CAAU,WAAV,CAAsB,2BAAtB;;AAEA,QAAI,CAAC,CAAC,CAAC,OAAF,CAAU,KAAK,aAAf,EAA8B,KAAK,OAAnC,CAAL,EAAkD;AAC9C,WAAK,OAAL,CAAa,kBAAb,EAAiC,KAAK,aAAtC;AACH;AACJ,GAhM0C;;AAkM3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,kBA5M2C,8BA4MxB,EA5MwB,EA4MpB;AACnB,IAAA,OAAO,CAAC,MAAR,CAAe,KAAK,YAApB;;AAEA,QAAM,MAAM,GAAI,MAAM,CAAC,WAAP,GAAqB,EAAE,CAAC,OAAxB,GACA,KAAK,QAAL,CAAc,MAAd,GAAuB,IADvC;;AAEA,QAAI,UAAJ;AACA,QAAI,WAAJ;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,UAAL,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,UAAM,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,UAAL,CAAgB,CAAhB,IAAqB,MAA9B,CAAb;;AAEA,UAAI,WAAW,KAAK,SAAhB,IAA6B,IAAI,GAAG,WAAxC,EAAqD;AACjD,QAAA,WAAW,GAAG,IAAd;AACA,QAAA,UAAU,GAAG,CAAb;AACH;AACJ;;AAED,QAAI,KAAK,WAAL,KAAqB,CAAzB,EAA4B;AACxB,WAAK,aAAL,CAAmB,CAAnB,IAAwB,UAAxB;AACH,KAFD,MAEO,IAAI,KAAK,WAAL,KAAqB,CAAzB,EAA4B;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACY,UAAI,KAAK,aAAL,KAAuB,CAA3B,EAA8B;AAC1B;AACA,aAAK,aAAL,CAAmB,CAAnB,IAAwB,IAAI,CAAC,GAAL,CACpB,UADoB,EACR,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CADjB,CAAxB;;AAGA,YAAI,KAAK,OAAL,CAAa,CAAb,KAAmB,KAAK,aAAL,CAAmB,CAAnB,CAAvB,EAA8C;AAC1C,eAAK,aAAL,CAAmB,CAAnB,IAAwB,KAAK,aAAL,CAAmB,CAAnB,IAAwB,CAAhD;AACH,SAFD,MAEO;AACH,eAAK,aAAL,CAAmB,CAAnB,IAAwB,KAAK,OAAL,CAAa,CAAb,CAAxB;AACH;AACJ,OAVD,MAUO,IAAI,KAAK,aAAL,KAAuB,CAA3B,EAA8B;AACjC;AACA,aAAK,aAAL,CAAmB,CAAnB,IAAwB,IAAI,CAAC,GAAL,CAAS,UAAT,EAAqB,CAArB,CAAxB;;AAEA,YAAI,KAAK,OAAL,CAAa,CAAb,KAAmB,KAAK,aAAL,CAAmB,CAAnB,CAAvB,EAA8C;AAC1C,eAAK,aAAL,CAAmB,CAAnB,IAAwB,KAAK,aAAL,CAAmB,CAAnB,IAAwB,CAAhD;AACH,SAFD,MAEO;AACH,eAAK,aAAL,CAAmB,CAAnB,IAAwB,KAAK,OAAL,CAAa,CAAb,CAAxB;AACH;AACJ;AACJ;;AAED,SAAK,cAAL;AACH;AA9P0C,CAArB,CAA1B","file":"revisionSelectorView.js","sourcesContent":["/**\n * An abstract base class for revision selector controls. This is extended by\n * the controls used on the diff viewer and file attachment review UI pages.\n */\nRB.RevisionSelectorView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"revision-selector\">\n         <div class=\"revision-selector-trough\"></div>\n         <div class=\"revision-selector-range\"></div>\n         <div class=\"revision-selector-ticks\"></div>\n         <div class=\"revision-selector-labels\"></div>\n         <div class=\"revision-selector-handles\"></div>\n        </div>\n    `),\n\n    events: {\n        'mousedown .revision-selector-handle': '_onHandleMouseDown',\n        'mousedown .revision-selector-label': '_onLabelMouseDown',\n        'click .revision-selector-label': '_onLabelClick',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     firstLabelActive (boolean):\n     *         Whether the first label should be an active (selectable)\n     *         revision or not.\n     *\n     *     numHandles (number):\n     *         The number of revision slider handles to show.\n     */\n    initialize(options) {\n        console.assert(_.isObject(options));\n        console.assert(options.numHandles === 1 || options.numHandles === 2);\n\n        this._activeHandle = null;\n        this._firstLabelActive = options.firstLabelActive;\n        this._mouseActive = false;\n        this._numHandles = options.numHandles;\n        this._values = [];\n\n        this._rendered = false;\n\n        this.listenTo(this.model, 'change', this._update);\n\n        _.bindAll(this, '_onHandleMouseUp', '_onHandleMouseMove');\n    },\n\n    /**\n     * Render the view.\n     *\n     * Args:\n     *     revisionLabels (Array):\n     *         The labels to use for each revision.\n     *\n     * Returns:\n     *     RB.RevisionSelectorView:\n     *     This object, for chaining.\n     */\n    render(revisionLabels) {\n        this.$el.html(this.template());\n\n        this._positions = [];\n\n        let i;\n\n        for (i = 0; i < revisionLabels.length; i++) {\n            // Ticks are spaced 30px apart.\n            this._positions.push(i * 30);\n        }\n\n        this._$handles = this.$('.revision-selector-handles');\n        this._$range = this.$('.revision-selector-range');\n        this._$ticks = this.$('.revision-selector-ticks');\n        this._$labels = this.$('.revision-selector-labels');\n        this._$trough = this.$('.revision-selector-trough')\n            .width(this._positions[i - 1]);\n\n        _.each(revisionLabels, (label, i) => {\n            $('<div/>')\n                .addClass('revision-selector-tick')\n                .css('left', this._positions[i] + 'px')\n                .appendTo(this._$ticks);\n\n            const $label = $('<div/>')\n                .text(label)\n                .addClass('revision-selector-label')\n                .appendTo(this._$labels);\n\n            $label.css('left', (this._positions[i] -\n                                ($label.width() / 2)) + 'px');\n\n            if (this._firstLabelActive || i > 0) {\n                $label\n                    .data('revision', i)\n                    .addClass('revision-selector-label-active');\n            }\n        });\n\n        for (i = 0; i < this._numHandles; i++) {\n            $('<div/>')\n                .addClass('revision-selector-handle rb-icon rb-icon-range-slider')\n                .data('handle-id', i)\n                .appendTo(this._$handles);\n        }\n\n        this._rendered = true;\n        this._update();\n\n        return this;\n    },\n\n    /**\n     * Update the position of the handles.\n     *\n     * If a drag is currently active, this will draw using the pending state.\n     * Otherwise, it will show the actual revisions.\n     */\n    _updateHandles() {\n        const positions = this._positions;\n        const values = this._mouseActive ? this._activeValues\n                                         : this._values;\n\n        this._$handles.children().each((i, el) => {\n            $(el).css('left', (positions[values[i]] - 4) + 'px');\n        });\n\n        if (this._numHandles === 2) {\n            this._$range.css({\n                'left': positions[values[0]] + 'px',\n                'width': positions[values[1] - values[0]] + 'px',\n            });\n        }\n    },\n\n    /**\n     * Callback for when a handle is clicked. Starts a drag.\n     *\n     * This will register for the various events used to handle the drag\n     * operation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mousedown event.\n     */\n    _onHandleMouseDown(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        this._activeValues = [];\n\n        for (let i = 0; i < this._values.length; i++) {\n            this._activeValues.push(i);\n        }\n\n        this._mouseActive = true;\n        this._activeHandle = $(ev.currentTarget).data('handle-id');\n\n        document.addEventListener('mouseup', this._onHandleMouseUp, true);\n        document.addEventListener('mousemove', this._onHandleMouseMove, true);\n\n        $('body').addClass('revision-selector-grabbed');\n    },\n\n    /**\n     * Callback for when a mouseup event occurs anywhere.\n     *\n     * Triggers the 'revisionSelected' event with the new revisions.\n     * Removes event handlers used during the drag operation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mouseup event.\n     */\n    _onHandleMouseUp(ev) {\n        console.assert(this._mouseActive);\n\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this._mouseActive = false;\n        this._activeHandle = null;\n\n        document.removeEventListener('mouseup', this._onHandleMouseUp, true);\n        document.removeEventListener('mousemove', this._onHandleMouseMove, true);\n\n        $('body').removeClass('revision-selector-grabbed');\n\n        if (!_.isEqual(this._activeValues, this._values)) {\n            this.trigger('revisionSelected', this._activeValues);\n        }\n    },\n\n    /**\n     * Callback for a mousemove event anywhere.\n     *\n     * Updates the \"active\" values to select the revisions closest to the\n     * current location of the mouse.\n     *\n     * Args:\n     *     ev (Event):\n     *         The mousemove event.\n     */\n    _onHandleMouseMove(ev) {\n        console.assert(this._mouseActive);\n\n        const mouseX = (window.pageXOffset + ev.clientX -\n                        this._$trough.offset().left);\n        let closestPos;\n        let closestDist;\n\n        for (let i = 0; i < this._positions.length; i++) {\n            const dist = Math.abs(this._positions[i] - mouseX);\n\n            if (closestDist === undefined || dist < closestDist) {\n                closestDist = dist;\n                closestPos = i;\n            }\n        }\n\n        if (this._numHandles === 1) {\n            this._activeValues[0] = closestPos;\n        } else if (this._numHandles === 2) {\n            /*\n             * The two-handle case is complex, because we always want the first\n             * value to be less than the second. The below creates a \"pushing\"\n             * behavior where if you slide the left handle to the right, it\n             * will \"push\" the right handle to always have a span of at least\n             * one revision, and vice-versa.\n             */\n            if (this._activeHandle === 0) {\n                // Pushing to the right\n                this._activeValues[0] = Math.min(\n                    closestPos, this._positions.length - 2);\n\n                if (this._values[1] <= this._activeValues[0]) {\n                    this._activeValues[1] = this._activeValues[0] + 1;\n                } else {\n                    this._activeValues[1] = this._values[1];\n                }\n            } else if (this._activeHandle === 1) {\n                // Pushing to the left\n                this._activeValues[1] = Math.max(closestPos, 1);\n\n                if (this._values[0] >= this._activeValues[1]) {\n                    this._activeValues[0] = this._activeValues[1] - 1;\n                } else {\n                    this._activeValues[0] = this._values[0];\n                }\n            }\n        }\n\n        this._updateHandles();\n    },\n});\n"]}