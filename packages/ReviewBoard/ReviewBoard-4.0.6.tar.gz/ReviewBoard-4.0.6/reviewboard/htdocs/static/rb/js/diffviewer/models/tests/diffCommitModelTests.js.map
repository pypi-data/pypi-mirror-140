{"version":3,"sources":["diffCommitModelTests.es6.js"],"names":[],"mappings":"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","file":"diffCommitModelTests.js","sourcesContent":["suite('rb/diffviewer/models/DiffCommit', function() {\n    describe('parse', function() {\n        it('Short commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: 'A commit message.\\n',\n                    id: 1,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: 'A commit message.',\n                id: 1,\n                parentID: 'r122',\n                summary: 'A commit message.',\n            });\n            expect(model.hasSummary()).toBe(false);\n        });\n\n        it('Long commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: dedent`\n                        This is a long commit message.\n\n                        It spans several lines.\n                        It has trailing newlines as well.\n\n\n                    `,\n                    id: 2,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: (\n                    'This is a long commit message.\\n\\n' +\n                    'It spans several lines.\\n' +\n                    'It has trailing newlines as well.'\n                ),\n                id: 2,\n                parentID: 'r122',\n                summary: 'This is a long commit message.',\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n\n        it('Commit message with overlong first line', function() {\n            const message = 'abcd'.repeat(100);\n            const summary = message.substr(0, 77) + '...';\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r234',\n                    commit_message: message,\n                    id: 3,\n                    parent_id: 'r233',\n                },\n                {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r234',\n                commitMessage: message,\n                id: 3,\n                parentID: 'r233',\n                summary: summary,\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n    });\n});\n"]}