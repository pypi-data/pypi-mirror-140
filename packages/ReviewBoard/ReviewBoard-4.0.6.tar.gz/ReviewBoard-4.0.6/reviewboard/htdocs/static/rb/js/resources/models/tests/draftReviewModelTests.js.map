{"version":3,"sources":["draftReviewModelTests.es6.js"],"names":[],"mappings":"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","file":"draftReviewModelTests.js","sourcesContent":["suite('rb/resources/models/DraftReview', function() {\n    let model;\n    let parentObject;\n\n    beforeEach(function() {\n        parentObject = new RB.BaseResource({\n            links: {\n                reviews: {\n                    href: '/api/foos/'\n                },\n            },\n        });\n\n        model = new RB.DraftReview({\n            parentObject: parentObject,\n        });\n        model.rspNamespace = 'foo';\n    });\n\n    describe('Methods', function() {\n        let callbacks;\n\n        beforeEach(function() {\n            callbacks = {\n                ready: function() {},\n                success: function() {},\n                error: function() {},\n            };\n\n            spyOn(callbacks, 'ready');\n            spyOn(callbacks, 'success');\n            spyOn(callbacks, 'error');\n        });\n\n        describe('ready', function() {\n            beforeEach(function() {\n                spyOn(Backbone.Model.prototype, 'fetch')\n                    .and.callFake(options => {\n                        if (options && _.isFunction(options.success)) {\n                            options.success();\n                        }\n                    });\n                spyOn(parentObject, 'ready')\n                    .and.callFake((options, context) => {\n                        if (options && _.isFunction(options.ready)) {\n                            options.ready.call(context);\n                        }\n                    });\n                spyOn(model, '_retrieveDraft')\n                    .and.callFake((options, context) => {\n                        if (options && _.isFunction(options.ready)) {\n                            options.ready.call(context);\n                        }\n                    });\n            });\n\n            describe('With isNew=true', function() {\n                beforeEach(function() {\n                    expect(model.isNew()).toBe(true);\n                    expect(model.get('loaded')).toBe(false);\n                });\n\n                it('With callbacks', function() {\n                    model.ready(callbacks);\n\n                    expect(parentObject.ready).toHaveBeenCalled();\n                    expect(model._retrieveDraft).toHaveBeenCalled();\n                    expect(callbacks.ready).toHaveBeenCalled();\n                });\n            });\n\n            describe('With isNew=false', function() {\n                beforeEach(function() {\n                    model.set({\n                        id: 123,\n                    });\n                });\n\n                it('With callbacks', function() {\n                    model.ready(callbacks);\n\n                    expect(parentObject.ready).toHaveBeenCalled();\n                    expect(model._retrieveDraft).not.toHaveBeenCalled();\n                    expect(callbacks.ready).toHaveBeenCalled();\n                });\n            });\n        });\n\n        describe('publish', function() {\n            beforeEach(function() {\n                spyOn(model, 'save').and.callFake((options, context) => {\n                    options.success.call(context);\n                });\n            });\n\n            it('Triggers \"publishing\" event before publish', function() {\n                spyOn(model, 'trigger');\n                spyOn(model, 'ready');\n\n                model.publish();\n\n                expect(model.trigger).toHaveBeenCalledWith('publishing');\n            });\n\n            it('Triggers \"published\" event after publish', function() {\n                spyOn(model, 'trigger');\n\n                spyOn(model, 'ready').and.callFake((options, context) => {\n                    options.ready.call(context);\n                });\n\n                model.publish(callbacks);\n\n                expect(callbacks.success).toHaveBeenCalled();\n                expect(model.trigger).toHaveBeenCalledWith('published');\n            });\n\n            it('Sets \"public\" to true', function() {\n                spyOn(model, 'ready').and.callFake((options, context) => {\n                    options.ready.call(context);\n                });\n\n                expect(model.get('public')).toBe(false);\n\n                model.publish(callbacks);\n\n                expect(callbacks.success).toHaveBeenCalled();\n                expect(model.get('public')).toBe(true);\n            });\n        });\n    });\n});\n"]}