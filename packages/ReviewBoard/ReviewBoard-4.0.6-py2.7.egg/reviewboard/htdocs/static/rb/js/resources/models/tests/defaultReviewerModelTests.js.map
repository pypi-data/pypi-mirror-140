{"version":3,"sources":["defaultReviewerModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,qCAAD,EAAwC,YAAW;AACpD,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB,IAAA,KAAK,GAAG,IAAI,EAAE,CAAC,eAAP,EAAR;AACH,GAFS,CAAV;AAIA,EAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AACzB,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,UAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;AACrB,QAAA,IAAI,EAAE,IADe;AAErB,QAAA,gBAAgB,EAAE;AACd,UAAA,EAAE,EAAE,EADU;AAEd,UAAA,IAAI,EAAE,qBAFQ;AAGd,UAAA,UAAU,EAAE;AAHE;AAFG,OAAZ,CAAb;AASA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,EAAN,CAAN,CAAgB,IAAhB,CAAqB,EAArB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,qBAAvB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,SAAN,CAAN,CAAuB,IAAvB,CAA4B,SAA5B;AACH,KAdC,CAAF;AAeH,GAhBO,CAAR;AAkBA,EAAA,QAAQ,CAAC,QAAD,EAAW,YAAW;AAC1B,IAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAC9B,MAAA,EAAE,CAAC,YAAD,EAAe,YAAW;AACxB,QAAA,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,KAAlB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,KAAvB;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAQA,IAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAW;AACnC,MAAA,EAAE,CAAC,YAAD,EAAe,YAAW;AACxB,QAAA,KAAK,CAAC,GAAN,CAAU,WAAV,EAAuB,SAAvB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,UAAN,CAAN,CAAwB,IAAxB,CAA6B,SAA7B;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAOH,GAhBO,CAAR;AAiBH,CA1CI,CAAL","file":"defaultReviewerModelTests.js","sourcesContent":["suite('rb/resources/models/DefaultReviewer', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.DefaultReviewer();\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                default_reviewer: {\n                    id: 42,\n                    name: 'my-default-reviewer',\n                    file_regex: '/foo/.*',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.name).toBe('my-default-reviewer');\n            expect(data.fileRegex).toBe('/foo/.*');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('name field', function() {\n            it('With value', function() {\n                model.set('name', 'foo');\n                const data = model.toJSON();\n                expect(data.name).toBe('foo');\n            });\n        });\n\n        describe('fileRegex field', function() {\n            it('With value', function() {\n                model.set('fileRegex', '/foo/.*');\n                const data = model.toJSON();\n                expect(data.file_regex).toBe('/foo/.*');\n            });\n        });\n    });\n});\n"]}