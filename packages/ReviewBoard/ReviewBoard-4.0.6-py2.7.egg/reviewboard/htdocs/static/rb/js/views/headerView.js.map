{"version":3,"sources":["headerView.es6.js"],"names":[],"mappings":"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","file":"headerView.js","sourcesContent":["/**\n * Site Header\n */\nRB.HeaderView = Backbone.View.extend({\n    SEARCH_SUMMARY_TRIM_LEN: 28,\n    DESKTOP_SEARCH_RESULTS_WIDTH: 350,\n\n    events: {\n        'click #nav_toggle': '_handleNavClick',\n        'touchstart #nav_toggle': '_handleNavClick',\n        'focus #search_field': '_closeMobileMenu',\n    },\n\n    /**\n     * Initialize the header.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $body (jQuery, optional):\n     *         The body element. This is useful for unit tests.\n     *\n     *     $pageSidebar (jQuery, optional):\n     *         The page sidebar element. This is useful for unit tests.\n     */\n    initialize(options={}) {\n        if (RB.HeaderView.instance !== null) {\n            console.warn('There are two instances of RB.HeaderView on the ' +\n                         'page. Make sure only one RB.PageView is ' +\n                         'instantiated and registered through ' +\n                         'RB.PageManager.setupPage().');\n        } else {\n            RB.HeaderView.instance = this;\n        }\n\n        this.options = options;\n\n        /*\n         * This is used by RB.PageManager to determine if a RB.PageView\n         * subclass has correctly rendered a HeaderView, or if PageManager\n         * needs to take care of it.\n         *\n         * This is deprecated and can be removed in Review Board 5.0.\n         */\n        this.isRendered = false;\n\n        this._mobileMenuOpened = false;\n\n        this._$window = null;\n        this._$body = null;\n        this._$navToggle = null;\n        this._$mobileMenuMask = null;\n    },\n\n    /**\n     * Remove the view from the DOM and disable event handling.\n     *\n     * This will also unset :js:attr:`RB.HeaderView.instance`, if currently\n     * set to this instance.\n     */\n    remove() {\n        if (RB.HeaderView.instance === this) {\n            RB.HeaderView.instance = null;\n        }\n\n        if (this._$window) {\n            this._$window.off('resize.rbHeaderView');\n        }\n\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /**\n     * Render the header.\n     *\n     * Returns:\n     *     RB.HeaderView:\n     *     This view, for chaining.\n     */\n    render() {\n        const options = this.options;\n\n        this._$window = $(window);\n        this._$body = options.body || $(document.body);\n        this._$navToggle = $('#nav_toggle');\n        this._$mobileMenuMask = $('<div id=\"mobile_menu_mask\"/>')\n            .on('click touchstart', this._closeMobileMenu.bind(this))\n            .insertAfter(options.$pageSidebar || $('#page-sidebar'));\n\n        this._$window.on('resize.rbHeaderView', _.throttle(\n            this._recalcMobileMode.bind(this),\n            100));\n        this._recalcMobileMode();\n\n        this._setupSearch();\n\n        this.isRendered = true;\n\n        return this;\n    },\n\n    /**\n     * Handle a click on the mobile navigation menu.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _handleNavClick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this._setMobileMenuOpened(!this._mobileMenuOpened);\n    },\n\n    /**\n     * Recalculate whether the header and nav menu is in mobile mode.\n     */\n    _recalcMobileMode() {\n        const inMobileMode = this._$navToggle.is(':visible');\n\n        if (inMobileMode === this.inMobileMode) {\n            return;\n        }\n\n        if (!inMobileMode) {\n            this._setMobileMenuOpened(false);\n        }\n\n        this.inMobileMode = inMobileMode;\n        this.trigger('mobileModeChanged', inMobileMode);\n    },\n\n    /**\n     * Close the mobile menu.\n     *\n     * This is used as an event handler, to make it easy to close the\n     * mobile menu and prevent any bubbling or default actions from the\n     * event.\n     */\n    _closeMobileMenu() {\n        this._setMobileMenuOpened(false);\n\n        return false;\n    },\n\n    /**\n     * Set up the search auto-complete field.\n     */\n    _setupSearch() {\n        this._$search = $('#search_field').rbautocomplete({\n            formatItem: data => {\n                let s;\n\n                if (data.username) {\n                    // For the format of users:\n                    s = data.username;\n\n                    if (data.fullname) {\n                        s += ` <span>(${_.escape(data.fullname)})</span>`;\n                    }\n\n                } else if (data.name) {\n                    // For the format of groups:\n                    const displayName = _.escape(data.display_name);\n                    s = `${data.name} <span>(${displayName})</span>`;\n                } else if (data.summary) {\n                    // For the format of review requests:\n                    if (data.summary.length < this.SEARCH_SUMMARY_TRIM_LEN) {\n                        s = data.summary;\n                    } else {\n                        s = data.summary.substring(\n                            0, this.SEARCH_SUMMARY_TRIM_LEN);\n                    }\n\n                    s += ` <span>(${_.escape(data.id)})</span>`;\n                }\n\n                return s;\n            },\n            matchCase: false,\n            multiple: false,\n            clickToURL: true,\n            selectFirst: false,\n            width: this.DESKTOP_SEARCH_RESULTS_WIDTH,\n            enterToURL: true,\n            resultsParentEl: $('#page-container'),\n            resultsClass: 'ui-autocomplete-results search-results',\n            parse: data => {\n                const objects = ['users', 'groups', 'review_requests'];\n                const keys = ['username', 'name', 'summary'];\n\n                const parsed = [];\n\n                for (let j = 0; j < objects.length; j++) {\n                    const object = objects[j];\n                    const items = data.search[object];\n\n                    for (let i = 0; i < items.length; i++) {\n                        const value = items[i];\n                        const key = keys[j];\n\n\n                        if (j !== 2) {\n                            // For users and groups, always show.\n                            parsed.push({\n                                data: value,\n                                value: value[key],\n                                result: value[key],\n                            });\n                        } else if (value.public) {\n                            /*\n                             * For review requests, only show ones that are\n                             * public.\n                             */\n                            parsed.push({\n                                data: value,\n                                value: value[key],\n                                result: value[key],\n                            });\n                        }\n                    }\n                }\n\n                return parsed;\n            },\n            url: `${SITE_ROOT}api/search/`,\n        });\n    },\n\n    /**\n     * Set whether the mobile menu is opened.\n     *\n     * Args:\n     *     opened (boolean):\n     *         Whether the menu is open.\n     */\n    _setMobileMenuOpened(opened) {\n        if (opened === this._mobileMenuOpened) {\n            return;\n        }\n\n        if (opened) {\n            this._$mobileMenuMask.show();\n            _.defer(() => this._$body.addClass('js-mobile-menu-open'));\n        } else {\n            this._$body.removeClass('js-mobile-menu-open');\n            _.delay(() => this._$mobileMenuMask.hide(), 300);\n        }\n\n        this._mobileMenuOpened = opened;\n    },\n}, {\n    /** The instance of the HeaderView. */\n    instance: null,\n});\n"]}