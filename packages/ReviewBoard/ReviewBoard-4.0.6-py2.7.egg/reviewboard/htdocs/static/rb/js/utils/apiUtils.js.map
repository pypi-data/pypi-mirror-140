{"version":3,"sources":["apiUtils.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,aAAF,CAAgB,kBAAhB,EAAoC,UAAS,OAAT,EAAkB,WAAlB,EAA+B,KAA/B,EAAsC;AACtE,MAAI,CAAC,MAAM,CAAC,QAAZ,EAAsB;AAClB,WAAO,IAAP;AACH;;AAED,MAAI,GAAJ;AAEA,SAAO;AACH,IAAA,IADG,gBACE,OADF,EACW,UADX,EACuB;AACtB,MAAA,GAAG,GAAG,OAAO,CAAC,GAAR,EAAN;AACA,MAAA,GAAG,CAAC,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AAC/B,YAAM,MAAM,GAAG,EAAf;AACA,QAAA,MAAM,CAAC,OAAO,CAAC,QAAT,CAAN,GAA2B,GAAG,CAAC,QAA/B;AAEA,QAAA,UAAU,CAAC,GAAG,CAAC,MAAL,EAAa,GAAG,CAAC,UAAjB,EAA6B,MAA7B,EACC,GAAG,CAAC,qBAAJ,EADD,CAAV;AAEH,OAND;;AAQA,UAAI,OAAO,CAAC,QAAZ,EAAsB;AAClB,QAAA,GAAG,CAAC,IAAJ,CAAS,OAAO,CAAC,IAAjB,EAAuB,OAAO,CAAC,GAA/B,EAAoC,OAAO,CAAC,KAA5C,EACS,OAAO,CAAC,QADjB,EAC2B,OAAO,CAAC,QADnC;AAEH,OAHD,MAGO;AACH,QAAA,GAAG,CAAC,IAAJ,CAAS,OAAO,CAAC,IAAjB,EAAuB,OAAO,CAAC,GAA/B,EAAoC,OAAO,CAAC,KAA5C;AACH;;AAED,MAAA,GAAG,CAAC,YAAJ,GAAmB,OAAO,CAAC,QAA3B;AAEA;;AACA,UAAM,SAAS,GAAG,OAAO,CAAC,SAA1B;;AAEA,UAAI,SAAJ,EAAe;AACX,aAAK,IAAI,KAAT,IAAkB,SAAlB,EAA6B;AACzB,cAAI,SAAS,CAAC,cAAV,CAAyB,KAAzB,CAAJ,EAAqC;AACjC,YAAA,GAAG,CAAC,KAAD,CAAH,GAAa,SAAS,CAAC,KAAD,CAAtB;AACH;AACJ;AACJ;;AAED,UAAI,CAAC,OAAO,CAAC,WAAT,IAAwB,CAAC,OAAO,CAAC,kBAAD,CAApC,EAA0D;AACtD,QAAA,OAAO,CAAC,kBAAD,CAAP,GAA8B,gBAA9B;AACH;AAED;AACZ;AACA;;;AACY,UAAI;AACA,aAAK,IAAI,GAAT,IAAgB,OAAhB,EAAyB;AACrB,cAAI,OAAO,CAAC,cAAR,CAAuB,GAAvB,CAAJ,EAAiC;AAC7B,YAAA,GAAG,CAAC,gBAAJ,CAAqB,GAArB,EAA0B,OAAO,CAAC,GAAD,CAAjC;AACH;AACJ;AACJ,OAND,CAME,OAAO,CAAP,EAAU,CAAE;;AAEd,MAAA,GAAG,CAAC,IAAJ,CAAS,OAAO,CAAC,UAAR,GAAqB,OAAO,CAAC,IAA7B,GAAoC,IAA7C;AACH,KA/CE;AAiDH,IAAA,KAjDG,mBAiDK;AACJ,UAAI,GAAG,IAAI,GAAG,CAAC,UAAJ,KAAmB,CAA9B,EAAiC;AAC7B,QAAA,GAAG,CAAC,KAAJ;AACH;AACJ;AArDE,GAAP;AAuDH,CA9DD;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,EAAE,CAAC,oBAAH,GAA0B,UAAS,OAAT,EAAkB,OAAlB,EAA2B;AACjD,MAAM,kBAAkB,GAAG,CAAC,CAAC,qBAAD,CAA5B;;AAEA,MAAI,OAAJ,EAAa;AACT,QAAI,EAAE,CAAC,WAAH,CAAe,eAAf,IAAkC,CAAC,OAAO,CAAC,mBAA/C,EAAoE;AAChE,MAAA,kBAAkB,CAAC,QAAnB,CAA4B,iBAA5B,EACK,IADL,CACW,OAAO,CAAC,IAAR,IAAgB,OAAO,CAAC,IAAR,KAAiB,KAAlC,+CADV;AAIA,MAAA,kBAAkB,CACb,WADL,CACiB,OADjB,EAEK,IAFL;AAGH;AACJ,GAVD,MAUO,IAAI,EAAE,CAAC,WAAH,CAAe,eAAf,IACA,CAAC,OAAO,CAAC,mBADT,IAEA,CAAC,kBAAkB,CAAC,QAAnB,CAA4B,OAA5B,CAFL,EAE2C;AAC9C,IAAA,kBAAkB,CACb,KADL,CACW,GADX,EAEK,OAFL,CAEa,MAFb;AAGH;AACJ,CApBD;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,EAAE,CAAC,OAAH,GAAa,UAAS,OAAT,EAAkB;AAC3B,MAAM,MAAM,GAAG,OAAO,CAAC,MAAR,IAAkB,EAAjC;AACA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAR,IAAgB,SAAS,GAAG,MAAZ,GAAqB,KAArB,GAA6B,OAAO,CAAC,IAAjE;;AAEA,WAAS,aAAT,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC;AAC9B,QAAM,OAAO,GAAG,CAAC,CAAC,WAAD,CAAD,CAAe,KAAf,CAAqB,MAArB,CAAhB;AACA,QAAM,WAAW,GAAG,OAAO,CAAC,IAAR,GAAe,CAAC,CAAC,KAAF,CAAQ,OAAO,CAAC,IAAhB,CAAf,GAAuC,QAA3D;AAEA,IAAA,CAAC,CAAC,iCAAD,CAAD,CACK,QADL,CACc,QAAQ,CAAC,IADvB,EAEK,MAFL,CAEY,oCAAoC,OAApC,GAA8C,GAAG,CAAC,MAAlD,GAA2D,MAFvE,EAGK,MAHL,CAGY,oCAAoC,OAApC,GAA8C,GAAG,CAAC,UAAlD,GAA+D,MAH3E,EAIK,MAJL,CAIY,qCAAqC,OAArC,GAA+C,GAA/C,GAAqD,MAJjE,EAKK,MALL,CAKY,sCAAsC,OAAtC,GAAgD,WAAhD,GAA8D,MAL1E,EAMK,MANL,CAMY,6DAA6D,UANzE,EAOK,MAPL,0WAQK,MARL,sIASK,MATL,CASY,OATZ,EAUK,EAVL,CAUQ,QAVR,EAUkB,YAAW;AACrB,MAAA,OAAO,CAAC,MAAR,CAAe,CAAC,CAAC,IAAD,CAAD,CAAQ,MAAR,KAAmB,OAAO,CAAC,QAAR,GAAmB,GAArD;AACH,KAZL,EAaK,QAbL,CAac;AACN,MAAA,QAAQ,EAAE,IADJ;AAEN,MAAA,QAAQ,EAAE,IAFJ;AAGN,MAAA,KAAK;AAHC,KAbd;AAmBA,QAAM,GAAG,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,eAAX,IAA8B,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAAyB,QAAnE;AACA,IAAA,GAAG,CAAC,IAAJ;AACA,IAAA,GAAG,CAAC,KAAJ,CAAU,IAAV;AACA,IAAA,GAAG,CAAC,KAAJ;AACH;;AAED,WAAS,MAAT,GAAkB;AACd,QAAM,kBAAkB,GAAG,CAAC,CAAC,qBAAD,CAA5B;;AAEA,QAAI,OAAO,CAAC,OAAZ,EAAqB;AACjB,MAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAqB,UAArB,EAAiC,IAAjC;AACH;;AAED,IAAA,EAAE,CAAC,oBAAH,CAAwB,IAAxB,EAA8B,OAA9B;AAEA,QAAM,IAAI,GAAG,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe;AACxB,MAAA,GAAG,EAAE,GADmB;AAExB,MAAA,IAAI,EAAE,OAAO,CAAC,IAFU;AAGxB,MAAA,QAAQ,EAAE,OAAO,CAAC,QAAR,IAAoB,MAHN;AAIxB,MAAA,KAAK,EAAE,eAAS,GAAT,EAAc,UAAd,EAA0B,WAA1B,EAAuC;AAC1C,YAAM,YAAY,GAAG,GAAG,CAAC,YAAzB;AAEA,YAAI,GAAG,GAAG,IAAV;;AACA,YAAI;AACA,UAAA,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,YAAX,CAAN;AACH,SAFD,CAEE,OAAO,CAAP,EAAU,CACX;;AAED,YAAK,GAAG,IAAI,GAAG,CAAC,IAAZ,IAAqB,GAAG,CAAC,MAAJ,KAAe,GAAxC,EAA6C;AACzC,cAAI,CAAC,CAAC,UAAF,CAAa,OAAO,CAAC,OAArB,CAAJ,EAAmC;AAC/B,YAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,EAAqB,GAAG,CAAC,MAAzB;AACH;;AAED;AACH;;AAED,QAAA,kBAAkB,CACb,QADL,CACc,OADd,EAEK,IAFL,sCAGK,MAHL,CAIQ,CAAC,CAAC,gBAAD,CAAD,CACK,IADL,0BAEK,KAFL,CAEW;AAAA,iBAAM,aAAa,CAAC,GAAD,EAAM,YAAN,CAAnB;AAAA,SAFX,CAJR,EAQK,MARL,CASQ,CAAC,CAAC,gBAAD,CAAD,CACK,IADL,qBAEK,KAFL,CAEW,YAAW;AACd,UAAA,kBAAkB,CAAC,OAAnB,CAA2B,MAA3B;AACA,iBAAO,KAAP;AACH,SALL,CATR;;AAiBA,YAAI,CAAC,CAAC,UAAF,CAAa,OAAO,CAAC,KAArB,CAAJ,EAAiC;AAC7B,UAAA,OAAO,CAAC,KAAR,CAAc,GAAd,EAAmB,UAAnB,EAA+B,WAA/B;AACH;AACJ,OAzCuB;AA0CxB,MAAA,QAAQ,EAAE,kBAAS,GAAT,EAAc,MAAd,EAAsB;AAC5B,YAAI,OAAO,CAAC,OAAZ,EAAqB;AACjB,UAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAqB,UAArB,EAAiC,KAAjC;AACH;;AAED,QAAA,EAAE,CAAC,oBAAH,CAAwB,KAAxB,EAA+B,OAA/B;;AAEA,YAAI,CAAC,CAAC,UAAF,CAAa,OAAO,CAAC,QAArB,CAAJ,EAAoC;AAChC,UAAA,OAAO,CAAC,QAAR,CAAiB,GAAjB,EAAsB,MAAtB;AACH;;AAED,QAAA,CAAC,CAAC,SAAF,CAAY,WAAZ,EAAyB,IAAzB;AACH;AAtDuB,KAAf,EAuDV,OAvDU,CAAb;;AAyDA,QAAI,IAAI,CAAC,IAAL,KAAc,IAAd,IAAsB,IAAI,CAAC,IAAL,KAAc,SAApC,IACC,IAAI,CAAC,IAAL,YAAqB,MAArB,IACA,EAAE,MAAM,CAAC,IAAP,IAAe,IAAI,CAAC,IAAL,YAAqB,IAAtC,CAFL,EAEmD;AAC/C,MAAA,IAAI,CAAC,IAAL,GAAY,CAAC,CAAC,MAAF,CAAS;AACjB,QAAA,UAAU,EAAE;AADK,OAAT,EAET,IAAI,CAAC,IAAL,IAAa,EAFJ,CAAZ;AAGH;;AAED,QAAI,OAAO,CAAC,IAAZ,EAAkB;AACd,MAAA,OAAO,CAAC,IAAR,CAAa,UAAb,CAAwB,IAAxB;AACH,KAFD,MAEO;AACH,MAAA,CAAC,CAAC,IAAF,CAAO,IAAP;AACH;AACJ;;AAED,EAAA,OAAO,CAAC,IAAR,GAAe,OAAO,CAAC,IAAR,IAAgB,MAA/B;;AAEA,MAAI,OAAO,CAAC,IAAR,KAAiB,KAAjB,IAA0B,OAAO,CAAC,IAAR,KAAiB,MAA3C,IACA,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,UAA5B,CADJ,EAC6C;AACzC,IAAA,OAAO,CAAC,KAAR,CAAc,iDAAd,EACc,OAAO,CAAC,IADtB;AAEA;AACH,GAzH0B,CA2H3B;;;AACA,MAAI,EAAE,CAAC,WAAH,CAAe,aAAf,IAAgC,OAAO,CAAC,IAAR,KAAiB,KAArD,EAA4D;AACxD,IAAA,CAAC,CAAC,SAAF,CAAY,WAAZ,EAAyB,GAAzB,CAA6B,MAA7B;AACA,IAAA,CAAC,CAAC,SAAF,CAAY,WAAZ,EAAyB,KAAzB;AACH,GAHD,MAGO;AACH,IAAA,MAAM;AACT;AACJ,CAlID;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,EAAE,CAAC,aAAH,GAAmB,UAAS,GAAT,EAAc;AAC7B,MAAI;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,YAAf,CAAZ;AACA,IAAA,GAAG,CAAC,YAAJ,GAAmB,GAAnB;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,GAAJ,CAAQ,GAAxB;AACH,GAJD,CAIE,OAAO,CAAP,EAAU;AACR,IAAA,GAAG,CAAC,YAAJ,GAAmB,IAAnB;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,UAAU,GAAG,CAAC,MAAd,GAAuB,GAAvB,GAA6B,GAAG,CAAC,UAAjD;AACH;AACJ,CATD;;AAYA,EAAE,CAAC,WAAH,GAAiB;AACb,EAAA,aAAa,EAAE,IADF;AAEb,EAAA,eAAe,EAAE;AAFJ,CAAjB;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAQ,CAAC,IAAT,GAAgB,UAAA,OAAO;AAAA,SAAI,EAAE,CAAC,OAAH,CAAW,OAAX,CAAJ;AAAA,CAAvB,C,CAGA","file":"apiUtils.js","sourcesContent":["/**\n * jQuery AJAX transport for receiving Blob and ArrayBuffer data.\n *\n * XMLHttpRequest2 supports receiving binary data represented by\n * :js:class:`Blob` and :js:class:`ArrayBuffer`. This transport enabled binary\n * data support through standard :js:func:`jQuery.ajax` calls.\n */\n$.ajaxTransport('arraybuffer blob', function(options, origOptions, jqXHR) {\n    if (!window.FormData) {\n        return null;\n    }\n\n    let xhr;\n\n    return {\n        send(headers, completeCB) {\n            xhr = options.xhr();\n            xhr.addEventListener('load', () => {\n                const result = {};\n                result[options.dataType] = xhr.response;\n\n                completeCB(xhr.status, xhr.statusText, result,\n                           xhr.getAllResponseHeaders());\n            });\n\n            if (options.username) {\n                xhr.open(options.type, options.url, options.async,\n                         options.username, options.password);\n            } else {\n                xhr.open(options.type, options.url, options.async);\n            }\n\n            xhr.responseType = options.dataType;\n\n            /* Apply any custom fields that may be provided. */\n            const xhrFields = options.xhrFields;\n\n            if (xhrFields) {\n                for (let field in xhrFields) {\n                    if (xhrFields.hasOwnProperty(field)) {\n                        xhr[field] = xhrFields[field];\n                    }\n                }\n            }\n\n            if (!options.crossDomain && !headers['X-Requested-With']) {\n                headers['X-Requested-With'] = 'XMLHttpRequest';\n            }\n\n            /*\n             * Catch errors with cross-domain requests, like jQuery does.\n             */\n            try {\n                for (let key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        xhr.setRequestHeader(key, headers[key]);\n                    }\n                }\n            } catch (e) {}\n\n            xhr.send(options.hasContent ? options.data : null);\n        },\n\n        abort() {\n            if (xhr && xhr.readyState !== 4) {\n                xhr.abort();\n            }\n        },\n    };\n});\n\n\n/**\n * Enable or disable the activity indicator.\n *\n * Args:\n *     enabled (boolean):\n *         Whether the activity indicator should be enabled.\n *\n *     options (object):\n *         Additional options.\n *\n * Option Args:\n *     noActivityIndicator (boolean):\n *         True if the indicator should be suppressed, even if ``enabled`` is\n *         true.\n *\n *     type (string):\n *         The type of HTTP request that the indicator is representing. This\n *         will be either ``GET`` (loading) or ``POST`` (saving).\n */\nRB.setActivityIndicator = function(enabled, options) {\n    const $activityIndicator = $('#activity-indicator');\n\n    if (enabled) {\n        if (RB.ajaxOptions.enableIndicator && !options.noActivityIndicator) {\n            $activityIndicator.children('.indicator-text')\n                .text((options.type && options.type === 'GET')\n                      ? gettext('Loading...') : gettext('Saving...'));\n\n            $activityIndicator\n                .removeClass('error')\n                .show();\n        }\n    } else if (RB.ajaxOptions.enableIndicator &&\n               !options.noActivityIndicator &&\n               !$activityIndicator.hasClass('error')) {\n        $activityIndicator\n            .delay(250)\n            .fadeOut('fast');\n    }\n};\n\n\n/**\n * Make an API request.\n *\n * This will handle any button disabling/enabling, write to the correct path\n * prefix, do form uploading, and display server errors.\n *\n * Args:\n *     options (object):\n *         Options for the API request.\n *\n * Option Args:\n *     buttons (jQuery):\n *         Any buttons to disable while the API request is in flight.\n *\n *     form (jQuery):\n *         A form to submit, if any.\n *\n *     type (string):\n *         The type of HTTP request to make. Defaults to ``POST``.\n *\n *     prefix (string):\n *         The prefix for the API path (after ``SITE_ROOT``, before ``api``).\n *\n *     path (string):\n *         The relative path from the server name to the Review Board API\n *         endpoint.\n *\n *     data (object):\n *         Additional data to send with the request.\n *\n *     success (function):\n *         An optional success callback. If not specified, the default handler\n *         will reload the page.\n *\n *     error (function):\n *         An optional error callback, to be called after the error banner is\n *         displayed.\n *\n *     complete (function):\n *         An optional complete callback, which is called after the success or\n *         error callbacks.\n */\nRB.apiCall = function(options) {\n    const prefix = options.prefix || '';\n    const url = options.url || (SITE_ROOT + prefix + 'api' + options.path);\n\n    function showErrorPage(xhr, data) {\n        const $iframe = $('<iframe/>').width('100%');\n        const requestData = options.data ? $.param(options.data) : '(none)';\n\n        $('<div class=\"server-error-box\"/>')\n            .appendTo(document.body)\n            .append('<p><b>' + gettext('Error Code:') + '</b> ' + xhr.status + '</p>')\n            .append('<p><b>' + gettext('Error Text:') + '</b> ' + xhr.statusText + '</p>')\n            .append('<p><b>' + gettext('Request URL:') + '</b> ' + url + '</p>')\n            .append('<p><b>' + gettext('Request Data:') + '</b> ' + requestData + '</p>')\n            .append('<p class=\"response-data\"><b>' + gettext('Response Data:') + '</b></p>')\n            .append(gettext('<p>There may be useful error details below. The following error page may be useful to your system administrator or when <a href=\"https://www.reviewboard.org/bugs/new/\">reporting a bug</a>. To save the page, right-click the error below and choose \"Save Page As,\" if available, or \"View Source\" and save the result as a <tt>.html</tt> file.</p>'))\n            .append(gettext('<p><b>Warning:</b> Be sure to remove any sensitive material that may exist in the error page before reporting a bug!</p>'))\n            .append($iframe)\n            .on('resize', function() {\n                $iframe.height($(this).height() - $iframe.position().top);\n            })\n            .modalBox({\n                stretchX: true,\n                stretchY: true,\n                title: gettext('Server Error Details')\n            });\n\n        const doc = $iframe[0].contentDocument || $iframe[0].contentWindow.document;\n        doc.open();\n        doc.write(data);\n        doc.close();\n    }\n\n    function doCall() {\n        const $activityIndicator = $('#activity-indicator');\n\n        if (options.buttons) {\n            options.buttons.attr('disabled', true);\n        }\n\n        RB.setActivityIndicator(true, options);\n\n        const data = $.extend(true, {\n            url: url,\n            data: options.data,\n            dataType: options.dataType || 'json',\n            error: function(xhr, textStatus, errorThrown) {\n                const responseText = xhr.responseText;\n\n                let rsp = null;\n                try {\n                    rsp = JSON.parse(responseText);\n                } catch (e) {\n                }\n\n                if ((rsp && rsp.stat) || xhr.status === 204) {\n                    if (_.isFunction(options.success)) {\n                        options.success(rsp, xhr.status);\n                    }\n\n                    return;\n                }\n\n                $activityIndicator\n                    .addClass('error')\n                    .text(gettext('A server error occurred.'))\n                    .append(\n                        $('<a href=\"#\" />')\n                            .text(gettext('Show Details'))\n                            .click(() => showErrorPage(xhr, responseText))\n                    )\n                    .append(\n                        $('<a href=\"#\" />')\n                            .text(gettext('Dismiss'))\n                            .click(function() {\n                                $activityIndicator.fadeOut('fast');\n                                return false;\n                            })\n                    );\n\n                if (_.isFunction(options.error)) {\n                    options.error(xhr, textStatus, errorThrown);\n                }\n            },\n            complete: function(xhr, status) {\n                if (options.buttons) {\n                    options.buttons.attr('disabled', false);\n                }\n\n                RB.setActivityIndicator(false, options);\n\n                if (_.isFunction(options.complete)) {\n                    options.complete(xhr, status);\n                }\n\n                $.funcQueue('rbapicall').next();\n            }\n        }, options);\n\n        if (data.data === null || data.data === undefined ||\n            (data.data instanceof Object &&\n             !(window.Blob && data.data instanceof Blob))) {\n            data.data = $.extend({\n                api_format: 'json'\n            }, data.data || {});\n        }\n\n        if (options.form) {\n            options.form.ajaxSubmit(data);\n        } else {\n            $.ajax(data);\n        }\n    }\n\n    options.type = options.type || 'POST';\n\n    if (options.type !== 'GET' && options.type !== 'HEAD' &&\n        RB.UserSession.instance.get('readOnly')) {\n        console.error('%s request not sent. Site is in read-only mode.',\n                      options.type);\n        return;\n    }\n\n    // We allow disabling the function queue for the sake of unit tests.\n    if (RB.ajaxOptions.enableQueuing && options.type !== 'GET') {\n        $.funcQueue('rbapicall').add(doCall);\n        $.funcQueue('rbapicall').start();\n    } else {\n        doCall();\n    }\n};\n\n/**\n * Parse API error information from a response and stores it.\n *\n * The xhr object provided will be extended with two new attributes:\n * 'errorText' and 'errorPayload'. These represent the response's error\n * message and full error payload, respectively.\n *\n * Args:\n *     xhr (jqXHR):\n *         The XMLHttpRequest object.\n */\nRB.storeAPIError = function(xhr) {\n    try {\n        const rsp = JSON.parse(xhr.responseText);\n        xhr.errorPayload = rsp;\n        xhr.errorText = rsp.err.msg;\n    } catch (e) {\n        xhr.errorPayload = null;\n        xhr.errorText = 'HTTP ' + xhr.status + ' ' + xhr.statusText;\n    }\n};\n\n\nRB.ajaxOptions = {\n    enableQueuing: true,\n    enableIndicator: true\n};\n\n\n/*\n * Call RB.apiCall instead of $.ajax.\n *\n * We wrap instead of assign for now so that we can hook in/override\n * RB.apiCall with unit tests.\n */\nBackbone.ajax = options => RB.apiCall(options);\n\n\n// vim: set et:sw=4:\n"]}