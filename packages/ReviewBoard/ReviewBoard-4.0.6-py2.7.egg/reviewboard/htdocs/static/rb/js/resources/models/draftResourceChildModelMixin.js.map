{"version":3,"sources":["draftResourceChildModelMixin.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,4BAAH,GAAkC;AAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,OAd8B,qBAcS;AAAA,QAA/B,OAA+B,uEAAvB,EAAuB;AAAA,QAAnB,OAAmB,uEAAX,SAAW;AACnC,SAAK,GAAL,CAAS,cAAT,EAAyB,aAAzB,CAAuC;AACnC,MAAA,OAAO,EAAE,MAAM,CAAC,IAAD,CAAN,CAAa,OAAb,CAAqB,IAArB,CAA0B,IAA1B,EAAgC,OAAhC,EAAyC,OAAzC,CAD0B;AAEnC,MAAA,KAAK,EAAE,OAAO,CAAC;AAFoB,KAAvC,EAGG,OAHH;AAIH,GAnB6B;;AAqB9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,KAlC8B,mBAkCO;AAAA,QAA/B,OAA+B,uEAAvB,EAAuB;AAAA,QAAnB,OAAmB,uEAAX,SAAW;AACjC,SAAK,GAAL,CAAS,cAAT,EAAyB,aAAzB,CAAuC;AACnC,MAAA,OAAO,EAAE,MAAM,CAAC,IAAD,CAAN,CAAa,KAAb,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,OAA9B,EAAuC,OAAvC,CAD0B;AAEnC,MAAA,KAAK,EAAE,OAAO,CAAC;AAFoB,KAAvC,EAGG,OAHH;AAIH;AAvC6B,CAAlC","file":"draftResourceChildModelMixin.js","sourcesContent":["/**\n * Mixin for resources that are children of a draft resource.\n *\n * This will ensure that the draft is in a proper state before operating\n * on the resource.\n */\nRB.DraftResourceChildModelMixin = {\n    /**\n     * Delete the object's resource on the server.\n     *\n     * This will ensure the draft is created before deleting the object,\n     * in order to record the deletion as part of the draft.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    destroy(options={}, context=undefined) {\n        this.get('parentObject').ensureCreated({\n            success: _super(this).destroy.bind(this, options, context),\n            error: options.error\n        }, context);\n    },\n\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * This will ensure the draft is created before ensuring the object\n     * is ready.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    ready(options={}, context=undefined) {\n        this.get('parentObject').ensureCreated({\n            success: _super(this).ready.bind(this, options, context),\n            error: options.error\n        }, context);\n    }\n};\n"]}