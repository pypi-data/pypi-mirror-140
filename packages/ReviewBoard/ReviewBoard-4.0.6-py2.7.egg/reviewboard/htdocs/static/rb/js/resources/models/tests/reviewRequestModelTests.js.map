{"version":3,"sources":["reviewRequestModelTests.es6.js"],"names":[],"mappings":"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","file":"reviewRequestModelTests.js","sourcesContent":["suite('rb/resources/models/ReviewRequest', function() {\n    let reviewRequest;\n    let callbacks;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            id: 1,\n        });\n\n        callbacks = {\n            success: () => {},\n            error: () => {},\n        };\n\n        spyOn(callbacks, 'success');\n        spyOn(callbacks, 'error');\n\n        spyOn(reviewRequest, 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n    });\n\n    it('createDiff', function() {\n        const diff = reviewRequest.createDiff();\n\n        expect(diff.get('parentObject')).toBe(reviewRequest);\n    });\n\n    it('createScreenshot', function() {\n        const screenshot = reviewRequest.createScreenshot(42);\n\n        expect(screenshot.get('parentObject')).toBe(reviewRequest);\n        expect(screenshot.id).toBe(42);\n    });\n\n    it('createFileAttachment', function() {\n        const fileAttachment = reviewRequest.createFileAttachment({\n            id: 42,\n        });\n\n        expect(fileAttachment.get('parentObject')).toBe(reviewRequest);\n        expect(fileAttachment.id).toBe(42);\n    });\n\n    it('parse', function() {\n        const data = reviewRequest.parse({\n            stat: 'ok',\n            review_request: {\n                id: 1,\n                branch: 'branch',\n                bugs_closed: 'bugsClosed',\n                close_description: 'closeDescription',\n                close_description_text_type: 'markdown',\n                description: 'description',\n                description_text_type: 'markdown',\n                last_updated: 'lastUpdated',\n                'public': 'public',\n                summary: 'summary',\n                target_groups: 'targetGroups',\n                target_people: 'targetPeople',\n                testing_done: 'testingDone',\n                testing_done_text_type: 'plain',\n            },\n        });\n\n        expect(data).not.toBe(undefined);\n        expect(data.id).toBe(1);\n        expect(data.branch).toBe('branch');\n        expect(data.bugsClosed).toBe('bugsClosed');\n        expect(data.closeDescription).toBe('closeDescription');\n        expect(data.closeDescriptionRichText).toBe(true);\n        expect(data.description).toBe('description');\n        expect(data.descriptionRichText).toBe(true);\n        expect(data.lastUpdated).toBe('lastUpdated');\n        expect(data.public).toBe('public');\n        expect(data.summary).toBe('summary');\n        expect(data.targetGroups).toBe('targetGroups');\n        expect(data.targetPeople).toBe('targetPeople');\n        expect(data.testingDone).toBe('testingDone');\n        expect(data.testingDoneRichText).toBe(false);\n    });\n\n    it('reopen', function() {\n        spyOn(RB, 'apiCall').and.callThrough();\n        spyOn($, 'ajax').and.callFake(request => {\n            expect(request.type).toBe('PUT');\n            expect(request.data.status).toBe('pending');\n\n            request.success({\n                stat: 'ok',\n                review_request: {\n                    id: 1,\n                    links: {},\n                },\n            });\n        });\n\n        reviewRequest.reopen({\n            success: callbacks.success,\n            error: callbacks.error,\n        });\n\n        expect(RB.apiCall).toHaveBeenCalled();\n        expect($.ajax).toHaveBeenCalled();\n        expect(callbacks.success).toHaveBeenCalled();\n        expect(callbacks.error).not.toHaveBeenCalled();\n    });\n\n    describe('createReview', function() {\n        it('With review ID', function() {\n            const review = reviewRequest.createReview(42);\n\n            expect(review.get('parentObject')).toBe(reviewRequest);\n            expect(review.get('id')).toBe(42);\n            expect(reviewRequest.get('draftReview')).toBe(null);\n            expect(reviewRequest.reviews.length).toBe(1);\n            expect(reviewRequest.reviews.get(42)).toBe(review);\n        });\n\n        it('Without review ID', function() {\n            const review1 = reviewRequest.createReview();\n            const review2 = reviewRequest.createReview();\n\n            expect(review1.get('parentObject')).toBe(reviewRequest);\n            expect(review1.id).toBeFalsy();\n            expect(reviewRequest.get('draftReview')).toBe(review1);\n            expect(review1).toBe(review2);\n            expect(reviewRequest.reviews.length).toBe(0);\n        });\n    });\n\n    describe('setStarred', function() {\n        const url = '/api/users/testuser/watched/review-requests/';\n        let session;\n\n        beforeEach(function() {\n            RB.UserSession.instance = null;\n            session = RB.UserSession.create({\n                username: 'testuser',\n                watchedReviewRequestsURL: url,\n            });\n\n            spyOn(session.watchedReviewRequests, 'addImmediately')\n                .and.callThrough();\n            spyOn(session.watchedReviewRequests, 'removeImmediately')\n                .and.callThrough();\n            spyOn(RB, 'apiCall').and.callThrough();\n        });\n\n        it('true', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('POST');\n                expect(request.url).toBe(url);\n\n                request.success({\n                    stat: 'ok',\n                });\n            });\n\n            reviewRequest.setStarred(true, callbacks);\n\n            expect(session.watchedReviewRequests.addImmediately)\n                .toHaveBeenCalled();\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('false', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('DELETE');\n                expect(request.url).toBe(url + '1/');\n\n                request.success({\n                    stat: 'ok',\n                });\n            });\n\n            reviewRequest.setStarred(false, callbacks);\n\n            expect(session.watchedReviewRequests.removeImmediately)\n                .toHaveBeenCalled();\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n\n    describe('close', function() {\n        it('With type=CLOSE_DISCARDED', function() {\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('PUT');\n                expect(request.data.status).toBe('discarded');\n                expect(request.data.description).toBe(undefined);\n\n                request.success({\n                    stat: 'ok',\n                    review_request: {\n                        id: 1,\n                        links: {},\n                    },\n                });\n            });\n\n            reviewRequest.close({\n                type: RB.ReviewRequest.CLOSE_DISCARDED,\n                success: callbacks.success,\n                error: callbacks.error,\n            });\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With type=CLOSE_SUBMITTED', function() {\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('PUT');\n                expect(request.data.status).toBe('submitted');\n                expect(request.data.description).toBe(undefined);\n\n                request.success({\n                    stat: 'ok',\n                    review_request: {\n                        id: 1,\n                        links: {},\n                    }\n                });\n            });\n\n            reviewRequest.close({\n                type: RB.ReviewRequest.CLOSE_SUBMITTED,\n                success: callbacks.success,\n                error: callbacks.error,\n            });\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n\n        it('With invalid type', function() {\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn($, 'ajax');\n\n            reviewRequest.close({\n                type: 'foo',\n                success: callbacks.success,\n                error: callbacks.error,\n            });\n\n            expect(RB.apiCall).not.toHaveBeenCalled();\n            expect($.ajax).not.toHaveBeenCalled();\n            expect(callbacks.success).not.toHaveBeenCalled();\n            expect(callbacks.error).toHaveBeenCalled();\n        });\n\n        it('With description', function() {\n            spyOn(RB, 'apiCall').and.callThrough();\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('PUT');\n                expect(request.data.status).toBe('submitted');\n                expect(request.data.close_description).toBe('test');\n\n                request.success({\n                    stat: 'ok',\n                    review_request: {\n                        id: 1,\n                        links: {},\n                    },\n                });\n            });\n\n            reviewRequest.close({\n                type: RB.ReviewRequest.CLOSE_SUBMITTED,\n                description: 'test',\n                success: callbacks.success,\n                error: callbacks.error,\n            });\n\n            expect(RB.apiCall).toHaveBeenCalled();\n            expect($.ajax).toHaveBeenCalled();\n            expect(callbacks.success).toHaveBeenCalled();\n            expect(callbacks.error).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}