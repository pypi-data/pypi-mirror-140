{"version":3,"sources":["repositoryBranchesCollectionTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,6CAAD,EAAgD,YAAW;AAC5D,MAAI,UAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB,IAAA,UAAU,GAAG,IAAI,EAAE,CAAC,kBAAP,EAAb;AACA,IAAA,UAAU,CAAC,GAAX,GAAiB,iCAAjB;AACH,GAHS,CAAV;AAKA,EAAA,QAAQ,CAAC,SAAD,EAAY,YAAW;AAC3B,IAAA,EAAE,CAAC,OAAD,EAAU,YAAW;AACnB,MAAA,KAAK,CAAC,CAAD,EAAI,MAAJ,CAAL,CAAiB,GAAjB,CAAqB,QAArB,CAA8B,UAAA,OAAO,EAAI;AACrC,QAAA,MAAM,CAAC,OAAO,CAAC,GAAT,CAAN,CACK,IADL,CACU,iCADV;AAEA,QAAA,MAAM,CAAC,OAAO,CAAC,IAAT,CAAN,CAAqB,IAArB,CAA0B,KAA1B;AAEA,QAAA,OAAO,CAAC,OAAR,CAAgB;AACZ,UAAA,IAAI,EAAE,IADM;AAEZ,UAAA,QAAQ,EAAE,CACN;AACI,YAAA,IAAI,EAAE,QADV;AAEI,YAAA,MAAM,EAAE,0CAFZ;AAGI,uBAAW;AAHf,WADM,EAMN;AACI,YAAA,IAAI,EAAE,eADV;AAEI,YAAA,MAAM,EAAE,0CAFZ;AAGI,uBAAW;AAHf,WANM,EAWN;AACI,YAAA,IAAI,EAAE,eADV;AAEI,YAAA,MAAM,EAAE,0CAFZ;AAGI,uBAAW;AAHf,WAXM;AAFE,SAAhB;AAoBH,OAzBD;AA2BA,MAAA,UAAU,CAAC,KAAX;AAEA,MAAA,MAAM,CAAC,CAAC,CAAC,IAAH,CAAN,CAAe,gBAAf;AACA,MAAA,MAAM,CAAC,UAAU,CAAC,MAAZ,CAAN,CAA0B,IAA1B,CAA+B,CAA/B;AACA,MAAA,MAAM,CAAC,UAAU,CAAC,EAAX,CAAc,CAAd,EAAiB,GAAjB,CAAqB,MAArB,CAAD,CAAN,CAAqC,IAArC,CAA0C,QAA1C;AACA,MAAA,MAAM,CAAC,UAAU,CAAC,EAAX,CAAc,CAAd,EAAiB,GAAjB,CAAqB,QAArB,CAAD,CAAN,CACK,IADL,CACU,0CADV;AAEA,MAAA,MAAM,CAAC,UAAU,CAAC,EAAX,CAAc,CAAd,EAAiB,GAAjB,CAAqB,WAArB,CAAD,CAAN,CAA0C,IAA1C,CAA+C,KAA/C;AAEA,MAAA,MAAM,CAAC,UAAU,CAAC,MAAX,CACH,UAAC,IAAD,EAAO,IAAP;AAAA,eAAiB,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,WAAT,CAAP,GAA+B,CAA/B,GAAmC,CAApD;AAAA,OADG,EACqD,CADrD,CAAD,CAAN,CAEK,IAFL,CAEU,CAFV;AAGH,KAxCC,CAAF;AAyCH,GA1CO,CAAR;AA2CH,CAnDI,CAAL","file":"repositoryBranchesCollectionTests.js","sourcesContent":["suite('rb/resources/collections/RepositoryBranches', function() {\n    let collection;\n\n    beforeEach(function() {\n        collection = new RB.RepositoryBranches();\n        collection.url = '/api/repositories/123/branches/';\n    });\n\n    describe('Methods', function() {\n        it('fetch', function() {\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.url)\n                    .toBe('/api/repositories/123/branches/');\n                expect(request.type).toBe('GET');\n\n                request.success({\n                    stat: 'ok',\n                    branches: [\n                        {\n                            name: 'master',\n                            commit: '859d4e148ce3ce60bbda6622cdbe5c2c2f8d9817',\n                            'default': true,\n                        },\n                        {\n                            name: 'release-1.7.x',\n                            commit: '92463764015ef463b4b6d1a1825fee7aeec8cb15',\n                            'default': false,\n                        },\n                        {\n                            name: 'release-1.6.x',\n                            commit: 'a15d0e635064a2e1929ce1bf3bc8d4aa65738b64',\n                            'default': false,\n                        },\n                    ],\n                });\n            });\n\n            collection.fetch();\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(collection.length).toBe(3);\n            expect(collection.at(0).get('name')).toBe('master');\n            expect(collection.at(1).get('commit'))\n                .toBe('92463764015ef463b4b6d1a1825fee7aeec8cb15');\n            expect(collection.at(2).get('isDefault')).toBe(false);\n\n            expect(collection.reduce(\n                (memo, item) => (memo + item.get('isDefault') ? 1 : 0), 0))\n                .toBe(1);\n        });\n    });\n});\n"]}