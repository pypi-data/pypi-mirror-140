{"version":3,"sources":["commentEditorModelTests.es6.js"],"names":[],"mappings":"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","file":"commentEditorModelTests.js","sourcesContent":["suite('rb/models/CommentEditor', function() {\n    let editor;\n    let reviewRequest;\n    let comment;\n\n    function createComment() {\n        return new RB.BaseComment({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    }\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest();\n\n        editor = new RB.CommentEditor({\n            canEdit: true,\n            reviewRequest: reviewRequest,\n        });\n    });\n\n    describe('Attribute defaults', function() {\n        describe('canEdit', function() {\n            it('When logged in and hasDraft=false', function() {\n                RB.UserSession.instance.set('authenticated', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(true);\n            });\n\n            it('When logged in and hasDraft=true', function() {\n                RB.UserSession.instance.set('authenticated', true);\n                reviewRequest.set('hasDraft', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(false);\n            });\n\n            it('When logged out', function() {\n                RB.UserSession.instance.set('authenticated', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('authenticated', false);\n\n                editor = new RB.CommentEditor({\n                    canEdit: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('canEdit')).toBe(true);\n            });\n        });\n\n        describe('openIssue', function() {\n            it('When user preference is true', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(true);\n            });\n\n            it('When user preference is false', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', false);\n\n                editor = new RB.CommentEditor({\n                    openIssue: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(true);\n            });\n\n            it('When reloading the page with explicitly set value', function() {\n                RB.UserSession.instance.set('commentsOpenAnIssue', true);\n\n                comment = createComment();\n                comment.set({\n                    loaded: false,\n                    issueOpened: false,\n                });\n\n                editor = new RB.CommentEditor({\n                    comment: comment,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('openIssue')).toBe(false);\n            });\n        });\n\n        describe('richText', function() {\n            it('When user preference is true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(true);\n            });\n\n            it('When user preference is false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n\n                editor = new RB.CommentEditor({\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(false);\n            });\n\n            it('With explicitly set value', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n\n                editor = new RB.CommentEditor({\n                    richText: true,\n                    reviewRequest: reviewRequest,\n                });\n                expect(editor.get('richText')).toBe(true);\n            });\n        });\n    });\n\n    describe('Loading comment', function() {\n        describe('With comment richText=true', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                    richText: true,\n                    text: '<p>this _is_ a <em>test</em></p>',\n                    rawTextFields: {\n                        text: 'this \\\\_is\\\\_ a _test_',\n                    },\n                    markdownTextFields: {\n                        text: 'this \\\\_is\\\\_ a _test_',\n                    },\n                });\n            });\n\n            it('When defaultUseRichText=true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a _test_');\n            });\n\n            it('When defaultUseRichText=false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a _test_');\n            });\n        });\n\n        describe('With comment richText=false', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                    richText: false,\n                    text: '<p>this _is_ a test</p>',\n                    rawTextFields: {\n                        text: 'this _is_ a _test_',\n                    },\n                    markdownTextFields: {\n                        text: 'this \\\\_is\\\\_ a \\\\_test\\\\_',\n                    },\n                });\n            });\n\n            it('When defaultUseRichText=true', function() {\n                RB.UserSession.instance.set('defaultUseRichText', true);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(true);\n                expect(editor.get('text')).toBe('this \\\\_is\\\\_ a \\\\_test\\\\_');\n            });\n\n            it('When defaultUseRichText=false', function() {\n                RB.UserSession.instance.set('defaultUseRichText', false);\n                editor.set('comment', comment);\n                editor.beginEdit();\n\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.get('richText')).toBe(false);\n                expect(editor.get('text')).toBe('this _is_ a _test_');\n            });\n        });\n    });\n\n    describe('Capability states', function() {\n        describe('canDelete', function() {\n            it('When not editing', function() {\n                expect(editor.get('editing')).toBe(false);\n                expect(editor.get('canDelete')).toBe(false);\n            });\n\n            it('When editing new comment', function() {\n                editor.set('comment', createComment());\n\n                editor.beginEdit();\n                expect(editor.get('canDelete')).toBe(false);\n            });\n\n            it('When editing existing comment', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                expect(editor.get('canDelete')).toBe(true);\n            });\n\n            it('When editing existing comment with canEdit=false', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n\n                editor.set({\n                    canEdit: false,\n                    comment: comment,\n                });\n\n                expect(() => editor.beginEdit()).toThrow();\n                expect(console.assert).toHaveBeenCalled();\n                expect(editor.get('canDelete')).toBe(false);\n            });\n        });\n\n        describe('canSave', function() {\n            it('When not editing', function() {\n                expect(editor.get('editing')).toBe(false);\n                expect(editor.get('canSave')).toBe(false);\n            });\n\n            it('When editing comment with text', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                editor.set('text', 'Foo');\n                expect(editor.get('canSave')).toBe(true);\n            });\n\n            it('When editing comment with initial state', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                expect(editor.get('canSave')).toBe(false);\n            });\n\n            it('When editing comment without text', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n                editor.beginEdit();\n                editor.set('text', '');\n                expect(editor.get('canSave')).toBe(false);\n            });\n        });\n    });\n\n    describe('States', function() {\n        describe('dirty', function() {\n            it('Initial state', function() {\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After new comment', function() {\n                const comment = createComment();\n                editor.set('dirty', true);\n                editor.set('comment', comment);\n\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After text change', function() {\n                editor.set('comment', createComment());\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n            });\n\n            it('After toggling Open Issue', function() {\n                editor.set('comment', createComment());\n                editor.beginEdit();\n                editor.set('openIssue', 'true');\n                expect(editor.get('dirty')).toBe(true);\n            });\n\n            it('After saving', function() {\n                const comment = createComment();\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n\n                spyOn(comment, 'save').and.callFake(\n                    (callbacks, context) => callbacks.success.call(context));\n\n                editor.save();\n                expect(editor.get('dirty')).toBe(false);\n            });\n\n            it('After deleting', function() {\n                const comment = createComment();\n                comment.set({\n                    id: 123,\n                    loaded: true,\n                });\n                editor.set('comment', comment);\n\n                editor.beginEdit();\n                editor.set('text', 'abc');\n                expect(editor.get('dirty')).toBe(true);\n\n                spyOn(comment, 'destroy').and.callFake(\n                    (callbacks, context) => {\n                        if (callbacks && callbacks.success) {\n                            callbacks.success.call(context);\n                        }\n                    }\n                );\n                editor.deleteComment();\n                expect(editor.get('dirty')).toBe(false);\n            });\n        });\n    });\n\n    describe('Operations', function() {\n        it('setExtraData', function() {\n            editor.setExtraData('key1', 'strvalue');\n            editor.setExtraData('key2', 42);\n\n            expect(editor.get('extraData')).toEqual({\n                key1: 'strvalue',\n                key2: 42,\n            });\n        });\n\n        it('getExtraData', function() {\n            editor.set('extraData', {\n                mykey: 'value',\n            });\n\n            expect(editor.getExtraData('mykey')).toBe('value');\n        });\n\n        describe('beginEdit', function() {\n            it('With canEdit=true', function() {\n                editor.set({\n                    comment: createComment(),\n                    canEdit: true,\n                });\n\n                editor.beginEdit();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n            });\n\n            it('With canEdit=false', function() {\n                editor.set({\n                    comment: createComment(),\n                    canEdit: false,\n                });\n\n                expect(function() { editor.beginEdit(); }).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n            });\n\n            it('With no comment', function() {\n                expect(function() { editor.beginEdit(); }).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(console.assert.calls.argsFor(1)[0]).toBeFalsy();\n            });\n        });\n\n        describe('cancel', function() {\n            beforeEach(function() {\n                spyOn(editor, 'close');\n                spyOn(editor, 'trigger');\n            });\n\n            it('With comment', function() {\n                const comment = createComment();\n                spyOn(comment, 'destroyIfEmpty');\n                editor.set('comment', comment);\n\n                editor.cancel();\n                expect(comment.destroyIfEmpty).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('canceled');\n                expect(editor.close).toHaveBeenCalled();\n            });\n\n            it('Without comment', function() {\n                editor.cancel();\n                expect(editor.trigger).not.toHaveBeenCalledWith('canceled');\n                expect(editor.close).toHaveBeenCalled();\n            });\n        });\n\n        describe('destroy', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n\n                spyOn(comment, 'destroy').and.callFake(\n                    (callbacks, context) => {\n                        if (callbacks && callbacks.success) {\n                            callbacks.success.call(context);\n                        }\n                    }\n                );\n\n                spyOn(editor, 'close');\n                spyOn(editor, 'trigger');\n            });\n\n            it('With canDelete=false', function() {\n                /* Set these in order, to override canDelete. */\n                editor.set('comment', comment);\n                editor.set('canDelete', false);\n\n                expect(() => editor.deleteComment()).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n                expect(comment.destroy).not.toHaveBeenCalled();\n                expect(editor.trigger).not.toHaveBeenCalledWith('deleted');\n                expect(editor.close).not.toHaveBeenCalled();\n            });\n\n            it('With canDelete=true', function() {\n                /* Set these in order, to override canDelete. */\n                editor.set('comment', comment);\n                editor.set('canDelete', true);\n\n                editor.deleteComment();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(comment.destroy).toHaveBeenCalled();\n                expect(editor.trigger).toHaveBeenCalledWith('deleted');\n                expect(editor.close).toHaveBeenCalled();\n            });\n        });\n\n        describe('save', function() {\n            let comment;\n\n            beforeEach(function() {\n                comment = createComment();\n                spyOn(comment, 'save').and.callFake(options => {\n                    if (options && options.success) {\n                        options.success();\n                    }\n                });\n\n                spyOn(editor, 'trigger');\n            });\n\n            it('With canSave=false', function() {\n                /* Set these in order, to override canSave. */\n                editor.set('comment', comment);\n                editor.set('canSave', false);\n\n                expect(() => editor.save()).toThrow();\n                expect(console.assert.calls.argsFor(0)[0]).toBeFalsy();\n                expect(comment.save).not.toHaveBeenCalled();\n                expect(editor.trigger).not.toHaveBeenCalledWith('saved');\n            });\n\n            it('With canSave=true', function() {\n                /* Set these in order, to override canSave. */\n                const text = 'My text';\n                const issueOpened = true;\n\n                comment.set('issueOpened', false);\n                editor.set('comment', comment);\n                editor.set({\n                    text: text,\n                    issue_opened: issueOpened,\n                    canSave: true,\n                    richText: true,\n                });\n                editor.setExtraData('mykey', 'myvalue');\n\n                editor.save();\n                expect(console.assert.calls.argsFor(0)[0]).toBeTruthy();\n                expect(comment.save).toHaveBeenCalled();\n                expect(comment.get('text')).toBe(text);\n                expect(comment.get('issueOpened')).toBe(issueOpened);\n                expect(comment.get('richText')).toBe(true);\n                expect(comment.get('extraData')).toEqual({\n                    mykey: 'myvalue',\n                    require_verification: false,\n                });\n                expect(editor.get('dirty')).toBe(false);\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n        });\n    });\n});\n"]}