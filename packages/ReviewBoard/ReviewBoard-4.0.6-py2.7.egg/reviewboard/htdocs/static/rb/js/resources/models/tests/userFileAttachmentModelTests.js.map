{"version":3,"sources":["userFileAttachmentModelTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,wCAAD,EAA2C,YAAW;AACvD,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB,IAAA,KAAK,GAAG,IAAI,EAAE,CAAC,kBAAP,EAAR;AACH,GAFS,CAAV;AAIA,EAAA,QAAQ,CAAC,QAAD,EAAW,YAAW;AAC1B,IAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACjC,MAAA,EAAE,CAAC,YAAD,EAAe,YAAW;AACxB,QAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,KAArB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,KAA1B;AACH,OAJC,CAAF;AAKH,KANO,CAAR;AAQA,IAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAC9B,MAAA,EAAE,CAAC,yBAAD,EAA4B,YAAW;AACrC,QAAA,KAAK,CAAC,EAAN,GAAW,GAAX;AACA,QAAA,KAAK,CAAC,UAAN,CAAiB,EAAjB,GAAsB,GAAtB;AACA,QAAA,MAAM,CAAC,KAAK,CAAC,KAAN,EAAD,CAAN,CAAsB,IAAtB,CAA2B,KAA3B;AAEA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,SAAvB;AACH,OAPC,CAAF;AASA,MAAA,EAAE,CAAC,sBAAD,EAAyB,YAAW;AAClC,QAAA,KAAK,CAAC,EAAN,GAAW,GAAX;AACA,QAAA,KAAK,CAAC,UAAN,CAAiB,EAAjB,GAAsB,GAAtB;AACA,QAAA,MAAM,CAAC,KAAK,CAAC,KAAN,EAAD,CAAN,CAAsB,IAAtB,CAA2B,KAA3B;AAEA,QAAA,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,KAAlB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,MAAN,EAAb;AACA,QAAA,MAAM,CAAC,IAAI,CAAC,IAAN,CAAN,CAAkB,IAAlB,CAAuB,KAAvB;AACH,OARC,CAAF;AASH,KAnBO,CAAR;AAoBH,GA7BO,CAAR;AA+BA,EAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AACzB,IAAA,EAAE,CAAC,cAAD,EAAiB,YAAW;AAC1B,UAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY;AACrB,QAAA,IAAI,EAAE,IADe;AAErB,QAAA,oBAAoB,EAAE;AAClB,UAAA,EAAE,EAAE,EADc;AAElB,UAAA,OAAO,EAAE,SAFS;AAGlB,UAAA,YAAY,EAAE,aAHI;AAIlB,UAAA,QAAQ,EAAE;AAJQ;AAFD,OAAZ,CAAb;AAUA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,GAAb,CAAiB,IAAjB,CAAsB,SAAtB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,EAAN,CAAN,CAAgB,IAAhB,CAAqB,EAArB;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,OAAN,CAAN,CAAqB,IAArB,CAA0B,SAA1B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,WAAN,CAAN,CAAyB,IAAzB,CAA8B,aAA9B;AACA,MAAA,MAAM,CAAC,IAAI,CAAC,QAAN,CAAN,CAAsB,IAAtB,CAA2B,UAA3B;AACH,KAhBC,CAAF;AAiBH,GAlBO,CAAR;AAmBH,CAzDI,CAAL","file":"userFileAttachmentModelTests.js","sourcesContent":["suite('rb/resources/models/UserFileAttachment', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.UserFileAttachment();\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n\n        describe('file field', function() {\n            it('With no file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                const data = model.toJSON();\n                expect(data.path).toBe(undefined);\n            });\n\n            it('With file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe('abc');\n            });\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                user_file_attachment: {\n                    id: 42,\n                    caption: 'caption',\n                    absolute_url: 'downloadURL',\n                    filename: 'filename',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('caption');\n            expect(data.downloadURL).toBe('downloadURL');\n            expect(data.filename).toBe('filename');\n        });\n    });\n});\n"]}