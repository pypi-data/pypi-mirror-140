{"version":3,"sources":["extraDataTests.es6.js"],"names":[],"mappings":";;AAAA,KAAK,CAAC,qBAAD,EAAwB,YAAW;AACpC,MAAI,KAAJ;AAEA,EAAA,UAAU,CAAC,YAAW;AAClB,QAAM,QAAQ,GAAG,QAAQ,CAAC,KAAT,CAAe,MAAf,CAAsB,CAAC,CAAC,QAAF,CAAW;AAC9C,MAAA,QAD8C,sBACnC;AACP,eAAO;AACH,UAAA,SAAS,EAAE;AADR,SAAP;AAGH,OAL6C;AAO9C,MAAA,UAP8C,wBAOjC;AACT,aAAK,eAAL;AACH;AAT6C,KAAX,EAUpC,EAAE,CAAC,cAViC,CAAtB,CAAjB;AAYA,IAAA,KAAK,GAAG,IAAI,QAAJ,EAAR;AACH,GAdS,CAAV;AAgBA,EAAA,EAAE,CAAC,qBAAD,EAAwB,YAAW;AACjC,QAAM,SAAS,GAAG;AACd,gBAAU,kBAAW,CAAE,CADT;AAEd,0BAAoB,2BAAW,CAAE;AAFnB,KAAlB;AAKA,IAAA,KAAK,CAAC,SAAD,EAAY,QAAZ,CAAL;AACA,IAAA,KAAK,CAAC,SAAD,EAAY,kBAAZ,CAAL;AAEA,IAAA,KAAK,CAAC,EAAN,CAAS,QAAT,EAAmB,SAAS,CAAC,MAA7B;AACA,IAAA,KAAK,CAAC,EAAN,CAAS,kBAAT,EAA6B,SAAS,CAAC,kBAAD,CAAtC;AAEA,IAAA,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B,CAA1B;AAEA,IAAA,MAAM,CAAC,SAAS,CAAC,MAAX,CAAN,CAAyB,gBAAzB;AACA,IAAA,MAAM,CAAC,SAAS,CAAC,kBAAD,CAAV,CAAN,CAAsC,gBAAtC;AACH,GAhBC,CAAF;AAkBA,EAAA,EAAE,CAAC,oBAAD,EAAuB,YAAW;AAChC,QAAM,YAAY,GAAG,KAAK,CAAC,UAAN,CAAiB,SAAtC;AAEA,IAAA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,UAAjB,CAAN,CAAmC,IAAnC,CAAwC,YAAxC;AAEA,IAAA,KAAK,CAAC,GAAN,CAAU;AACN,MAAA,SAAS,EAAE;AACP,QAAA,GAAG,EAAE;AADE;AADL,KAAV;AAMA,IAAA,MAAM,CAAC,KAAK,CAAC,UAAN,CAAiB,SAAlB,CAAN,CAAmC,OAAnC,CAA2C;AAAC,MAAA,GAAG,EAAE;AAAN,KAA3C;AACA,IAAA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,UAAjB,CAAN,CAAmC,OAAnC,CAA2C;AAAC,MAAA,GAAG,EAAE;AAAN,KAA3C;AAEA,IAAA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,UAAjB,CAAN,CAAmC,GAAnC,CAAuC,IAAvC,CAA4C,YAA5C;AACA,IAAA,MAAM,CAAC,KAAK,CAAC,UAAN,CAAiB,SAAlB,CAAN,CAAmC,GAAnC,CAAuC,IAAvC,CAA4C,YAA5C;AAEA,IAAA,MAAM,CAAC,KAAK,CAAC,SAAN,CAAgB,UAAjB,CAAN,CAAmC,IAAnC,CAAwC,KAAK,CAAC,UAAN,CAAiB,SAAzD;AACH,GAlBC,CAAF;AAmBH,CAxDI,CAAL","file":"extraDataTests.js","sourcesContent":["suite('rb/models/ExtraData', function() {\n    let model;\n\n    beforeEach(function() {\n        const Resource = Backbone.Model.extend(_.defaults({\n            defaults() {\n                return {\n                    extraData: {},\n                };\n            },\n\n            initialize() {\n                this._setupExtraData();\n            },\n        }, RB.ExtraDataMixin));\n\n        model = new Resource();\n    });\n\n    it('change events fired', function() {\n        const callbacks = {\n            'change': function() {},\n            'change:extraData': function() {},\n        };\n\n        spyOn(callbacks, 'change');\n        spyOn(callbacks, 'change:extraData');\n\n        model.on('change', callbacks.change);\n        model.on('change:extraData', callbacks['change:extraData']);\n\n        model.setExtraData('foo', 1);\n\n        expect(callbacks.change).toHaveBeenCalled();\n        expect(callbacks['change:extraData']).toHaveBeenCalled();\n    });\n\n    it('attributes updated', function() {\n        const oldExtraData = model.attributes.extraData;\n\n        expect(model.extraData.attributes).toBe(oldExtraData);\n\n        model.set({\n            extraData: {\n                foo: 1,\n            },\n        });\n\n        expect(model.attributes.extraData).toEqual({foo: 1});\n        expect(model.extraData.attributes).toEqual({foo: 1});\n\n        expect(model.extraData.attributes).not.toBe(oldExtraData);\n        expect(model.attributes.extraData).not.toBe(oldExtraData);\n\n        expect(model.extraData.attributes).toBe(model.attributes.extraData);\n    });\n});\n"]}