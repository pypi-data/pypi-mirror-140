{"version":3,"sources":["reviewRequestEditorModelTests.es6.js"],"names":[],"mappings":"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","file":"reviewRequestEditorModelTests.js","sourcesContent":["suite('rb/models/ReviewRequestEditor', function() {\n    let reviewRequest;\n    let editor;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            id: 1,\n        });\n\n        editor = new RB.ReviewRequestEditor({\n            reviewRequest: reviewRequest,\n        });\n    });\n\n    describe('Methods', function() {\n        describe('createFileAttachment', function() {\n            it('With new FileAttachment', function() {\n                const fileAttachments = editor.get('fileAttachments');\n\n                expect(fileAttachments.length).toBe(0);\n\n                const fileAttachment = editor.createFileAttachment();\n                expect(fileAttachments.length).toBe(1);\n\n                expect(fileAttachments.at(0)).toBe(fileAttachment);\n            });\n        });\n\n        describe('decr', function() {\n            it('With integer attribute', function() {\n                editor.set('myint', 1);\n\n                editor.decr('myint');\n                expect(editor.get('myint')).toBe(0);\n            });\n\n            it('With non-integer attribute', function() {\n                editor.set('foo', 'abc');\n\n                expect(() => editor.decr('foo')).toThrow();\n\n                expect(console.assert).toHaveBeenCalled();\n                expect(console.assert.calls.mostRecent().args[0]).toBe(false);\n                expect(editor.get('foo')).toBe('abc');\n            });\n\n            describe('editCount', function() {\n                it('When > 0', function() {\n                    editor.set('editCount', 1);\n\n                    editor.decr('editCount');\n                    expect(editor.get('editCount')).toBe(0);\n                    expect(editor.validationError).toBe(null);\n                });\n\n                it('When 0', function() {\n                    editor.set('editCount', 0);\n\n                    editor.decr('editCount');\n                    expect(editor.get('editCount')).toBe(0);\n                    expect(editor.validationError).toBe(\n                        RB.ReviewRequestEditor.strings.UNBALANCED_EDIT_COUNT);\n                });\n            });\n        });\n\n        describe('incr', function() {\n            it('With integer attribute', function() {\n                editor.set('myint', 0);\n                editor.incr('myint');\n                expect(editor.get('myint')).toBe(1);\n            });\n\n            it('With non-integer attribute', function() {\n                editor.set('foo', 'abc');\n\n                expect(() => editor.incr('foo')).toThrow();\n\n                expect(console.assert).toHaveBeenCalled();\n                expect(console.assert.calls.mostRecent().args[0]).toBe(false);\n                expect(editor.get('foo')).toBe('abc');\n            });\n        });\n\n        describe('getDraftField', function() {\n            it('For closeDescription', function() {\n                reviewRequest.set('closeDescription', 'Test');\n\n                const value = editor.getDraftField('closeDescription');\n                expect(value).toBe('Test');\n            });\n\n            it('For closeDescriptionRichText', function() {\n                reviewRequest.set('closeDescriptionRichText', true);\n\n                const value = editor.getDraftField('closeDescriptionRichText');\n                expect(value).toBe(true);\n            });\n\n            it('For draft fields', function() {\n                reviewRequest.draft.set('description', 'Test');\n\n                const value = editor.getDraftField('description');\n                expect(value).toBe('Test');\n            });\n\n            it('With useExtraData', function() {\n                const extraData = reviewRequest.draft.get('extraData');\n\n                extraData.foo = '**Test**';\n\n                const value = editor.getDraftField('foo', {\n                    useExtraData: true\n                });\n                expect(value).toBe('**Test**');\n            });\n\n            describe('With useExtraData and useRawTextValue', function() {\n                it('With field in rawTextFields', function() {\n                    const draft = reviewRequest.draft;\n                    const extraData = reviewRequest.draft.get('extraData');\n\n                    extraData.foo = '<b>Test</b>';\n                    draft.set('rawTextFields', {\n                        extra_data: {\n                            foo: '**Test**',\n                        },\n                    });\n\n                    const value = editor.getDraftField('foo', {\n                        useExtraData: true,\n                        useRawTextValue: true,\n                    });\n                    expect(value).toBe('**Test**');\n                });\n\n                it('With field not in rawTextFields', function() {\n                    const extraData = reviewRequest.draft.get('extraData');\n\n                    extraData.foo = '<b>Test</b>';\n\n                    const value = editor.getDraftField('foo', {\n                        useExtraData: true,\n                        useRawTextValue: true,\n                    });\n                    expect(value).toBe('<b>Test</b>');\n                });\n            });\n        });\n\n        describe('setDraftField', function() {\n            let callbacks;\n            let draft;\n\n            beforeEach(function() {\n                callbacks = {\n                    error: function() {},\n                    success: function() {},\n                };\n\n                spyOn(callbacks, 'error');\n                spyOn(callbacks, 'success');\n\n                draft = editor.get('reviewRequest').draft;\n            });\n\n            describe('When publishing', function() {\n                beforeEach(function() {\n                    spyOn(editor, 'publishDraft');\n\n                    editor.set({\n                        publishing: true,\n                        pendingSaveCount: 1,\n                    });\n                });\n\n                it('Successful saves', function() {\n                    spyOn(draft, 'save').and.callFake(\n                        (options, context) => options.success.call(context));\n\n                    editor.setDraftField('summary', 'My Summary', _.defaults({\n                        jsonFieldName: 'summary',\n                    }, callbacks));\n\n                    expect(callbacks.success).toHaveBeenCalled();\n                    expect(editor.get('publishing')).toBe(false);\n                    expect(editor.get('pendingSaveCount')).toBe(0);\n                    expect(editor.publishDraft).toHaveBeenCalled();\n                });\n\n                it('Field set errors', function() {\n                    spyOn(draft, 'save').and.callFake((options, context) =>\n                        options.error.call(context, draft, {\n                            errorPayload: {\n                                fields: {\n                                    summary: ['Something went wrong'],\n                                },\n                            },\n                        }));\n\n                    editor.setDraftField('summary', 'My Summary', _.defaults({\n                        jsonFieldName: 'summary',\n                    }, callbacks));\n\n                    expect(callbacks.error).toHaveBeenCalled();\n                    expect(editor.get('publishing')).toBe(false);\n                    expect(editor.get('pendingSaveCount')).toBe(1);\n                    expect(editor.publishDraft).not.toHaveBeenCalled();\n                });\n            });\n\n            describe('Rich text fields', function() {\n                describe('changeDescription', function() {\n                    describe('Draft description', function() {\n                        function testDraftDescription(richText, textType) {\n                            spyOn(reviewRequest, 'close');\n                            spyOn(reviewRequest.draft, 'save');\n\n                            editor.setDraftField(\n                                'changeDescription',\n                                'My description',\n                                {\n                                    allowMarkdown: true,\n                                    fieldID: 'changedescription',\n                                    richText: richText,\n                                    jsonFieldName: 'changedescription',\n                                    jsonTextTypeFieldName:\n                                        'changedescription_text_type'\n                                });\n\n                            expect(reviewRequest.close)\n                                .not.toHaveBeenCalled();\n                            expect(reviewRequest.draft.save)\n                                .toHaveBeenCalled();\n\n                            expect(\n                                reviewRequest.draft.save.calls.argsFor(0)[0].data\n                            ).toEqual({\n                                changedescription_text_type: textType,\n                                changedescription: 'My description',\n                                force_text_type: 'html',\n                                include_text_types: 'raw'\n                            });\n                        }\n\n                        it('For Markdown', function() {\n                            testDraftDescription(true, 'markdown');\n                        });\n\n                        it('For plain text', function() {\n                            testDraftDescription(false, 'plain');\n                        });\n                    });\n                });\n            });\n\n            describe('Special list fields', function() {\n                describe('targetGroups', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField('targetGroups', '', _.defaults({\n                            jsonFieldName: 'target_groups'\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With values', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField(\n                            'targetGroups', 'group1, group2',\n                           _.defaults({\n                                jsonFieldName: 'target_groups'\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid groups', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        target_groups: ['group1', 'group2'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField('targetGroups', 'group1, group2',\n                                             _.defaults({\n                            jsonFieldName: 'target_groups',\n                        }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'Groups \"group1\" and \"group2\" do ' +\n                                       'not exist.',\n                        });\n                    });\n                });\n\n                describe('targetPeople', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField('targetPeople', '', _.defaults({\n                            jsonFieldName: 'target_people',\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With values', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.success.call(context));\n\n                        editor.setDraftField(\n                            'targetPeople', 'user1, user2',\n                            _.defaults({\n                                jsonFieldName: 'target_people'\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid users', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        target_people: ['user1', 'user2'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField(\n                            'targetPeople', 'user1, user2',\n                            _.defaults({\n                                jsonFieldName: 'target_people',\n                            }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'Users \"user1\" and \"user2\" do not exist.',\n                        });\n                    });\n                });\n\n                describe('submitter', function() {\n                    it('Empty', function() {\n                        spyOn(draft, 'save').and.callFake(\n                            (options, context) => options.success.call(context));\n\n                        editor.setDraftField('submitter', '', _.defaults({\n                            jsonFieldName: 'submitter',\n                        }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With value', function() {\n                        spyOn(draft, 'save').and.callFake(\n                            (options, context) => options.success.call(context));\n\n                        editor.setDraftField(\n                            'submitter', 'user1',\n                            _.defaults({\n                                jsonFieldName: 'submitter',\n                            }, callbacks));\n\n                        expect(callbacks.success).toHaveBeenCalled();\n                    });\n\n                    it('With invalid user', function() {\n                        spyOn(draft, 'save').and.callFake((options, context) =>\n                            options.error.call(context, draft, {\n                                errorPayload: {\n                                    fields: {\n                                        submitter: ['user1'],\n                                    },\n                                },\n                            }));\n\n                        editor.setDraftField(\n                            'submitter', 'user1',\n                            _.defaults({\n                                jsonFieldName: 'submitter',\n                            }, callbacks));\n\n                        expect(callbacks.error).toHaveBeenCalledWith({\n                            errorText: 'User \"user1\" does not exist.',\n                        });\n                    });\n                });\n            });\n\n            describe('Custom fields', function() {\n                describe('Rich text fields', function() {\n                    function testFields(richText, textType) {\n                        spyOn(reviewRequest.draft, 'save');\n\n                        editor.setDraftField(\n                            'myField',\n                            'Test text.',\n                            {\n                                allowMarkdown: true,\n                                useExtraData: true,\n                                fieldID: 'myfield',\n                                richText: richText,\n                                jsonFieldName: 'myfield',\n                                jsonTextTypeFieldName:\n                                    'myfield_text_type'\n                            });\n\n                        expect(reviewRequest.draft.save)\n                            .toHaveBeenCalled();\n                        expect(\n                            reviewRequest.draft.save.calls.argsFor(0)[0].data\n                        ).toEqual({\n                            'extra_data.myfield_text_type': textType,\n                            'extra_data.myfield': 'Test text.',\n                            force_text_type: 'html',\n                            include_text_types: 'raw'\n                        });\n                    }\n\n                    it('For Markdown', function() {\n                        testFields(true, 'markdown');\n                    });\n\n                    it('For plain text', function() {\n                        testFields(false, 'plain');\n                    });\n                });\n            });\n        });\n    });\n\n    describe('Reviewed objects', function() {\n        describe('File attachments', function() {\n            it('Removed when destroyed', function(done) {\n                const fileAttachments = editor.get('fileAttachments');\n                const fileAttachment = editor.createFileAttachment();\n                const draft = editor.get('reviewRequest').draft;\n\n                spyOn(draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                expect(fileAttachments.at(0)).toBe(fileAttachment);\n\n                fileAttachment.destroy({\n                    success: function() {\n                        expect(fileAttachments.length).toBe(0);\n                        done();\n                    }\n                });\n            });\n        });\n\n        describe('Screenshots', function() {\n            it('Removed when destroyed', function(done) {\n                const screenshots = editor.get('screenshots');\n                const screenshot = reviewRequest.createScreenshot();\n\n                screenshots.add(screenshot);\n                expect(screenshots.at(0)).toBe(screenshot);\n\n                screenshot.destroy({\n                    success: () => {\n                        expect(screenshots.length).toBe(0);\n                        done();\n                    }\n                });\n            });\n        });\n    });\n\n    describe('Events', function() {\n        describe('saved', function() {\n            it('When new file attachment saved', function() {\n                const fileAttachment = editor.createFileAttachment();\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When new file attachment destroyed', function(done) {\n                const fileAttachment = editor.createFileAttachment();\n                const draft = editor.get('reviewRequest').draft;\n\n                spyOn(draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                fileAttachment.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n\n            it('When existing file attachment saved', function() {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When existing file attachment destroyed', function(done) {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(reviewRequest.draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                fileAttachment.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n\n            it('When existing screenshot saved', function() {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(editor, 'trigger');\n                screenshot.trigger('saved');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saved');\n            });\n\n            it('When existing screenshot destroyed', function(done) {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(reviewRequest.draft, 'ensureCreated').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                spyOn(editor, 'trigger');\n                screenshot.destroy({\n                    success: () => {\n                        expect(editor.trigger).toHaveBeenCalledWith('saved');\n                        done();\n                    }\n                });\n            });\n        });\n\n        describe('saving', function() {\n            it('When new file attachment saving', function() {\n                const fileAttachment = editor.createFileAttachment();\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n\n            it('When existing file attachment saving', function() {\n                const fileAttachment =\n                    reviewRequest.draft.createFileAttachment();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    fileAttachments: new Backbone.Collection(\n                        [fileAttachment])\n                });\n\n                spyOn(editor, 'trigger');\n                fileAttachment.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n\n            it('When screenshot saving', function() {\n                const screenshot = reviewRequest.createScreenshot();\n\n                editor = new RB.ReviewRequestEditor({\n                    reviewRequest: reviewRequest,\n                    screenshots: new Backbone.Collection([screenshot])\n                });\n\n                spyOn(editor, 'trigger');\n                screenshot.trigger('saving');\n\n                expect(editor.trigger).toHaveBeenCalledWith('saving');\n            });\n        });\n    });\n});\n"]}