{"version":3,"sources":["relatedRepoSelectorView.es6.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AAEZ,MAAM,cAAc,GAAG,CAAC,CAAC,QAAF,4DAAvB;AAOA;AACA;AACA;;;AACA,EAAA,EAAE,CAAC,uBAAH,GAA6B,OAAO,CAAC,yBAAR,CAAkC,MAAlC,CAAyC;AAClE,IAAA,qBAAqB,uCAD6C;;AAGlE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,UAlBkE,sBAkBvD,OAlBuD,EAkB9C;AAChB,MAAA,OAAO,CAAC,yBAAR,CAAkC,SAAlC,CAA4C,UAA5C,CAAuD,IAAvD,CACI,IADJ,EAEI,CAAC,CAAC,QAAF,CAAW;AACP,QAAA,gBAAgB,EAAE;AACd,UAAA,WAAW,EAAE,CAAC,MAAD,CADC;AAEd,UAAA,SAAS,EAAE,CACP;AAAC,YAAA,KAAK,EAAE;AAAR,WADO,CAFG;AAKd,UAAA,UAAU,EAAE;AALE;AADX,OAAX,EAQG,OARH,CAFJ;AAYA,WAAK,gBAAL,GAAwB,OAAO,CAAC,eAAR,IAA2B,EAAnD;AACH,KAhCiE;;AAkClE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,YA7CkE,wBA6CrD,IA7CqD,EA6C/C;AACf,aAAO,cAAc,CAAC,IAAD,CAArB;AACH,KA/CiE;;AAiDlE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,WA7DkE,uBA6DtD,KA7DsD,EA6D/C,QA7D+C,EA6DrC;AACzB,UAAM,MAAM,GAAG;AACX,uBAAe;AADJ,OAAf;;AAIA,UAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACpB,QAAA,MAAM,CAAC,CAAP,GAAW,KAAX;AACH;;AAED,MAAA,CAAC,CAAC,IAAF,CAAO;AACH,QAAA,IAAI,EAAE,KADH;AAEH,QAAA,GAAG,YAAK,SAAL,SAAiB,KAAK,gBAAtB,sBAFA;AAGH,QAAA,IAAI,EAAE,MAHH;AAIH,QAAA,OAAO,EAAE,iBAAA,OAAO,EAAI;AAChB,UAAA,QAAQ,CAAC,OAAO,CAAC,YAAR,CAAqB,GAArB,CAAyB,UAAA,CAAC;AAAA,mBAAK;AACpC,cAAA,IAAI,EAAE,CAAC,CAAC,IAD4B;AAEpC,cAAA,EAAE,EAAE,CAAC,CAAC;AAF8B,aAAL;AAAA,WAA1B,CAAD,CAAR;AAIH,SATE;AAUH,QAAA,KAAK,EAAE,iBAAa;AAAA,4CAAT,IAAS;AAAT,YAAA,IAAS;AAAA;;AAChB,UAAA,OAAO,CAAC,KAAR,CAAc,yBAAd,EAAyC,IAAzC;AACA,UAAA,QAAQ;AACX;AAbE,OAAP;AAeH;AArFiE,GAAzC,CAA7B;AAyFC,CArGD","file":"relatedRepoSelectorView.js","sourcesContent":["(function() {\n\nconst optionTemplate = _.template(dedent`\n    <div>\n     <span class=\"title\"><%- name %></span>\n    </div>\n`);\n\n\n/**\n * A widget to select related repositories using search and autocomplete.\n */\nRB.RelatedRepoSelectorView = Djblets.RelatedObjectSelectorView.extend({\n    searchPlaceholderText: gettext('Search for repositories...'),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     localSitePrefix (string):\n     *         The URL prefix for the Local Site, if any.\n     *\n     *     multivalued (boolean):\n     *         Whether or not the widget should allow selecting multiple\n     *         values.\n     */\n    initialize(options) {\n        Djblets.RelatedObjectSelectorView.prototype.initialize.call(\n            this,\n            _.defaults({\n                selectizeOptions: {\n                    searchField: ['name'],\n                    sortField: [\n                        {field: 'name'},\n                    ],\n                    valueField: 'name',\n                }\n            }, options));\n\n        this._localSitePrefix = options.localSitePrefix || '';\n    },\n\n    /**\n     * Render an option in the drop-down menu.\n     *\n     * Args:\n     *     item (object):\n     *         The item to render.\n     *\n     * Returns:\n     *     string:\n     *     HTML to insert into the drop-down menu.\n     */\n    renderOption(item) {\n        return optionTemplate(item);\n    },\n\n    /**\n     * Load options from the server.\n     *\n     * Args:\n     *     query (string):\n     *         The string typed in by the user.\n     *\n     *     callback (function):\n     *         A callback to be called once data has been loaded. This should\n     *         be passed an array of objects, each representing an option in\n     *         the drop-down.\n     */\n    loadOptions(query, callback) {\n        const params = {\n            'only-fields': 'name,id',\n        };\n\n        if (query.length !== 0) {\n            params.q = query;\n        }\n\n        $.ajax({\n            type: 'GET',\n            url: `${SITE_ROOT}${this._localSitePrefix}api/repositories/`,\n            data: params,\n            success: results => {\n                callback(results.repositories.map(u => ({\n                    name: u.name,\n                    id: u.id,\n                })));\n            },\n            error: (...args) => {\n                console.error('Repository query failed', args);\n                callback();\n            },\n        });\n    },\n});\n\n\n})();\n"]}