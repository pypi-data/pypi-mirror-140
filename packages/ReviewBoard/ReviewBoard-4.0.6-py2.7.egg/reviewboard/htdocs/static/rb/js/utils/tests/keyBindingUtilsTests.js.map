{"version":3,"sources":["keyBindingUtilsTests.es6.js"],"names":[],"mappings":"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","file":"keyBindingUtilsTests.js","sourcesContent":["suite('rb/utils/keyBindingUtils', function() {\n    describe('KeyBindingsMixin', function() {\n        function sendKeyPress($el, keyCode, handled) {\n            const evt = jQuery.Event('keypress');\n            evt.which = keyCode.charCodeAt(0);\n            $el.trigger(evt);\n\n            expect(evt.isDefaultPrevented()).toBe(handled);\n            expect(evt.isPropagationStopped()).toBe(handled);\n        }\n\n        it('Registered on create', function() {\n            const MyView = Backbone.View.extend({\n                keyBindings: {},\n            });\n            _.extend(MyView.prototype, RB.KeyBindingsMixin);\n\n            spyOn(MyView.prototype, 'delegateKeyBindings');\n\n            this._view = new MyView();\n            expect(MyView.prototype.delegateKeyBindings).toHaveBeenCalled();\n        });\n\n        it('Unregistered on undelegateEvents', function() {\n            const MyView = Backbone.View.extend({\n                keyBindings: {},\n            });\n            _.extend(MyView.prototype, RB.KeyBindingsMixin);\n\n            const view = new MyView();\n            spyOn(MyView.prototype, 'undelegateKeyBindings');\n\n            view.undelegateEvents();\n            expect(MyView.prototype.undelegateKeyBindings).toHaveBeenCalled();\n        });\n\n        it('Keys to function name', function() {\n            const MyView = Backbone.View.extend({\n                keyBindings: {\n                    'abc': 'myFunc1',\n                    'def': 'myFunc2',\n                },\n\n                myFunc1: function() {},\n                myFunc2: function() {},\n            });\n            _.extend(MyView.prototype, RB.KeyBindingsMixin);\n\n            const view = new MyView();\n            view.render().$el.appendTo($testsScratch);\n\n            spyOn(view, 'myFunc1');\n            spyOn(view, 'myFunc2');\n\n            sendKeyPress(view.$el, 'e', true);\n\n            expect(view.myFunc1).not.toHaveBeenCalled();\n            expect(view.myFunc2).toHaveBeenCalled();\n        });\n\n        it('Keys to function', function() {\n            const MyView = Backbone.View.extend({\n                keyBindings: {\n                    'abc': function() {},\n                    'def': function() {},\n                }\n            });\n            _.extend(MyView.prototype, RB.KeyBindingsMixin);\n\n            const view = new MyView();\n            view.render().$el.appendTo($testsScratch);\n\n            spyOn(view.keyBindings, 'abc');\n            spyOn(view.keyBindings, 'def');\n\n            sendKeyPress(view.$el, 'b', true);\n\n            expect(view.keyBindings.abc).toHaveBeenCalled();\n            expect(view.keyBindings.def).not.toHaveBeenCalled();\n        });\n\n        it('Unmatched keys', function() {\n            const MyView = Backbone.View.extend({\n                keyBindings: {\n                    'abc': function() {},\n                    'def': function() {},\n                }\n            });\n            _.extend(MyView.prototype, RB.KeyBindingsMixin);\n\n            const view = new MyView();\n            view.render().$el.appendTo($testsScratch);\n\n            spyOn(view.keyBindings, 'abc');\n            spyOn(view.keyBindings, 'def');\n\n            sendKeyPress(view.$el, '!', false);\n\n            expect(view.keyBindings.abc).not.toHaveBeenCalled();\n            expect(view.keyBindings.def).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}