{"version":3,"sources":["inlineFormView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,KAAH,CAAS,cAAT,GAA0B,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;AAC3C,EAAA,MAAM,EAAE;AACJ,oDAAgD;AAD5C,GADmC;;AAK3C;AACJ;AACA;AACI,EAAA,UAR2C,wBAQ9B;AACT,SAAK,cAAL,GAAsB,IAAtB;AACA,SAAK,OAAL,GAAe,IAAf;AACH,GAX0C;;AAa3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MApB2C,oBAoBlC;AACL,SAAK,cAAL,GAAsB,KAAK,CAAL,CAAO,wCAAP,CAAtB;AACA,SAAK,OAAL,GAAe,KAAK,CAAL,CAAO,sCAAP,CAAf;AAEA,SAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,cAA1B,EAA0C,KAAK,eAA/C;AAEA,WAAO,IAAP;AACH,GA3B0C;;AA6B3C;AACJ;AACA;AACA;AACA;AACA;AACI,EAAA,eAnC2C,6BAmCzB;AACd,QAAM,KAAK,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,CAAd;AACA,QAAM,MAAM,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,QAAf,CAAf;AACA,QAAM,OAAO,GAAG,IAAI,MAAJ,YAAe,MAAf,yBAAhB;AACA,QAAM,SAAS,aAAM,MAAN,cAAgB,KAAhB,CAAf;;AAEA,aAAS,eAAT,CAAyB,EAAzB,EAA6B;AACzB,UAAI,EAAE,CAAC,EAAP,EAAW;AACP,QAAA,EAAE,CAAC,EAAH,GAAQ,EAAE,CAAC,EAAH,CAAM,OAAN,CAAc,OAAd,EAAuB,SAAvB,CAAR;AACH;;AAED,UAAI,EAAE,CAAC,IAAP,EAAa;AACT,QAAA,EAAE,CAAC,IAAH,GAAU,EAAE,CAAC,IAAH,CAAQ,OAAR,CAAgB,OAAhB,EAAyB,SAAzB,CAAV;AACH;;AAED,UAAI,EAAE,CAAC,OAAP,EAAgB;AACZ,QAAA,EAAE,CAAC,OAAH,GAAa,EAAE,CAAC,OAAH,CAAW,OAAX,CAAmB,OAAnB,EAA4B,SAA5B,CAAb;AACH;;AAED,WAAK,IAAI,IAAI,GAAG,EAAE,CAAC,UAAnB,EACK,IAAI,KAAK,IADd,EAEK,IAAI,GAAG,IAAI,CAAC,WAFjB,EAE8B;AAC1B,QAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ;;AAED,SAAK,EAAL,CAAQ,EAAR,GAAa,SAAb;;AACA,SAAK,OAAL,CAAa,IAAb,YAAsB,KAAK,GAAG,CAA9B;;AAEA,IAAA,eAAe,CAAC,KAAK,EAAN,CAAf;AACH,GAjE0C;;AAmE3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,gBA7E2C,4BA6E1B,CA7E0B,EA6EvB;AAChB,QAAI,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAAJ,EAAiC;AAC7B;AACH;;AAED,IAAA,CAAC,CAAC,cAAF;AACA,IAAA,CAAC,CAAC,eAAF;;AAEA,QAAI,OAAO,yEAAX,EAAsF;AAClF,WAAK,KAAL,CAAW,OAAX;AACH;AACJ;AAxF0C,CAArB,CAA1B","file":"inlineFormView.js","sourcesContent":["/**\n * A view managing inline forms, for related objects for models.\n *\n * This allows for providing form data for a database object that relates to\n * some primary object, or deleting the object. It's managed by\n * :js:class:`RB.Admin.InlineFormGroupView`.\n */\nRB.Admin.InlineFormView = Backbone.View.extend({\n    events: {\n        'click .rb-c-admin-form-inline__delete-action': '_onDeleteClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._$removeButton = null;\n        this._$title = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.Admin.InlineFormView:\n     *     This view, for chaining.\n     */\n    render() {\n        this._$removeButton = this.$('.rb-c-admin-form-inline__delete-action');\n        this._$title = this.$('.rb-c-admin-form-inline__title-index');\n\n        this.listenTo(this.model, 'change:index', this._onIndexChanged);\n\n        return this;\n    },\n\n    /**\n     * Handle a change to the inline's index in the group.\n     *\n     * This will update the ID and title for this view, and the IDs, names,\n     * and references across all elements in the form.\n     */\n    _onIndexChanged() {\n        const index = this.model.get('index');\n        const prefix = this.model.get('prefix');\n        const idRegex = new RegExp(`(${prefix}-(\\\\d+|__prefix__))`);\n        const newPrefix = `${prefix}-${index}`;\n\n        function _updateElements(el) {\n            if (el.id) {\n                el.id = el.id.replace(idRegex, newPrefix);\n            }\n\n            if (el.name) {\n                el.name = el.name.replace(idRegex, newPrefix);\n            }\n\n            if (el.htmlFor) {\n                el.htmlFor = el.htmlFor.replace(idRegex, newPrefix);\n            }\n\n            for (let node = el.firstChild;\n                 node !== null;\n                 node = node.nextSibling) {\n                _updateElements(node);\n            }\n        }\n\n        this.el.id = newPrefix;\n        this._$title.text(`#${index + 1}`);\n\n        _updateElements(this.el);\n    },\n\n    /**\n     * Handle a click event on the Delete button for the inline.\n     *\n     * This will trigger the ``deleteClicked`` event, allowing the parent\n     * :js:class:`RB.Admin.InlineFormGroupView` to handle it.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _onDeleteClicked(e) {\n        if (this.model.get('isInitial')) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (confirm(gettext('Are you sure you want to delete this? This cannot be undone.'))) {\n            this.model.destroy();\n        }\n    },\n});\n"]}