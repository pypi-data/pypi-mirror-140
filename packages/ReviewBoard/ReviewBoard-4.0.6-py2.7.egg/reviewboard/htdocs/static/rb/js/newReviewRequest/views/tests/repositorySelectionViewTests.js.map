{"version":3,"sources":["repositorySelectionViewTests.es6.js"],"names":[],"mappings":"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","file":"repositorySelectionViewTests.js","sourcesContent":["suite('rb/newReviewRequest/views/RepositorySelectionView', function() {\n    let collection;\n    let view;\n\n    beforeEach(function() {\n        collection = new Backbone.Collection([\n            { name: 'Bitbucket Test' },\n            { name: 'GitHub Test' },\n            { name: 'GitLab Test' },\n            { name: 'Local Git Test' },\n        ], {\n            model: RB.Repository,\n        });\n\n        view = new RB.RepositorySelectionView({\n            collection: collection,\n        });\n    });\n\n    describe('Rendering', function() {\n        it('With items', function() {\n            view.render();\n            const children = view.$el.find('.repository');\n\n            expect(children.length).toBe(collection.models.length);\n\n            for (let i = 0; i < children.length; i++) {\n                const name = collection.models[i].get('name');\n                expect($(children[i]).text().strip()).toBe(name);\n            }\n        });\n    });\n\n    describe('Filtering', function() {\n        let $items;\n        let $searchBox;\n\n        function setSearchTerm(term) {\n            $searchBox\n                .val(term)\n                .trigger('input');\n        }\n\n        function checkVisibility(i, visible) {\n            expect($items.eq(i).is(':visible')).toBe(visible);\n        }\n\n        beforeEach(function() {\n            view.render().$el.appendTo($testsScratch);\n\n            $items = view.$el.find('.repository');\n            $searchBox = view.$el.find('.rb-c-search-field__input');\n\n            expect($items.length).toBe(4);\n            expect($searchBox.length).toBe(1);\n        });\n\n        it('No search term', function() {\n            $items.each((i, el) => {\n                checkVisibility(i, true);\n            });\n        });\n\n        it('Search term set and match', function() {\n            setSearchTerm('Git');\n\n            checkVisibility(0, false);\n            checkVisibility(1, true);\n            checkVisibility(2, true);\n            checkVisibility(3, true);\n        });\n\n        it('Search term set and no match', function() {\n            setSearchTerm('XXX');\n\n            $items.each((i, el) => {\n                checkVisibility(i, false);\n            });\n        });\n\n        it('Search term removed', function() {\n            setSearchTerm('Git');\n\n            checkVisibility(0, false);\n            checkVisibility(1, true);\n            checkVisibility(2, true);\n            checkVisibility(3, true);\n\n            setSearchTerm('');\n\n            $items.each((i, el) => {\n                checkVisibility(i, true);\n            });\n        });\n    });\n\n    describe('Selected event', function() {\n        it('When clicked', function() {\n            let handlerCalled = false;\n\n            view.render();\n            view.on('selected', repository => {\n                expect(repository.get('name')).toBe('GitHub Test');\n                handlerCalled = true;\n            });\n\n            const children = view.$el.find('.repository');\n            $(children[1]).click();\n\n            expect(handlerCalled).toBe(true);\n        });\n    });\n});\n"]}