{"version":3,"sources":["userFileAttachmentModel.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,kBAAH,GAAwB,EAAE,CAAC,YAAH,CAAgB,MAAhB,CAAuB;AAC3C,EAAA,QAD2C,sBAChC;AACP,WAAO,CAAC,CAAC,QAAF,CAAW;AACd,MAAA,OAAO,EAAE,IADK;AAEd,MAAA,WAAW,EAAE,IAFC;AAGd,MAAA,IAAI,EAAE,IAHQ;AAId,MAAA,QAAQ,EAAE;AAJI,KAAX,EAKJ,EAAE,CAAC,YAAH,CAAgB,SAAhB,CAA0B,QAA1B,EALI,CAAP;AAMH,GAR0C;AAU3C,EAAA,YAAY,EAAE,sBAV6B;AAW3C,EAAA,eAAe,EAAE,CAAC,MAAD,CAX0B;AAa3C,EAAA,aAAa,EAAE;AACX,IAAA,WAAW,EAAE,cADF;AAEX,IAAA,IAAI,EAAE;AAFK,GAb4B;AAkB3C,EAAA,eAAe,EAAE,CACb,SADa,EAEb,MAFa,CAlB0B;AAuB3C,EAAA,iBAAiB,EAAE,CACf,SADe,EAEf,aAFe,EAGf,UAHe,CAvBwB;AA6B3C,EAAA,WAAW,EAAE;AACT,IAAA,IAAI,EAAE,EAAE,CAAC,eAAH,CAAmB;AADhB,GA7B8B;;AAiC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,GAxC2C,iBAwCrC;AACF,QAAM,GAAG,GAAG,EAAE,CAAC,WAAH,CAAe,QAAf,CAAwB,GAAxB,CAA4B,wBAA5B,CAAZ;AAEA,WAAO,KAAK,KAAL,KAAe,GAAf,aAAwB,GAAxB,SAA8B,KAAK,EAAnC,MAAP;AACH;AA5C0C,CAAvB,CAAxB","file":"userFileAttachmentModel.js","sourcesContent":["/**\n * A new or existing user file attachment.\n *\n * Model Attributes:\n *     caption (string):\n *         The file attachment's caption.\n *\n *     downloadURL (string):\n *         The URL to download the file, for existing file attachments.\n *\n *     file (file):\n *         The file to upload. Only works for newly created\n *         UserFileAttachments.\n *\n *     filename (string):\n *         The name of the file, for existing file attachments.\n */\nRB.UserFileAttachment = RB.BaseResource.extend({\n    defaults() {\n        return _.defaults({\n            caption: null,\n            downloadURL: null,\n            file: null,\n            filename: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'user_file_attachment',\n    payloadFileKeys: ['path'],\n\n    attrToJsonMap: {\n        downloadURL: 'absolute_url',\n        file: 'path'\n    },\n\n    serializedAttrs: [\n        'caption',\n        'file'\n    ],\n\n    deserializedAttrs: [\n        'caption',\n        'downloadURL',\n        'filename'\n    ],\n\n    serializers: {\n        file: RB.JSONSerializers.onlyIfValue\n    },\n\n    /**\n     * Return the URL to use for syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL for the resource.\n     */\n    url() {\n        const url = RB.UserSession.instance.get('userFileAttachmentsURL');\n\n        return this.isNew() ? url : `${url}${this.id}/`;\n    }\n});\n"]}