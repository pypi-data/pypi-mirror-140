{"version":3,"sources":["changeFormPageView.es6.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,KAAH,CAAS,kBAAT,GAA8B,EAAE,CAAC,KAAH,CAAS,QAAT,CAAkB,MAAlB,CAAyB;AACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,UAZmD,sBAYxC,OAZwC,EAY/B;AAChB,IAAA,EAAE,CAAC,KAAH,CAAS,QAAT,CAAkB,SAAlB,CAA4B,UAA5B,CAAuC,IAAvC,CAA4C,IAA5C,EAAkD,OAAlD;AAEA,SAAK,MAAL,GAAc,OAAO,CAAC,MAAtB;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,gBAAL,GAAwB,EAAxB;AACH,GAlBkD;;AAoBnD;AACJ;AACA;AACA;AACA;AACI,EAAA,UAzBmD,wBAyBtC;AAAA;;AACT,IAAA,EAAE,CAAC,KAAH,CAAS,QAAT,CAAkB,SAAlB,CAA4B,UAA5B,CAAuC,IAAvC,CAA4C,IAA5C;AAEA,IAAA,OAAO,CAAC,MAAR,CAAe,KAAK,gBAAL,CAAsB,MAAtB,KAAiC,CAAhD;AAEA,SAAK,QAAL,GAAgB,IAAI,EAAE,CAAC,QAAP,CAAgB;AAC5B,MAAA,EAAE,EAAE,CAAC,YAAK,KAAK,MAAV;AADuB,KAAhB,CAAhB;AAGA,SAAK,QAAL,CAAc,MAAd;AAEA,SAAK,CAAL,CAAO,+BAAP,EAAwC,IAAxC,CAA6C,UAAC,CAAD,EAAI,EAAJ,EAAW;AACpD,UAAM,WAAW,GAAG,IAAI,EAAE,CAAC,KAAH,CAAS,eAAb,CAA6B;AAC7C,QAAA,MAAM,EAAE,CAAC,CAAC,EAAD,CAAD,CAAM,IAAN,CAAW,QAAX;AADqC,OAA7B,CAApB;AAGA,UAAM,eAAe,GAAG,IAAI,EAAE,CAAC,KAAH,CAAS,mBAAb,CAAiC;AACrD,QAAA,EAAE,EAAE,EADiD;AAErD,QAAA,KAAK,EAAE;AAF8C,OAAjC,CAAxB;AAIA,MAAA,eAAe,CAAC,UAAhB;;AAEA,MAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,eAA3B;;AAEA,MAAA,KAAI,CAAC,QAAL,CACI,eADJ,EAEI,iBAFJ,EAGI;AAAA,eAAM,KAAI,CAAC,QAAL,CAAc,gBAAd,CAA+B,eAAe,CAAC,GAA/C,CAAN;AAAA,OAHJ;AAIH,KAhBD;AAiBH;AApDkD,CAAzB,CAA9B","file":"changeFormPageView.js","sourcesContent":["/**\n * A view for managing the administration UI's database model change pages.\n *\n * This sets up the page to manage the configuration form and any inline\n * groups used for adding, modifying, or deleting related objects.\n */\nRB.Admin.ChangeFormPageView = RB.Admin.PageView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The options passed to the page.\n     *\n     * Option Args:\n     *     formID (string):\n     *         The element ID for the form.\n     */\n    initialize(options) {\n        RB.Admin.PageView.prototype.initialize.call(this, options);\n\n        this.formID = options.formID;\n        this.formView = null;\n        this.inlineGroupViews = [];\n    },\n\n    /**\n     * Render the page.\n     *\n     * This will set up the form and inline group management.\n     */\n    renderPage() {\n        RB.Admin.PageView.prototype.renderPage.call(this);\n\n        console.assert(this.inlineGroupViews.length === 0);\n\n        this.formView = new RB.FormView({\n            el: $(`#${this.formID}`),\n        });\n        this.formView.render();\n\n        this.$('.rb-c-admin-form-inline-group').each((i, el) => {\n            const inlineGroup = new RB.Admin.InlineFormGroup({\n                prefix: $(el).data('prefix'),\n            });\n            const inlineGroupView = new RB.Admin.InlineFormGroupView({\n                el: el,\n                model: inlineGroup,\n            });\n            inlineGroupView.renderPage();\n\n            this.inlineGroupViews.push(inlineGroupView);\n\n            this.listenTo(\n                inlineGroupView,\n                'inlineFormAdded',\n                () => this.formView.setupFormWidgets(inlineGroupView.$el));\n        });\n    },\n});\n"]}