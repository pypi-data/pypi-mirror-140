{"version":3,"sources":["pageManagerModelTests.es6.js"],"names":[],"mappings":"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","file":"pageManagerModelTests.js","sourcesContent":["suite('rb/pages/models/PageManager', function() {\n    let pageManager;\n    let page;\n\n    beforeEach(function() {\n        pageManager = new RB.PageManager();\n        page = new Backbone.View();\n\n        spyOn(page, 'render');\n    });\n\n    describe('Instance', function() {\n        let callbacks;\n        let expectedRender;\n\n        beforeEach(function() {\n            expectedRender = false;\n\n            callbacks = {\n                cb: _page => {\n                    expect(_page).toBe(page);\n                    expect(pageManager.get('rendered')).toBe(expectedRender);\n                },\n            };\n\n            spyOn(callbacks, 'cb');\n        });\n\n        describe('Methods', function() {\n            describe('beforeReady', function() {\n                it('Without page set', function() {\n                    pageManager.beforeRender(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n\n                    pageManager.set('page', page);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, not rendered', function() {\n                    pageManager.set('page', page);\n                    pageManager.set('rendered', false);\n\n                    pageManager.beforeRender(callbacks.cb);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, rendered', function() {\n                    pageManager.set({\n                        page: page,\n                        rendered: true,\n                    });\n\n                    expect(() => pageManager.beforeRender(callbacks.cb))\n                        .toThrow();\n\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n                });\n            });\n\n            describe('ready', function() {\n                it('Without page set', function() {\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(true);\n                    expect(page.render).toHaveBeenCalled();\n\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n\n                it('With page set, not rendered', function() {\n                    /* Prevent the page from rendering for this test. */\n                    spyOn(pageManager, '_renderPage');\n\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(false);\n                    expect(page.render).not.toHaveBeenCalled();\n\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).not.toHaveBeenCalled();\n                });\n\n                it('With page set, rendered', function() {\n                    pageManager.set('page', page);\n                    expect(pageManager.get('rendered')).toBe(true);\n                    expect(page.render).toHaveBeenCalled();\n\n                    pageManager.ready(callbacks.cb);\n                    expect(callbacks.cb).toHaveBeenCalled();\n                });\n            });\n        });\n    });\n\n    describe('Class methods', function() {\n        let oldInstance;\n\n        beforeEach(function() {\n            oldInstance = RB.PageManager.instance;\n            RB.PageManager.instance = pageManager;\n        });\n\n        afterEach(function() {\n            RB.PageManager.instance = oldInstance;\n        });\n\n        it('beforeRender', function() {\n            spyOn(RB.PageManager.instance, 'beforeRender');\n            RB.PageManager.beforeRender(1, 2);\n            expect(RB.PageManager.instance.beforeRender)\n                .toHaveBeenCalledWith(1, 2);\n        });\n\n        it('ready', function() {\n            spyOn(RB.PageManager.instance, 'ready');\n            RB.PageManager.ready(1, 2);\n            expect(RB.PageManager.instance.ready)\n                .toHaveBeenCalledWith(1, 2);\n        });\n\n        it('setPage', function() {\n            const page = new Backbone.View();\n            RB.PageManager.setPage(page);\n            expect(pageManager.get('page')).toBe(page);\n        });\n\n        it('getPage', function() {\n            const page = new Backbone.View();\n            pageManager.set('page', page);\n            expect(RB.PageManager.getPage()).toBe(page);\n        });\n    });\n});\n"]}