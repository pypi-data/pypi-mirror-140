[tool.poetry]
name = "colour-checker-detection"
version = "0.1.3"
description = "Colour checker detection with Python"
license = "BSD-3-Clause"
authors = [ "Colour Developers <colour-developers@colour-science.org>" ]
maintainers = [ "Colour Developers <colour-developers@colour-science.org>" ]
readme = 'README.rst'
repository = "https://github.com/colour-science/colour-checker-detection"
homepage = "https://www.colour-science.org/"
keywords = [
    "color",
    "color-science",
    "colour",
    "colour-science",
    "color-checker",
    "colour-checker",
    "segmentation",
    "color-space",
    "color-spaces",
    "colorspace",
    "colorspaces",
    "colour-space",
    "colour-spaces",
    "colourspace",
    "colourspaces",
    "python"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development"
]
exclude = [
    "colour_checker_detection/resources/colour-checker-detection-examples-datasets/detection/*",
    "colour_checker_detection/resources/colour-checker-detection-tests-datasets/colour_checker_detection/detection/*",
]

[tool.poetry.dependencies]
python = ">= 3.8, < 3.11"
colour-science = ">= 0.4.0"
imageio = ">= 2, < 3"
numpy = ">= 1.19, < 2"
opencv-python = ">= 4, < 5"
scipy = ">= 1.5, < 2"
typing-extensions = ">= 4, < 5"  # Convenience for Google Colab.

matplotlib = { version = ">= 3.2, != 3.5.0, != 3.5.1", optional = true }

biblib-simple = { version = "*", optional = true }  # Development dependency.
black = { version = "*", optional = true }  # Development dependency.
coverage = { version = "*", optional = true }  # Development dependency.
coveralls = { version = "*", optional = true }  # Development dependency.
flake8 = { version = "*", optional = true }  # Development dependency.
flynt = { version = "*", optional = true }  # Development dependency.
invoke = { version = "*", optional = true }  # Development dependency.
jupyter = { version = "*", optional = true }  # Development dependency.
mypy = { version = "*", optional = true }  # Development dependency.
pre-commit = { version = "*", optional = true }  # Development dependency.
pydata-sphinx-theme = { version = "*", optional = true }  # Development dependency.
pydocstyle = { version = "*", optional = true }  # Development dependency.
pytest = { version = "*", optional = true }  # Development dependency.
pytest-cov = { version = "*", optional = true }  # Development dependency.
pyupgrade = { version = "*", optional = true }  # Development dependency.
restructuredtext-lint = { version = "*", optional = true }  # Development dependency.
sphinx = { version = ">= 4, < 5", optional = true }  # Development dependency.
sphinxcontrib-bibtex = { version = "*", optional = true }  # Development dependency.
toml = { version = "*", optional = true }  # Development dependency.
twine = { version = "*", optional = true }  # Development dependency.

[tool.poetry.dev-dependencies]
biblib-simple = "*"
black = "*"
coverage = "!= 6.3"
coveralls = "*"
flake8 = "*"
flynt = "*"
invoke = "*"
jupyter = "*"
mypy = "*"
pre-commit = "*"
pydata-sphinx-theme = "*"
pydocstyle = "*"
pytest = "*"
pytest-cov = "*"
pyupgrade = "*"
restructuredtext-lint = "*"
sphinx = ">= 4, < 5"
sphinxcontrib-bibtex = "*"
toml = "*"
twine = "*"

[tool.poetry.extras]
development = [
    "biblib-simple",
    "black",
    "coverage",
    "coveralls",
    "flake8",
    "flynt",
    "invoke",
    "jupyter",
    "mypy",
    "pre-commit",
    "pydata-sphinx-theme",
    "pydocstyle",
    "pytest",
    "pytest-cov",
    "pyupgrade",
    "restructuredtext-lint",
    "sphinx",
    "sphinxcontrib-bibtex",
    "toml",
    "twine",
]
plotting = [ "matplotlib" ]
read-the-docs = [ "matplotlib", "pydata-sphinx-theme", "sphinxcontrib-bibtex" ]

[tool.black]
line-length = 79
exclude = '''
/(
    \.git
  | \.mypy_cache
  | build
  | dist
)/
'''

[tool.flynt]
line_length=999

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
ignore_missing_imports = true

[tool.pydocstyle]
convention = "numpy"
add-ignore = "D104,D200,D202,D205,D301,D400"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
