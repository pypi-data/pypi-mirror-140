"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from . import dag_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Job(google.protobuf.message.Message):
    """Job is the definition of a Job ceated by nbox, with a schedule"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Job._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_SET: Job._Status.ValueType  # 0
        """when user creates from FE"""

        PREPARING: Job._Status.ValueType  # 1
        """if the run is being prepared"""

        PAUSED: Job._Status.ValueType  # 2
        """if user from FE/nbox said pause"""

        SCHEDULED: Job._Status.ValueType  # 3
        """is a run is scheduled"""

        ACTIVE: Job._Status.ValueType  # 4
        """run is running"""

        ERROR: Job._Status.ValueType  # 5
        """run errored -> paused"""

        COMPLETED: Job._Status.ValueType  # 6
        """last run done and there is nothing scheduled"""

        ARCHIVED: Job._Status.ValueType  # 7
        """when user deletes this job"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """// if the job is suspended
        bool suspended = 14;

        """
        pass

    NOT_SET: Job.Status.ValueType  # 0
    """when user creates from FE"""

    PREPARING: Job.Status.ValueType  # 1
    """if the run is being prepared"""

    PAUSED: Job.Status.ValueType  # 2
    """if user from FE/nbox said pause"""

    SCHEDULED: Job.Status.ValueType  # 3
    """is a run is scheduled"""

    ACTIVE: Job.Status.ValueType  # 4
    """run is running"""

    ERROR: Job.Status.ValueType  # 5
    """run errored -> paused"""

    COMPLETED: Job.Status.ValueType  # 6
    """last run done and there is nothing scheduled"""

    ARCHIVED: Job.Status.ValueType  # 7
    """when user deletes this job"""


    class Code(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Job.Code._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NOT_SET: Job.Code._Type.ValueType  # 0
            NBOX: Job.Code._Type.ValueType  # 1
            ZIP: Job.Code._Type.ValueType  # 2
            BINARY: Job.Code._Type.ValueType  # 3
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NOT_SET: Job.Code.Type.ValueType  # 0
        NBOX: Job.Code.Type.ValueType  # 1
        ZIP: Job.Code.Type.ValueType  # 2
        BINARY: Job.Code.Type.ValueType  # 3

        class S3MetaEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            value: typing.Text
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        S3_URL_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        S3_META_FIELD_NUMBER: builtins.int
        s3_url: typing.Text
        size: builtins.int
        type: global___Job.Code.Type.ValueType
        @property
        def s3_meta(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
        def __init__(self,
            *,
            s3_url: typing.Text = ...,
            size: builtins.int = ...,
            type: global___Job.Code.Type.ValueType = ...,
            s3_meta: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["s3_meta",b"s3_meta","s3_url",b"s3_url","size",b"size","type",b"type"]) -> None: ...

    class Schedule(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        START_FIELD_NUMBER: builtins.int
        END_FIELD_NUMBER: builtins.int
        CRON_FIELD_NUMBER: builtins.int
        @property
        def start(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        @property
        def end(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        cron: typing.Text
        def __init__(self,
            *,
            start: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            end: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            cron: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["end",b"end","start",b"start"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cron",b"cron","end",b"end","start",b"start"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    DAG_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    id: typing.Text
    """unique id of the job"""

    name: typing.Text
    """user defined name of the job
    // user provided description of the job
    string description = 3;
    """

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """time created"""
        pass
    @property
    def code(self) -> global___Job.Code: ...
    @property
    def auth_info(self) -> global___NBXAuthInfo:
        """some blank space for future fields

        """
        pass
    @property
    def schedule(self) -> global___Job.Schedule:
        """schedule of the job"""
        pass
    @property
    def dag(self) -> dag_pb2.DAG:
        """nbox created DAG information
        get this from dag.proto
        """
        pass
    status: global___Job.Status.ValueType
    """Job Status, as used within WS"""

    def __init__(self,
        *,
        id: typing.Text = ...,
        name: typing.Text = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        code: typing.Optional[global___Job.Code] = ...,
        auth_info: typing.Optional[global___NBXAuthInfo] = ...,
        schedule: typing.Optional[global___Job.Schedule] = ...,
        dag: typing.Optional[dag_pb2.DAG] = ...,
        status: global___Job.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_info",b"auth_info","code",b"code","created_at",b"created_at","dag",b"dag","schedule",b"schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info",b"auth_info","code",b"code","created_at",b"created_at","dag",b"dag","id",b"id","name",b"name","schedule",b"schedule","status",b"status"]) -> None: ...
global___Job = Job

class NBXAuthInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    USERNAME_FIELD_NUMBER: builtins.int
    WORKSPACE_FIELD_NUMBER: builtins.int
    username: typing.Text
    workspace: typing.Text
    def __init__(self,
        *,
        username: typing.Text = ...,
        workspace: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["username",b"username","workspace",b"workspace"]) -> None: ...
global___NBXAuthInfo = NBXAuthInfo
