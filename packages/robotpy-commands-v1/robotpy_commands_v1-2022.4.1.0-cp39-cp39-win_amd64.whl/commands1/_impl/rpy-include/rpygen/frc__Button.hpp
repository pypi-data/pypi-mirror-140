
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc\buttons\Button.h>

#include <wpi/sendable/SendableBuilder.h>
#include <frc/commands/Command.h>
#include <frc/commands/CommandGroup.h>



#include <rpygen/frc__Trigger.hpp>

namespace rpygen {

using namespace frc;


template <typename CfgBase>
using PyTrampolineCfgBase_frc__Button =
    PyTrampolineCfg_frc__Trigger<
CfgBase
>;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__Button :
    PyTrampolineCfgBase_frc__Button< CfgBase>
{
    using Base = frc::Button;

    using override_base_WhenPressed_PTCommand = frc::Button;
    using override_base_WhileHeld_PTCommand = frc::Button;
    using override_base_WhenReleased_PTCommand = frc::Button;
    using override_base_CancelWhenPressed_PTCommand = frc::Button;
    using override_base_ToggleWhenPressed_PTCommand = frc::Button;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__Button =
    PyTrampoline_frc__Trigger<
        PyTrampolineBase
        
        , PyTrampolineCfg
    >
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__Button : PyTrampolineBase_frc__Button<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_frc__Button<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__Button;



#ifndef RPYGEN_DISABLE_WhenPressed_PTCommand
    void WhenPressed(Command* command) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_WhenPressed_PTCommand;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "whenPressed", command);
        return CxxCallBase::WhenPressed(command);
    }
#endif

#ifndef RPYGEN_DISABLE_WhileHeld_PTCommand
    void WhileHeld(Command* command) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_WhileHeld_PTCommand;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "whileHeld", command);
        return CxxCallBase::WhileHeld(command);
    }
#endif

#ifndef RPYGEN_DISABLE_WhenReleased_PTCommand
    void WhenReleased(Command* command) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_WhenReleased_PTCommand;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "whenReleased", command);
        return CxxCallBase::WhenReleased(command);
    }
#endif

#ifndef RPYGEN_DISABLE_CancelWhenPressed_PTCommand
    void CancelWhenPressed(Command* command) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_CancelWhenPressed_PTCommand;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "cancelWhenPressed", command);
        return CxxCallBase::CancelWhenPressed(command);
    }
#endif

#ifndef RPYGEN_DISABLE_ToggleWhenPressed_PTCommand
    void ToggleWhenPressed(Command* command) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_ToggleWhenPressed_PTCommand;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "toggleWhenPressed", command);
        return CxxCallBase::ToggleWhenPressed(command);
    }
#endif




};

}; // namespace rpygen
