
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc\pidwrappers\PIDAnalogAccelerometer.h>




#include <rpygen/frc__PIDSource.hpp>
#include <rpygen/frc__AnalogAccelerometer.hpp>

namespace rpygen {

using namespace frc;


template <typename CfgBase>
using PyTrampolineCfgBase_frc__PIDAnalogAccelerometer =
    PyTrampolineCfg_frc__PIDSource<
    PyTrampolineCfg_frc__AnalogAccelerometer<
CfgBase
>>;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__PIDAnalogAccelerometer :
    PyTrampolineCfgBase_frc__PIDAnalogAccelerometer< CfgBase>
{
    using Base = frc::PIDAnalogAccelerometer;

    using override_base_PIDGet_v = frc::PIDAnalogAccelerometer;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__PIDAnalogAccelerometer =
    PyTrampoline_frc__PIDSource<
    PyTrampoline_frc__AnalogAccelerometer<
        PyTrampolineBase
        
        , PyTrampolineCfg
    >
        
        , PyTrampolineCfg
    >
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__PIDAnalogAccelerometer : PyTrampolineBase_frc__PIDAnalogAccelerometer<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_frc__PIDAnalogAccelerometer<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__PIDAnalogAccelerometer;



#ifndef RPYGEN_DISABLE_PIDGet_v
    double PIDGet() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_PIDGet_v;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(double), LookupBase,
            "PIDGet", );
        return CxxCallBase::PIDGet();
    }
#endif




};

}; // namespace rpygen
