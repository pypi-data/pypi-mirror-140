
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc\commands\WaitForChildren.h>

#include <wpi/sendable/SendableBuilder.h>
#include <frc/commands/Command.h>
#include <frc/commands/CommandGroup.h>



#include <rpygen/frc__Command.hpp>

namespace rpygen {

using namespace frc;


template <typename CfgBase>
using PyTrampolineCfgBase_frc__WaitForChildren =
    PyTrampolineCfg_frc__Command<
CfgBase
>;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__WaitForChildren :
    PyTrampolineCfgBase_frc__WaitForChildren< CfgBase>
{
    using Base = frc::WaitForChildren;

    using override_base_IsFinished_v = frc::WaitForChildren;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__WaitForChildren =
    PyTrampoline_frc__Command<
        PyTrampolineBase
        
        , PyTrampolineCfg
    >
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__WaitForChildren : PyTrampolineBase_frc__WaitForChildren<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_frc__WaitForChildren<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__WaitForChildren;



#ifndef RPYGEN_DISABLE_IsFinished_v
    bool IsFinished() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_IsFinished_v;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(bool), LookupBase,
            "isFinished", );
        return CxxCallBase::IsFinished();
    }
#endif




};

}; // namespace rpygen
