
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc/PIDInterface.h>





namespace rpygen {

using namespace frc;



template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__PIDInterface :
    CfgBase
{
    using Base = frc::PIDInterface;

    using override_base_SetPID_d_d_d = frc::PIDInterface;
    using override_base_KGetP_v = frc::PIDInterface;
    using override_base_KGetI_v = frc::PIDInterface;
    using override_base_KGetD_v = frc::PIDInterface;
    using override_base_SetSetpoint_d = frc::PIDInterface;
    using override_base_KGetSetpoint_v = frc::PIDInterface;
    using override_base_Reset_v = frc::PIDInterface;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__PIDInterface : PyTrampolineBase, virtual py::trampoline_self_life_support {
    using PyTrampolineBase::PyTrampolineBase;



#ifndef RPYGEN_DISABLE_SetPID_d_d_d
    void SetPID(double p, double i, double d) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(void), LookupBase,
            "setPID", SetPID, p, i, d);
    }
#endif

#ifndef RPYGEN_DISABLE_KGetP_v
    double GetP() const override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(double), LookupBase,
            "getP", GetP, );
    }
#endif

#ifndef RPYGEN_DISABLE_KGetI_v
    double GetI() const override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(double), LookupBase,
            "getI", GetI, );
    }
#endif

#ifndef RPYGEN_DISABLE_KGetD_v
    double GetD() const override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(double), LookupBase,
            "getD", GetD, );
    }
#endif

#ifndef RPYGEN_DISABLE_SetSetpoint_d
    void SetSetpoint(double setpoint) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(void), LookupBase,
            "setSetpoint", SetSetpoint, setpoint);
    }
#endif

#ifndef RPYGEN_DISABLE_KGetSetpoint_v
    double GetSetpoint() const override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(double), LookupBase,
            "getSetpoint", GetSetpoint, );
    }
#endif

#ifndef RPYGEN_DISABLE_Reset_v
    void Reset() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(PIDInterface, PYBIND11_TYPE(void), LookupBase,
            "reset", Reset, );
    }
#endif




};

}; // namespace rpygen
