
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc/PIDController.h>




#include <rpygen/frc__PIDBase.hpp>

namespace rpygen {

using namespace frc;


template <typename CfgBase>
using PyTrampolineCfgBase_frc__PIDController =
    PyTrampolineCfg_frc__PIDBase<
CfgBase
>;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__PIDController :
    PyTrampolineCfgBase_frc__PIDController< CfgBase>
{
    using Base = frc::PIDController;

    using override_base_Enable_v = frc::PIDController;
    using override_base_Disable_v = frc::PIDController;
    using override_base_Reset_v = frc::PIDController;
    using override_base_InitSendable_RTSendableBuilder = frc::PIDController;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__PIDController =
    PyTrampoline_frc__PIDBase<
        PyTrampolineBase
        
        , PyTrampolineCfg
    >
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__PIDController : PyTrampolineBase_frc__PIDController<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_frc__PIDController<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__PIDController;



#ifndef RPYGEN_DISABLE_Enable_v
    void Enable() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_Enable_v;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "enable", );
        return CxxCallBase::Enable();
    }
#endif

#ifndef RPYGEN_DISABLE_Disable_v
    void Disable() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_Disable_v;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "disable", );
        return CxxCallBase::Disable();
    }
#endif

#ifndef RPYGEN_DISABLE_Reset_v
    void Reset() override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_Reset_v;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "reset", );
        return CxxCallBase::Reset();
    }
#endif

#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "initSendable", builder);
        return CxxCallBase::InitSendable(builder);
    }
#endif




};

}; // namespace rpygen
