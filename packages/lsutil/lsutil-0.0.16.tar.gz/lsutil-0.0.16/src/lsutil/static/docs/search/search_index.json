{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Unix ls , find , and tree commands combined into a Python module. Warning Not yet done, not yet released, no commitment to finish. lsutil combines commonly used functionalities of the ls , find , and tree commands. The functionality is approximately similar to find <find options> -exec ls <ls options> \\{\\} \\; with perhaps better performance and ease of use. Installation The package will be available on pypi.org . Run the following to install the package. pip install lsutil Command line The command lsutil is available as a script. Python module import lsutil lsutil.ls()","title":"Introduction"},{"location":"#introduction","text":"Unix ls , find , and tree commands combined into a Python module. Warning Not yet done, not yet released, no commitment to finish. lsutil combines commonly used functionalities of the ls , find , and tree commands. The functionality is approximately similar to find <find options> -exec ls <ls options> \\{\\} \\; with perhaps better performance and ease of use.","title":"Introduction"},{"location":"#installation","text":"The package will be available on pypi.org . Run the following to install the package. pip install lsutil","title":"Installation"},{"location":"#command-line","text":"The command lsutil is available as a script.","title":"Command line"},{"location":"#python-module","text":"import lsutil lsutil.ls()","title":"Python module"},{"location":"api/","text":"Module documentation `lsutil.sortpaths(list) Sorts the list of paths lsutil.tree(entries: list) entries is the list of entries to show in a tree form. lsutil.ls(patterns, /, ...) patterns is the list of entries to list.","title":"Module documentation"},{"location":"api/#module-documentation","text":"","title":"Module documentation"},{"location":"api/#lsutilsortpathslist","text":"Sorts the list of paths","title":"`lsutil.sortpaths(list)"},{"location":"api/#lsutiltreeentries-list","text":"entries is the list of entries to show in a tree form.","title":"lsutil.tree(entries: list)"},{"location":"api/#lsutillspatterns","text":"patterns is the list of entries to list.","title":"lsutil.ls(patterns, /, ...)"},{"location":"dev/","text":"Development Guides","title":"Development Guides"},{"location":"dev/#development-guides","text":"","title":"Development Guides"},{"location":"man/","text":"Man Page lsutil [options] Syntax --long use a long listing format --all show entries starting with '.', except for '.' and '..' -1 , --one : show one line per entry --formats use a format string to print entry. See Formatting the Output below. --tree : show entries in a tree form. Formatting the Output (Copied from time command, not correct for lsutil) The format string FORMAT controls the contents of the time output. The format string can be set using the -f' or --format', -v' or --verbose', or -p' or --portability' options. If they are not given, but the TIME environment variable is set, its value is used as the format string. Otherwise, a built-in default format is used. The default format is: %Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k %Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps The format string usually consists of resource specifiers' interspersed with plain text. A percent sign ( %') in the format string causes the following character to be interpreted as a resource specifier, which is similar to the formatting characters in the printf(3) function. A backslash ( \\') introduces a backslash escape', which is translated into a single printing character upon output. \\t' outputs a tab character, \\n' outputs a newline, and \\\\' outputs a backslash. A backslash followed by any other character outputs a question mark ( ?') followed by a backslash, to indicate that an invalid backslash escape was given. Other text in the format string is copied verbatim to the output. time always prints a newline after printing the resource use information, so normally format strings do not end with a newline character (or `\\n'). There are many resource specifications. Not all resources are measured by all versions of Unix, so some of the values might be reported as zero. Any character following a percent sign that is not listed in the table below causes a question mark (`?') to be output, followed by that character, to indicate that an invalid resource specifier was given. The resource specifiers, which are a superset of those recognized by the tcsh(1) builtin `time' command, are: % A literal `%'. C Name and command line arguments of the command being timed. D Average size of the process's unshared data area, in Kilobytes. E Elapsed real (wall clock) time used by the process, in [hours:]minutes:seconds. F Number of major, or I/O-requiring, page faults that occurred while the process was running. These are faults where the page has actually migrated out of primary memory. I Number of file system inputs by the process. K Average total (data+stack+text) memory use of the process, in Kilobytes. M Maximum resident set size of the process during its lifetime, in Kilobytes. O Number of file system outputs by the process. P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign. See Also ls(1)","title":"Man Page"},{"location":"man/#man-page","text":"lsutil [options]","title":"Man Page"},{"location":"man/#syntax","text":"--long use a long listing format --all show entries starting with '.', except for '.' and '..' -1 , --one : show one line per entry --formats use a format string to print entry. See Formatting the Output below. --tree : show entries in a tree form.","title":"Syntax"},{"location":"man/#formatting-the-output","text":"(Copied from time command, not correct for lsutil) The format string FORMAT controls the contents of the time output. The format string can be set using the -f' or --format', -v' or --verbose', or -p' or --portability' options. If they are not given, but the TIME environment variable is set, its value is used as the format string. Otherwise, a built-in default format is used. The default format is: %Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k %Iinputs+%Ooutputs (%Fmajor+%Rminor)pagefaults %Wswaps The format string usually consists of resource specifiers' interspersed with plain text. A percent sign ( %') in the format string causes the following character to be interpreted as a resource specifier, which is similar to the formatting characters in the printf(3) function. A backslash ( \\') introduces a backslash escape', which is translated into a single printing character upon output. \\t' outputs a tab character, \\n' outputs a newline, and \\\\' outputs a backslash. A backslash followed by any other character outputs a question mark ( ?') followed by a backslash, to indicate that an invalid backslash escape was given. Other text in the format string is copied verbatim to the output. time always prints a newline after printing the resource use information, so normally format strings do not end with a newline character (or `\\n'). There are many resource specifications. Not all resources are measured by all versions of Unix, so some of the values might be reported as zero. Any character following a percent sign that is not listed in the table below causes a question mark (`?') to be output, followed by that character, to indicate that an invalid resource specifier was given. The resource specifiers, which are a superset of those recognized by the tcsh(1) builtin `time' command, are: % A literal `%'. C Name and command line arguments of the command being timed. D Average size of the process's unshared data area, in Kilobytes. E Elapsed real (wall clock) time used by the process, in [hours:]minutes:seconds. F Number of major, or I/O-requiring, page faults that occurred while the process was running. These are faults where the page has actually migrated out of primary memory. I Number of file system inputs by the process. K Average total (data+stack+text) memory use of the process, in Kilobytes. M Maximum resident set size of the process during its lifetime, in Kilobytes. O Number of file system outputs by the process. P Percentage of the CPU that this job got. This is just user + system times divided by the total running time. It also prints a percentage sign.","title":"Formatting the Output"},{"location":"man/#see-also","text":"ls(1)","title":"See Also"}]}