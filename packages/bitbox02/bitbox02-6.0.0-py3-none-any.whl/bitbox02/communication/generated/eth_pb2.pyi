"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from . import antiklepto_pb2
import builtins
from . import common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ETHCoin(_ETHCoin, metaclass=_ETHCoinEnumTypeWrapper):
    pass
class _ETHCoin:
    V = typing.NewType('V', builtins.int)
class _ETHCoinEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ETHCoin.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ETH = ETHCoin.V(0)
    RopstenETH = ETHCoin.V(1)
    RinkebyETH = ETHCoin.V(2)

ETH = ETHCoin.V(0)
RopstenETH = ETHCoin.V(1)
RinkebyETH = ETHCoin.V(2)
global___ETHCoin = ETHCoin


class ETHPubRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class OutputType(_OutputType, metaclass=_OutputTypeEnumTypeWrapper):
        pass
    class _OutputType:
        V = typing.NewType('V', builtins.int)
    class _OutputTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OutputType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ADDRESS = ETHPubRequest.OutputType.V(0)
        XPUB = ETHPubRequest.OutputType.V(1)

    ADDRESS = ETHPubRequest.OutputType.V(0)
    XPUB = ETHPubRequest.OutputType.V(1)

    KEYPATH_FIELD_NUMBER: builtins.int
    COIN_FIELD_NUMBER: builtins.int
    OUTPUT_TYPE_FIELD_NUMBER: builtins.int
    DISPLAY_FIELD_NUMBER: builtins.int
    CONTRACT_ADDRESS_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    @property
    def keypath(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    coin: global___ETHCoin.V = ...
    """Deprecated: use chain_id instead."""

    output_type: global___ETHPubRequest.OutputType.V = ...
    display: builtins.bool = ...
    contract_address: builtins.bytes = ...
    chain_id: builtins.int = ...
    """If non-zero, `coin` is ignored and `chain_id` is used to identify the network."""

    def __init__(self,
        *,
        keypath : typing.Optional[typing.Iterable[builtins.int]] = ...,
        coin : global___ETHCoin.V = ...,
        output_type : global___ETHPubRequest.OutputType.V = ...,
        display : builtins.bool = ...,
        contract_address : builtins.bytes = ...,
        chain_id : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","coin",b"coin","contract_address",b"contract_address","display",b"display","keypath",b"keypath","output_type",b"output_type"]) -> None: ...
global___ETHPubRequest = ETHPubRequest

class ETHSignRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COIN_FIELD_NUMBER: builtins.int
    KEYPATH_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    GAS_PRICE_FIELD_NUMBER: builtins.int
    GAS_LIMIT_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    HOST_NONCE_COMMITMENT_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    coin: global___ETHCoin.V = ...
    """Deprecated: use chain_id instead."""

    @property
    def keypath(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    nonce: builtins.bytes = ...
    """smallest big endian serialization, max. 16 bytes"""

    gas_price: builtins.bytes = ...
    """smallest big endian serialization, max. 16 bytes"""

    gas_limit: builtins.bytes = ...
    """smallest big endian serialization, max. 16 bytes"""

    recipient: builtins.bytes = ...
    """20 byte recipient"""

    value: builtins.bytes = ...
    """smallest big endian serialization, max. 32 bytes"""

    data: builtins.bytes = ...
    @property
    def host_nonce_commitment(self) -> antiklepto_pb2.AntiKleptoHostNonceCommitment: ...
    chain_id: builtins.int = ...
    """If non-zero, `coin` is ignored and `chain_id` is used to identify the network."""

    def __init__(self,
        *,
        coin : global___ETHCoin.V = ...,
        keypath : typing.Optional[typing.Iterable[builtins.int]] = ...,
        nonce : builtins.bytes = ...,
        gas_price : builtins.bytes = ...,
        gas_limit : builtins.bytes = ...,
        recipient : builtins.bytes = ...,
        value : builtins.bytes = ...,
        data : builtins.bytes = ...,
        host_nonce_commitment : typing.Optional[antiklepto_pb2.AntiKleptoHostNonceCommitment] = ...,
        chain_id : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["host_nonce_commitment",b"host_nonce_commitment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","coin",b"coin","data",b"data","gas_limit",b"gas_limit","gas_price",b"gas_price","host_nonce_commitment",b"host_nonce_commitment","keypath",b"keypath","nonce",b"nonce","recipient",b"recipient","value",b"value"]) -> None: ...
global___ETHSignRequest = ETHSignRequest

class ETHSignMessageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COIN_FIELD_NUMBER: builtins.int
    KEYPATH_FIELD_NUMBER: builtins.int
    MSG_FIELD_NUMBER: builtins.int
    HOST_NONCE_COMMITMENT_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    coin: global___ETHCoin.V = ...
    """Deprecated: use chain_id instead."""

    @property
    def keypath(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    msg: builtins.bytes = ...
    @property
    def host_nonce_commitment(self) -> antiklepto_pb2.AntiKleptoHostNonceCommitment: ...
    chain_id: builtins.int = ...
    """If non-zero, `coin` is ignored and `chain_id` is used to identify the network."""

    def __init__(self,
        *,
        coin : global___ETHCoin.V = ...,
        keypath : typing.Optional[typing.Iterable[builtins.int]] = ...,
        msg : builtins.bytes = ...,
        host_nonce_commitment : typing.Optional[antiklepto_pb2.AntiKleptoHostNonceCommitment] = ...,
        chain_id : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["host_nonce_commitment",b"host_nonce_commitment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","coin",b"coin","host_nonce_commitment",b"host_nonce_commitment","keypath",b"keypath","msg",b"msg"]) -> None: ...
global___ETHSignMessageRequest = ETHSignMessageRequest

class ETHSignResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIGNATURE_FIELD_NUMBER: builtins.int
    signature: builtins.bytes = ...
    """65 bytes, last byte is the recid"""

    def __init__(self,
        *,
        signature : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["signature",b"signature"]) -> None: ...
global___ETHSignResponse = ETHSignResponse

class ETHRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUB_FIELD_NUMBER: builtins.int
    SIGN_FIELD_NUMBER: builtins.int
    SIGN_MSG_FIELD_NUMBER: builtins.int
    ANTIKLEPTO_SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def pub(self) -> global___ETHPubRequest: ...
    @property
    def sign(self) -> global___ETHSignRequest: ...
    @property
    def sign_msg(self) -> global___ETHSignMessageRequest: ...
    @property
    def antiklepto_signature(self) -> antiklepto_pb2.AntiKleptoSignatureRequest: ...
    def __init__(self,
        *,
        pub : typing.Optional[global___ETHPubRequest] = ...,
        sign : typing.Optional[global___ETHSignRequest] = ...,
        sign_msg : typing.Optional[global___ETHSignMessageRequest] = ...,
        antiklepto_signature : typing.Optional[antiklepto_pb2.AntiKleptoSignatureRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["antiklepto_signature",b"antiklepto_signature","pub",b"pub","request",b"request","sign",b"sign","sign_msg",b"sign_msg"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["antiklepto_signature",b"antiklepto_signature","pub",b"pub","request",b"request","sign",b"sign","sign_msg",b"sign_msg"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["request",b"request"]) -> typing.Optional[typing_extensions.Literal["pub","sign","sign_msg","antiklepto_signature"]]: ...
global___ETHRequest = ETHRequest

class ETHResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUB_FIELD_NUMBER: builtins.int
    SIGN_FIELD_NUMBER: builtins.int
    ANTIKLEPTO_SIGNER_COMMITMENT_FIELD_NUMBER: builtins.int
    @property
    def pub(self) -> common_pb2.PubResponse: ...
    @property
    def sign(self) -> global___ETHSignResponse: ...
    @property
    def antiklepto_signer_commitment(self) -> antiklepto_pb2.AntiKleptoSignerCommitment: ...
    def __init__(self,
        *,
        pub : typing.Optional[common_pb2.PubResponse] = ...,
        sign : typing.Optional[global___ETHSignResponse] = ...,
        antiklepto_signer_commitment : typing.Optional[antiklepto_pb2.AntiKleptoSignerCommitment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["antiklepto_signer_commitment",b"antiklepto_signer_commitment","pub",b"pub","response",b"response","sign",b"sign"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["antiklepto_signer_commitment",b"antiklepto_signer_commitment","pub",b"pub","response",b"response","sign",b"sign"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["response",b"response"]) -> typing.Optional[typing_extensions.Literal["pub","sign","antiklepto_signer_commitment"]]: ...
global___ETHResponse = ETHResponse
