name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release -o dist --interpreter python${{ matrix.python-version }}
    - name: Run tests
      run: |
        pip install bytewax --find-links dist -v --pre
        pip install --upgrade pytest==7.0.0
        python -m pytest pytests/
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Set PYTHON_PATH Environment Variable
      run: |
        $python_path = python -c "import sys; print(sys.executable)"
        echo "PYTHON_PATH=$python_path" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --interpreter ${{ env.PYTHON_PATH }}
    - name: Run tests
      run: |
        pip install bytewax --find-links dist -v --pre
        pip install --upgrade pytest==7.0.0
        python -m pytest pytests/
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --universal2 --interpreter python${{ matrix.python-version }}
    - name: Run tests
      run: |
        pip install bytewax --find-links dist -v --pre
        pip install --upgrade pytest==7.0.0
        python -m pytest pytests/
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: bytewax
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *

  publish-docker-hub:
    name: Publish to Docker Hub
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ release ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: bytewax/bytewax
        tags: |
          type=ref,event=tag

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set RELEASE_VERSION Environment Variable
      run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

    - name: Build and push to Docker Hub
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        build-args: BYTEWAX_VERSION=${{ env.RELEASE_VERSION }}
        file: Dockerfile.release
