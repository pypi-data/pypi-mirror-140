class MimeList:
    def __init__(self):
        self.type= []
        self.add('audio/aac','.aac','AAC audio')
        self.add('application/x-abiword','.abw','AbiWord document')
        self.add('application/x-freearc','.arc','Archive document (multiple files embedded)')
        self.add('video/x-msvideo','.avi','AVI: Audio Video Interleave')
        self.add('application/vnd.amazon.ebook','.azw','Amazon Kindle eBook format')
        self.add('application/octet-stream','.bin','Any kind of binary data')
        self.add('image/bmp','.bmp','Windows OS/2 Bitmap Graphics')
        self.add('application/x-bzip','.bz','BZip archive')
        self.add('application/x-bzip2','.bz2','BZip2 archive')
        self.add('application/x-csh','.csh','C-Shell script')
        self.add('text/css','.css','Cascading Style Sheets (CSS)')
        self.add('text/csv','.csv','Comma-separated values (CSV)')
        self.add('application/msword','.doc','Microsoft Word')
        self.add('application/vnd.openxmlformats-officedocument.wordprocessingml.document','.docx','Microsoft Word (OpenXML)')
        self.add('application/vnd.ms-fontobject','.eot','MS Embedded OpenType fonts')
        self.add('application/epub+zip','.epub','Electronic publication (EPUB)')
        self.add('application/gzip','.gz','GZip Compressed Archive')
        self.add('image/gif','.gif','Graphics Interchange Format (GIF)')
        self.add('text/html','.htm','HyperText Markup Language (HTML)')
        self.add('text/html','.html','')
        self.add('image/vnd.microsoft.icon','.ico','Icon format')
        self.add('text/calendar','.ics','iCalendar format')
        self.add('application/java-archive','.jar','Java Archive (JAR)')
        self.add('image/jpeg','.jpeg','JPEG images')
        self.add('image/jpeg','.jpg','')
        self.add('text/javascript, per the following specifications:','.js','JavaScript')
        self.add('https://html.spec.whatwg.org/multipage/#scriptingLanguages','','')
        self.add('https://html.spec.whatwg.org/multipage/#dependencies:willful-violation','','')
        self.add('https://datatracker.ietf.org/doc/draft-ietf-dispatch-javascript-mjs/','','')
        self.add('application/json','.json','JSON format')
        self.add('application/ld+json','.jsonld','JSON-LD format')
        self.add('audio/midi audio/x-midi','.mid','Musical Instrument Digital Interface (MIDI)')
        self.add('audio/midi audio/x-midi','.midi','')
        self.add('text/javascript','.mjs','JavaScript module')
        self.add('audio/mpeg','.mp3','MP3 audio')
        self.add('video/mpeg','.mpeg','MPEG Video')
        self.add('application/vnd.apple.installer+xml','.mpkg','Apple Installer Package')
        self.add('application/vnd.oasis.opendocument.presentation','.odp','OpenDocument presentation document')
        self.add('application/vnd.oasis.opendocument.spreadsheet','.ods','OpenDocument spreadsheet document')
        self.add('application/vnd.oasis.opendocument.text','.odt','OpenDocument text document')
        self.add('audio/ogg','.oga','OGG audio')
        self.add('video/ogg','.ogv','OGG video')
        self.add('application/ogg','.ogx','OGG')
        self.add('audio/opus','.opus','Opus audio')
        self.add('font/otf','.otf','OpenType font')
        self.add('image/png','.png','Portable Network Graphics')
        self.add('application/pdf','.pdf','Adobe Portable Document Format (PDF)')
        self.add('application/x-httpd-php','.php','Hypertext Preprocessor (Personal Home Page)')
        self.add('application/vnd.ms-powerpoint','.ppt','Microsoft PowerPoint')
        self.add('application/vnd.openxmlformats-officedocument.presentationml.presentation','.pptx','Microsoft PowerPoint (OpenXML)')
        self.add('application/vnd.rar','.rar','RAR archive')
        self.add('application/rtf','.rtf','Rich Text Format (RTF)')
        self.add('application/x-sh','.sh','Bourne shell script')
        self.add('image/svg+xml','.svg','Scalable Vector Graphics (SVG)')
        self.add('application/x-shockwave-flash','.swf','Small web format (SWF) or Adobe Flash document')
        self.add('application/x-tar','.tar','Tape Archive (TAR)')
        self.add('image/tiff','.tif','Tagged Image File Format (TIFF)')
        self.add('image/tiff','.tiff','')
        self.add('video/mp2t','.ts','MPEG transport stream')
        self.add('font/ttf','.ttf','TrueType Font')
        self.add('text/plain','.txt','Text, (generally ASCII or ISO 8859-n)')
        self.add('application/vnd.visio','.vsd','Microsoft Visio')
        self.add('audio/wav','.wav','Waveform Audio Format')
        self.add('audio/webm','.weba','WEBM audio')
        self.add('video/webm','.webm','WEBM video')
        self.add('image/webp','.webp','WEBP image')
        self.add('font/woff','.woff','Web Open Font Format (WOFF)')
        self.add('font/woff2','.woff2','Web Open Font Format (WOFF)')
        self.add('application/xhtml+xml','.xhtml','XHTML')
        self.add('application/vnd.ms-excel','.xls','Microsoft Excel')
        self.add('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','.xlsx','Microsoft Excel (OpenXML)')
        self.add('application/xml if not readable from casual users (RFC 3023, section 3)','.xml','XML')
        self.add('text/xml if readable from casual users (RFC 3023, section 3)','','')
        self.add('application/vnd.mozilla.xul+xml','.xul','XUL')
        self.add('application/zip','.zip','ZIP archive')
        self.add('video/3gpp','.3gp','3GPP audio/video container')
        self.add('video/3gpp2','.3g2','3GPP2 audio/video container')
        self.add('application/x-7z-compressed','.7z','7-zip archive')
        pass
    def add(self,type,ext,desc):
        o = {"type":type,"ext":ext,"desc":desc}
        self.type.append(o)

    def findExt(self,mime):
        for e in self.type:
            if e["type"].upper() == mime.upper():
                return e["ext"]
        return None
    
# self = MemeType()
