# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/card_rendering.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import notes_pb2 as anki_dot_notes__pb2
from anki import notetypes_pb2 as anki_dot_notetypes__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki/card_rendering.proto',
  package='anki.card_rendering',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x19\x61nki/card_rendering.proto\x12\x13\x61nki.card_rendering\x1a\x12\x61nki/generic.proto\x1a\x10\x61nki/notes.proto\x1a\x14\x61nki/notetypes.proto\";\n\x14\x45xtractAVTagsRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x15\n\rquestion_side\x18\x02 \x01(\x08\"R\n\x15\x45xtractAVTagsResponse\x12\x0c\n\x04text\x18\x01 \x01(\t\x12+\n\x07\x61v_tags\x18\x02 \x03(\x0b\x32\x1a.anki.card_rendering.AVTag\"V\n\x05\x41VTag\x12\x18\n\x0esound_or_video\x18\x01 \x01(\tH\x00\x12*\n\x03tts\x18\x02 \x01(\x0b\x32\x1b.anki.card_rendering.TTSTagH\x00\x42\x07\n\x05value\"]\n\x06TTSTag\x12\x12\n\nfield_text\x18\x01 \x01(\t\x12\x0c\n\x04lang\x18\x02 \x01(\t\x12\x0e\n\x06voices\x18\x03 \x03(\t\x12\r\n\x05speed\x18\x04 \x01(\x02\x12\x12\n\nother_args\x18\x05 \x03(\t\"G\n\x13\x45xtractLatexRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x0b\n\x03svg\x18\x02 \x01(\x08\x12\x15\n\rexpand_clozes\x18\x03 \x01(\x08\"X\n\x14\x45xtractLatexResponse\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x32\n\x05latex\x18\x02 \x03(\x0b\x32#.anki.card_rendering.ExtractedLatex\"6\n\x0e\x45xtractedLatex\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x12\n\nlatex_body\x18\x02 \x01(\t\"\xbe\x01\n\x10\x45mptyCardsReport\x12\x0e\n\x06report\x18\x01 \x01(\t\x12G\n\x05notes\x18\x02 \x03(\x0b\x32\x38.anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards\x1aQ\n\x12NoteWithEmptyCards\x12\x0f\n\x07note_id\x18\x01 \x01(\x03\x12\x10\n\x08\x63\x61rd_ids\x18\x02 \x03(\x03\x12\x18\n\x10will_delete_note\x18\x03 \x01(\x08\"=\n\x19RenderExistingCardRequest\x12\x0f\n\x07\x63\x61rd_id\x18\x01 \x01(\x03\x12\x0f\n\x07\x62rowser\x18\x02 \x01(\x08\"\x99\x01\n\x1cRenderUncommittedCardRequest\x12\x1e\n\x04note\x18\x01 \x01(\x0b\x32\x10.anki.notes.Note\x12\x10\n\x08\x63\x61rd_ord\x18\x02 \x01(\r\x12\x33\n\x08template\x18\x03 \x01(\x0b\x32!.anki.notetypes.Notetype.Template\x12\x12\n\nfill_empty\x18\x04 \x01(\x08\"|\n\"RenderUncommittedCardLegacyRequest\x12\x1e\n\x04note\x18\x01 \x01(\x0b\x32\x10.anki.notes.Note\x12\x10\n\x08\x63\x61rd_ord\x18\x02 \x01(\r\x12\x10\n\x08template\x18\x03 \x01(\x0c\x12\x12\n\nfill_empty\x18\x04 \x01(\x08\"\xb8\x01\n\x12RenderCardResponse\x12\x41\n\x0equestion_nodes\x18\x01 \x03(\x0b\x32).anki.card_rendering.RenderedTemplateNode\x12?\n\x0c\x61nswer_nodes\x18\x02 \x03(\x0b\x32).anki.card_rendering.RenderedTemplateNode\x12\x0b\n\x03\x63ss\x18\x03 \x01(\t\x12\x11\n\tlatex_svg\x18\x04 \x01(\x08\"x\n\x14RenderedTemplateNode\x12\x0e\n\x04text\x18\x01 \x01(\tH\x00\x12G\n\x0breplacement\x18\x02 \x01(\x0b\x32\x30.anki.card_rendering.RenderedTemplateReplacementH\x00\x42\x07\n\x05value\"X\n\x1bRenderedTemplateReplacement\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\x14\n\x0c\x63urrent_text\x18\x02 \x01(\t\x12\x0f\n\x07\x66ilters\x18\x03 \x03(\t\";\n\x15RenderMarkdownRequest\x12\x10\n\x08markdown\x18\x01 \x01(\t\x12\x10\n\x08sanitize\x18\x02 \x01(\x08\"\x8c\x01\n\x10StripHtmlRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x38\n\x04mode\x18\x02 \x01(\x0e\x32*.anki.card_rendering.StripHtmlRequest.Mode\"0\n\x04Mode\x12\n\n\x06NORMAL\x10\x00\x12\x1c\n\x18PRESERVE_MEDIA_FILENAMES\x10\x01\x32\xea\x07\n\x14\x43\x61rdRenderingService\x12\x66\n\rExtractAVTags\x12).anki.card_rendering.ExtractAVTagsRequest\x1a*.anki.card_rendering.ExtractAVTagsResponse\x12\x63\n\x0c\x45xtractLatex\x12(.anki.card_rendering.ExtractLatexRequest\x1a).anki.card_rendering.ExtractLatexResponse\x12K\n\rGetEmptyCards\x12\x13.anki.generic.Empty\x1a%.anki.card_rendering.EmptyCardsReport\x12m\n\x12RenderExistingCard\x12..anki.card_rendering.RenderExistingCardRequest\x1a\'.anki.card_rendering.RenderCardResponse\x12s\n\x15RenderUncommittedCard\x12\x31.anki.card_rendering.RenderUncommittedCardRequest\x1a\'.anki.card_rendering.RenderCardResponse\x12\x7f\n\x1bRenderUncommittedCardLegacy\x12\x37.anki.card_rendering.RenderUncommittedCardLegacyRequest\x1a\'.anki.card_rendering.RenderCardResponse\x12\x39\n\x0bStripAVTags\x12\x14.anki.generic.String\x1a\x14.anki.generic.String\x12R\n\x0eRenderMarkdown\x12*.anki.card_rendering.RenderMarkdownRequest\x1a\x14.anki.generic.String\x12<\n\x0e\x45ncodeIriPaths\x12\x14.anki.generic.String\x1a\x14.anki.generic.String\x12<\n\x0e\x44\x65\x63odeIriPaths\x12\x14.anki.generic.String\x1a\x14.anki.generic.String\x12H\n\tStripHtml\x12%.anki.card_rendering.StripHtmlRequest\x1a\x14.anki.generic.Stringb\x06proto3'
  ,
  dependencies=[anki_dot_generic__pb2.DESCRIPTOR,anki_dot_notes__pb2.DESCRIPTOR,anki_dot_notetypes__pb2.DESCRIPTOR,])



_STRIPHTMLREQUEST_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='anki.card_rendering.StripHtmlRequest.Mode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PRESERVE_MEDIA_FILENAMES', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1748,
  serialized_end=1796,
)
_sym_db.RegisterEnumDescriptor(_STRIPHTMLREQUEST_MODE)


_EXTRACTAVTAGSREQUEST = _descriptor.Descriptor(
  name='ExtractAVTagsRequest',
  full_name='anki.card_rendering.ExtractAVTagsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.ExtractAVTagsRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='question_side', full_name='anki.card_rendering.ExtractAVTagsRequest.question_side', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=169,
)


_EXTRACTAVTAGSRESPONSE = _descriptor.Descriptor(
  name='ExtractAVTagsResponse',
  full_name='anki.card_rendering.ExtractAVTagsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.ExtractAVTagsResponse.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='av_tags', full_name='anki.card_rendering.ExtractAVTagsResponse.av_tags', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=171,
  serialized_end=253,
)


_AVTAG = _descriptor.Descriptor(
  name='AVTag',
  full_name='anki.card_rendering.AVTag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sound_or_video', full_name='anki.card_rendering.AVTag.sound_or_video', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tts', full_name='anki.card_rendering.AVTag.tts', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.card_rendering.AVTag.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=255,
  serialized_end=341,
)


_TTSTAG = _descriptor.Descriptor(
  name='TTSTag',
  full_name='anki.card_rendering.TTSTag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_text', full_name='anki.card_rendering.TTSTag.field_text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lang', full_name='anki.card_rendering.TTSTag.lang', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='voices', full_name='anki.card_rendering.TTSTag.voices', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='speed', full_name='anki.card_rendering.TTSTag.speed', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='other_args', full_name='anki.card_rendering.TTSTag.other_args', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=343,
  serialized_end=436,
)


_EXTRACTLATEXREQUEST = _descriptor.Descriptor(
  name='ExtractLatexRequest',
  full_name='anki.card_rendering.ExtractLatexRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.ExtractLatexRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='svg', full_name='anki.card_rendering.ExtractLatexRequest.svg', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='expand_clozes', full_name='anki.card_rendering.ExtractLatexRequest.expand_clozes', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=438,
  serialized_end=509,
)


_EXTRACTLATEXRESPONSE = _descriptor.Descriptor(
  name='ExtractLatexResponse',
  full_name='anki.card_rendering.ExtractLatexResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.ExtractLatexResponse.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex', full_name='anki.card_rendering.ExtractLatexResponse.latex', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=511,
  serialized_end=599,
)


_EXTRACTEDLATEX = _descriptor.Descriptor(
  name='ExtractedLatex',
  full_name='anki.card_rendering.ExtractedLatex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='anki.card_rendering.ExtractedLatex.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex_body', full_name='anki.card_rendering.ExtractedLatex.latex_body', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=601,
  serialized_end=655,
)


_EMPTYCARDSREPORT_NOTEWITHEMPTYCARDS = _descriptor.Descriptor(
  name='NoteWithEmptyCards',
  full_name='anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note_id', full_name='anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards.note_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards.card_ids', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='will_delete_note', full_name='anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards.will_delete_note', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=767,
  serialized_end=848,
)

_EMPTYCARDSREPORT = _descriptor.Descriptor(
  name='EmptyCardsReport',
  full_name='anki.card_rendering.EmptyCardsReport',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='report', full_name='anki.card_rendering.EmptyCardsReport.report', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notes', full_name='anki.card_rendering.EmptyCardsReport.notes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_EMPTYCARDSREPORT_NOTEWITHEMPTYCARDS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=658,
  serialized_end=848,
)


_RENDEREXISTINGCARDREQUEST = _descriptor.Descriptor(
  name='RenderExistingCardRequest',
  full_name='anki.card_rendering.RenderExistingCardRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_id', full_name='anki.card_rendering.RenderExistingCardRequest.card_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='browser', full_name='anki.card_rendering.RenderExistingCardRequest.browser', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=850,
  serialized_end=911,
)


_RENDERUNCOMMITTEDCARDREQUEST = _descriptor.Descriptor(
  name='RenderUncommittedCardRequest',
  full_name='anki.card_rendering.RenderUncommittedCardRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note', full_name='anki.card_rendering.RenderUncommittedCardRequest.note', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_ord', full_name='anki.card_rendering.RenderUncommittedCardRequest.card_ord', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='template', full_name='anki.card_rendering.RenderUncommittedCardRequest.template', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fill_empty', full_name='anki.card_rendering.RenderUncommittedCardRequest.fill_empty', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=914,
  serialized_end=1067,
)


_RENDERUNCOMMITTEDCARDLEGACYREQUEST = _descriptor.Descriptor(
  name='RenderUncommittedCardLegacyRequest',
  full_name='anki.card_rendering.RenderUncommittedCardLegacyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note', full_name='anki.card_rendering.RenderUncommittedCardLegacyRequest.note', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_ord', full_name='anki.card_rendering.RenderUncommittedCardLegacyRequest.card_ord', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='template', full_name='anki.card_rendering.RenderUncommittedCardLegacyRequest.template', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fill_empty', full_name='anki.card_rendering.RenderUncommittedCardLegacyRequest.fill_empty', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1069,
  serialized_end=1193,
)


_RENDERCARDRESPONSE = _descriptor.Descriptor(
  name='RenderCardResponse',
  full_name='anki.card_rendering.RenderCardResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='question_nodes', full_name='anki.card_rendering.RenderCardResponse.question_nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='answer_nodes', full_name='anki.card_rendering.RenderCardResponse.answer_nodes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='css', full_name='anki.card_rendering.RenderCardResponse.css', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex_svg', full_name='anki.card_rendering.RenderCardResponse.latex_svg', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1196,
  serialized_end=1380,
)


_RENDEREDTEMPLATENODE = _descriptor.Descriptor(
  name='RenderedTemplateNode',
  full_name='anki.card_rendering.RenderedTemplateNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.RenderedTemplateNode.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='replacement', full_name='anki.card_rendering.RenderedTemplateNode.replacement', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.card_rendering.RenderedTemplateNode.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1382,
  serialized_end=1502,
)


_RENDEREDTEMPLATEREPLACEMENT = _descriptor.Descriptor(
  name='RenderedTemplateReplacement',
  full_name='anki.card_rendering.RenderedTemplateReplacement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name', full_name='anki.card_rendering.RenderedTemplateReplacement.field_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_text', full_name='anki.card_rendering.RenderedTemplateReplacement.current_text', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filters', full_name='anki.card_rendering.RenderedTemplateReplacement.filters', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1504,
  serialized_end=1592,
)


_RENDERMARKDOWNREQUEST = _descriptor.Descriptor(
  name='RenderMarkdownRequest',
  full_name='anki.card_rendering.RenderMarkdownRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='markdown', full_name='anki.card_rendering.RenderMarkdownRequest.markdown', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sanitize', full_name='anki.card_rendering.RenderMarkdownRequest.sanitize', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1594,
  serialized_end=1653,
)


_STRIPHTMLREQUEST = _descriptor.Descriptor(
  name='StripHtmlRequest',
  full_name='anki.card_rendering.StripHtmlRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='anki.card_rendering.StripHtmlRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='anki.card_rendering.StripHtmlRequest.mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STRIPHTMLREQUEST_MODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1656,
  serialized_end=1796,
)

_EXTRACTAVTAGSRESPONSE.fields_by_name['av_tags'].message_type = _AVTAG
_AVTAG.fields_by_name['tts'].message_type = _TTSTAG
_AVTAG.oneofs_by_name['value'].fields.append(
  _AVTAG.fields_by_name['sound_or_video'])
_AVTAG.fields_by_name['sound_or_video'].containing_oneof = _AVTAG.oneofs_by_name['value']
_AVTAG.oneofs_by_name['value'].fields.append(
  _AVTAG.fields_by_name['tts'])
_AVTAG.fields_by_name['tts'].containing_oneof = _AVTAG.oneofs_by_name['value']
_EXTRACTLATEXRESPONSE.fields_by_name['latex'].message_type = _EXTRACTEDLATEX
_EMPTYCARDSREPORT_NOTEWITHEMPTYCARDS.containing_type = _EMPTYCARDSREPORT
_EMPTYCARDSREPORT.fields_by_name['notes'].message_type = _EMPTYCARDSREPORT_NOTEWITHEMPTYCARDS
_RENDERUNCOMMITTEDCARDREQUEST.fields_by_name['note'].message_type = anki_dot_notes__pb2._NOTE
_RENDERUNCOMMITTEDCARDREQUEST.fields_by_name['template'].message_type = anki_dot_notetypes__pb2._NOTETYPE_TEMPLATE
_RENDERUNCOMMITTEDCARDLEGACYREQUEST.fields_by_name['note'].message_type = anki_dot_notes__pb2._NOTE
_RENDERCARDRESPONSE.fields_by_name['question_nodes'].message_type = _RENDEREDTEMPLATENODE
_RENDERCARDRESPONSE.fields_by_name['answer_nodes'].message_type = _RENDEREDTEMPLATENODE
_RENDEREDTEMPLATENODE.fields_by_name['replacement'].message_type = _RENDEREDTEMPLATEREPLACEMENT
_RENDEREDTEMPLATENODE.oneofs_by_name['value'].fields.append(
  _RENDEREDTEMPLATENODE.fields_by_name['text'])
_RENDEREDTEMPLATENODE.fields_by_name['text'].containing_oneof = _RENDEREDTEMPLATENODE.oneofs_by_name['value']
_RENDEREDTEMPLATENODE.oneofs_by_name['value'].fields.append(
  _RENDEREDTEMPLATENODE.fields_by_name['replacement'])
_RENDEREDTEMPLATENODE.fields_by_name['replacement'].containing_oneof = _RENDEREDTEMPLATENODE.oneofs_by_name['value']
_STRIPHTMLREQUEST.fields_by_name['mode'].enum_type = _STRIPHTMLREQUEST_MODE
_STRIPHTMLREQUEST_MODE.containing_type = _STRIPHTMLREQUEST
DESCRIPTOR.message_types_by_name['ExtractAVTagsRequest'] = _EXTRACTAVTAGSREQUEST
DESCRIPTOR.message_types_by_name['ExtractAVTagsResponse'] = _EXTRACTAVTAGSRESPONSE
DESCRIPTOR.message_types_by_name['AVTag'] = _AVTAG
DESCRIPTOR.message_types_by_name['TTSTag'] = _TTSTAG
DESCRIPTOR.message_types_by_name['ExtractLatexRequest'] = _EXTRACTLATEXREQUEST
DESCRIPTOR.message_types_by_name['ExtractLatexResponse'] = _EXTRACTLATEXRESPONSE
DESCRIPTOR.message_types_by_name['ExtractedLatex'] = _EXTRACTEDLATEX
DESCRIPTOR.message_types_by_name['EmptyCardsReport'] = _EMPTYCARDSREPORT
DESCRIPTOR.message_types_by_name['RenderExistingCardRequest'] = _RENDEREXISTINGCARDREQUEST
DESCRIPTOR.message_types_by_name['RenderUncommittedCardRequest'] = _RENDERUNCOMMITTEDCARDREQUEST
DESCRIPTOR.message_types_by_name['RenderUncommittedCardLegacyRequest'] = _RENDERUNCOMMITTEDCARDLEGACYREQUEST
DESCRIPTOR.message_types_by_name['RenderCardResponse'] = _RENDERCARDRESPONSE
DESCRIPTOR.message_types_by_name['RenderedTemplateNode'] = _RENDEREDTEMPLATENODE
DESCRIPTOR.message_types_by_name['RenderedTemplateReplacement'] = _RENDEREDTEMPLATEREPLACEMENT
DESCRIPTOR.message_types_by_name['RenderMarkdownRequest'] = _RENDERMARKDOWNREQUEST
DESCRIPTOR.message_types_by_name['StripHtmlRequest'] = _STRIPHTMLREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ExtractAVTagsRequest = _reflection.GeneratedProtocolMessageType('ExtractAVTagsRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTAVTAGSREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.ExtractAVTagsRequest)
  })
_sym_db.RegisterMessage(ExtractAVTagsRequest)

ExtractAVTagsResponse = _reflection.GeneratedProtocolMessageType('ExtractAVTagsResponse', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTAVTAGSRESPONSE,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.ExtractAVTagsResponse)
  })
_sym_db.RegisterMessage(ExtractAVTagsResponse)

AVTag = _reflection.GeneratedProtocolMessageType('AVTag', (_message.Message,), {
  'DESCRIPTOR' : _AVTAG,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.AVTag)
  })
_sym_db.RegisterMessage(AVTag)

TTSTag = _reflection.GeneratedProtocolMessageType('TTSTag', (_message.Message,), {
  'DESCRIPTOR' : _TTSTAG,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.TTSTag)
  })
_sym_db.RegisterMessage(TTSTag)

ExtractLatexRequest = _reflection.GeneratedProtocolMessageType('ExtractLatexRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTLATEXREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.ExtractLatexRequest)
  })
_sym_db.RegisterMessage(ExtractLatexRequest)

ExtractLatexResponse = _reflection.GeneratedProtocolMessageType('ExtractLatexResponse', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTLATEXRESPONSE,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.ExtractLatexResponse)
  })
_sym_db.RegisterMessage(ExtractLatexResponse)

ExtractedLatex = _reflection.GeneratedProtocolMessageType('ExtractedLatex', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTEDLATEX,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.ExtractedLatex)
  })
_sym_db.RegisterMessage(ExtractedLatex)

EmptyCardsReport = _reflection.GeneratedProtocolMessageType('EmptyCardsReport', (_message.Message,), {

  'NoteWithEmptyCards' : _reflection.GeneratedProtocolMessageType('NoteWithEmptyCards', (_message.Message,), {
    'DESCRIPTOR' : _EMPTYCARDSREPORT_NOTEWITHEMPTYCARDS,
    '__module__' : 'anki.card_rendering_pb2'
    # @@protoc_insertion_point(class_scope:anki.card_rendering.EmptyCardsReport.NoteWithEmptyCards)
    })
  ,
  'DESCRIPTOR' : _EMPTYCARDSREPORT,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.EmptyCardsReport)
  })
_sym_db.RegisterMessage(EmptyCardsReport)
_sym_db.RegisterMessage(EmptyCardsReport.NoteWithEmptyCards)

RenderExistingCardRequest = _reflection.GeneratedProtocolMessageType('RenderExistingCardRequest', (_message.Message,), {
  'DESCRIPTOR' : _RENDEREXISTINGCARDREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderExistingCardRequest)
  })
_sym_db.RegisterMessage(RenderExistingCardRequest)

RenderUncommittedCardRequest = _reflection.GeneratedProtocolMessageType('RenderUncommittedCardRequest', (_message.Message,), {
  'DESCRIPTOR' : _RENDERUNCOMMITTEDCARDREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderUncommittedCardRequest)
  })
_sym_db.RegisterMessage(RenderUncommittedCardRequest)

RenderUncommittedCardLegacyRequest = _reflection.GeneratedProtocolMessageType('RenderUncommittedCardLegacyRequest', (_message.Message,), {
  'DESCRIPTOR' : _RENDERUNCOMMITTEDCARDLEGACYREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderUncommittedCardLegacyRequest)
  })
_sym_db.RegisterMessage(RenderUncommittedCardLegacyRequest)

RenderCardResponse = _reflection.GeneratedProtocolMessageType('RenderCardResponse', (_message.Message,), {
  'DESCRIPTOR' : _RENDERCARDRESPONSE,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderCardResponse)
  })
_sym_db.RegisterMessage(RenderCardResponse)

RenderedTemplateNode = _reflection.GeneratedProtocolMessageType('RenderedTemplateNode', (_message.Message,), {
  'DESCRIPTOR' : _RENDEREDTEMPLATENODE,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderedTemplateNode)
  })
_sym_db.RegisterMessage(RenderedTemplateNode)

RenderedTemplateReplacement = _reflection.GeneratedProtocolMessageType('RenderedTemplateReplacement', (_message.Message,), {
  'DESCRIPTOR' : _RENDEREDTEMPLATEREPLACEMENT,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderedTemplateReplacement)
  })
_sym_db.RegisterMessage(RenderedTemplateReplacement)

RenderMarkdownRequest = _reflection.GeneratedProtocolMessageType('RenderMarkdownRequest', (_message.Message,), {
  'DESCRIPTOR' : _RENDERMARKDOWNREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.RenderMarkdownRequest)
  })
_sym_db.RegisterMessage(RenderMarkdownRequest)

StripHtmlRequest = _reflection.GeneratedProtocolMessageType('StripHtmlRequest', (_message.Message,), {
  'DESCRIPTOR' : _STRIPHTMLREQUEST,
  '__module__' : 'anki.card_rendering_pb2'
  # @@protoc_insertion_point(class_scope:anki.card_rendering.StripHtmlRequest)
  })
_sym_db.RegisterMessage(StripHtmlRequest)



_CARDRENDERINGSERVICE = _descriptor.ServiceDescriptor(
  name='CardRenderingService',
  full_name='anki.card_rendering.CardRenderingService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1799,
  serialized_end=2801,
  methods=[
  _descriptor.MethodDescriptor(
    name='ExtractAVTags',
    full_name='anki.card_rendering.CardRenderingService.ExtractAVTags',
    index=0,
    containing_service=None,
    input_type=_EXTRACTAVTAGSREQUEST,
    output_type=_EXTRACTAVTAGSRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ExtractLatex',
    full_name='anki.card_rendering.CardRenderingService.ExtractLatex',
    index=1,
    containing_service=None,
    input_type=_EXTRACTLATEXREQUEST,
    output_type=_EXTRACTLATEXRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetEmptyCards',
    full_name='anki.card_rendering.CardRenderingService.GetEmptyCards',
    index=2,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_EMPTYCARDSREPORT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RenderExistingCard',
    full_name='anki.card_rendering.CardRenderingService.RenderExistingCard',
    index=3,
    containing_service=None,
    input_type=_RENDEREXISTINGCARDREQUEST,
    output_type=_RENDERCARDRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RenderUncommittedCard',
    full_name='anki.card_rendering.CardRenderingService.RenderUncommittedCard',
    index=4,
    containing_service=None,
    input_type=_RENDERUNCOMMITTEDCARDREQUEST,
    output_type=_RENDERCARDRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RenderUncommittedCardLegacy',
    full_name='anki.card_rendering.CardRenderingService.RenderUncommittedCardLegacy',
    index=5,
    containing_service=None,
    input_type=_RENDERUNCOMMITTEDCARDLEGACYREQUEST,
    output_type=_RENDERCARDRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StripAVTags',
    full_name='anki.card_rendering.CardRenderingService.StripAVTags',
    index=6,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RenderMarkdown',
    full_name='anki.card_rendering.CardRenderingService.RenderMarkdown',
    index=7,
    containing_service=None,
    input_type=_RENDERMARKDOWNREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='EncodeIriPaths',
    full_name='anki.card_rendering.CardRenderingService.EncodeIriPaths',
    index=8,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DecodeIriPaths',
    full_name='anki.card_rendering.CardRenderingService.DecodeIriPaths',
    index=9,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StripHtml',
    full_name='anki.card_rendering.CardRenderingService.StripHtml',
    index=10,
    containing_service=None,
    input_type=_STRIPHTMLREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CARDRENDERINGSERVICE)

DESCRIPTOR.services_by_name['CardRenderingService'] = _CARDRENDERINGSERVICE

# @@protoc_insertion_point(module_scope)
