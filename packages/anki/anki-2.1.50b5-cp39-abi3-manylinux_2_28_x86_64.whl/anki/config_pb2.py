# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki/config.proto',
  package='anki.config',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11\x61nki/config.proto\x12\x0b\x61nki.config\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\"\xb8\x04\n\tConfigKey\"\xc1\x03\n\x04\x42ool\x12!\n\x1d\x42ROWSER_TABLE_SHOW_NOTES_MODE\x10\x00\x12\x16\n\x12PREVIEW_BOTH_SIDES\x10\x03\x12\x11\n\rCOLLAPSE_TAGS\x10\x04\x12\x16\n\x12\x43OLLAPSE_NOTETYPES\x10\x05\x12\x12\n\x0e\x43OLLAPSE_DECKS\x10\x06\x12\x1b\n\x17\x43OLLAPSE_SAVED_SEARCHES\x10\x07\x12\x12\n\x0e\x43OLLAPSE_TODAY\x10\x08\x12\x17\n\x13\x43OLLAPSE_CARD_STATE\x10\t\x12\x12\n\x0e\x43OLLAPSE_FLAGS\x10\n\x12\x0e\n\nSCHED_2021\x10\x0b\x12#\n\x1f\x41\x44\x44ING_DEFAULTS_TO_CURRENT_DECK\x10\x0c\x12\x1b\n\x17HIDE_AUDIO_PLAY_BUTTONS\x10\r\x12\"\n\x1eINTERRUPT_AUDIO_WHEN_ANSWERING\x10\x0e\x12\x17\n\x13PASTE_IMAGES_AS_PNG\x10\x0f\x12\x1b\n\x17PASTE_STRIPS_FORMATTING\x10\x10\x12\x17\n\x13NORMALIZE_NOTE_TEXT\x10\x11\x12\x1c\n\x18IGNORE_ACCENTS_IN_SEARCH\x10\x12\"g\n\x06String\x12\x13\n\x0fSET_DUE_BROWSER\x10\x00\x12\x14\n\x10SET_DUE_REVIEWER\x10\x01\x12\x17\n\x13\x44\x45\x46\x41ULT_SEARCH_TEXT\x10\x02\x12\x19\n\x15\x43\x41RD_STATE_CUSTOMIZER\x10\x03\"@\n\x14GetConfigBoolRequest\x12(\n\x03key\x18\x01 \x01(\x0e\x32\x1b.anki.config.ConfigKey.Bool\"a\n\x14SetConfigBoolRequest\x12(\n\x03key\x18\x01 \x01(\x0e\x32\x1b.anki.config.ConfigKey.Bool\x12\r\n\x05value\x18\x02 \x01(\x08\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"D\n\x16GetConfigStringRequest\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\"e\n\x16SetConfigStringRequest\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\x12\r\n\x05value\x18\x02 \x01(\t\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"E\n\x17OptionalStringConfigKey\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\"I\n\x14SetConfigJsonRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x12\n\nvalue_json\x18\x02 \x01(\x0c\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"\xa9\x06\n\x0bPreferences\x12\x37\n\nscheduling\x18\x01 \x01(\x0b\x32#.anki.config.Preferences.Scheduling\x12\x35\n\treviewing\x18\x02 \x01(\x0b\x32\".anki.config.Preferences.Reviewing\x12\x31\n\x07\x65\x64iting\x18\x03 \x01(\x0b\x32 .anki.config.Preferences.Editing\x1a\x8e\x02\n\nScheduling\x12\x19\n\x11scheduler_version\x18\x01 \x01(\r\x12\x10\n\x08rollover\x18\x02 \x01(\r\x12\x18\n\x10learn_ahead_secs\x18\x03 \x01(\r\x12H\n\x0enew_review_mix\x18\x04 \x01(\x0e\x32\x30.anki.config.Preferences.Scheduling.NewReviewMix\x12\x14\n\x0cnew_timezone\x18\x05 \x01(\x08\x12\x17\n\x0f\x64\x61y_learn_first\x18\x06 \x01(\x08\"@\n\x0cNewReviewMix\x12\x0e\n\nDISTRIBUTE\x10\x00\x12\x11\n\rREVIEWS_FIRST\x10\x01\x12\r\n\tNEW_FIRST\x10\x02\x1a\xb3\x01\n\tReviewing\x12\x1f\n\x17hide_audio_play_buttons\x18\x01 \x01(\x08\x12&\n\x1einterrupt_audio_when_answering\x18\x02 \x01(\x08\x12!\n\x19show_remaining_due_counts\x18\x03 \x01(\x08\x12!\n\x19show_intervals_on_buttons\x18\x04 \x01(\x08\x12\x17\n\x0ftime_limit_secs\x18\x05 \x01(\r\x1a\xaf\x01\n\x07\x45\x64iting\x12\'\n\x1f\x61\x64\x64ing_defaults_to_current_deck\x18\x01 \x01(\x08\x12\x1b\n\x13paste_images_as_png\x18\x02 \x01(\x08\x12\x1f\n\x17paste_strips_formatting\x18\x03 \x01(\x08\x12\x1b\n\x13\x64\x65\x66\x61ult_search_text\x18\x04 \x01(\t\x12 \n\x18ignore_accents_in_search\x18\x05 \x01(\x08\x32\xa7\x06\n\rConfigService\x12\x39\n\rGetConfigJson\x12\x14.anki.generic.String\x1a\x12.anki.generic.Json\x12N\n\rSetConfigJson\x12!.anki.config.SetConfigJsonRequest\x1a\x1a.anki.collection.OpChanges\x12M\n\x13SetConfigJsonNoUndo\x12!.anki.config.SetConfigJsonRequest\x1a\x13.anki.generic.Empty\x12@\n\x0cRemoveConfig\x12\x14.anki.generic.String\x1a\x1a.anki.collection.OpChanges\x12\x37\n\x0cGetAllConfig\x12\x13.anki.generic.Empty\x1a\x12.anki.generic.Json\x12\x46\n\rGetConfigBool\x12!.anki.config.GetConfigBoolRequest\x1a\x12.anki.generic.Bool\x12N\n\rSetConfigBool\x12!.anki.config.SetConfigBoolRequest\x1a\x1a.anki.collection.OpChanges\x12L\n\x0fGetConfigString\x12#.anki.config.GetConfigStringRequest\x1a\x14.anki.generic.String\x12R\n\x0fSetConfigString\x12#.anki.config.SetConfigStringRequest\x1a\x1a.anki.collection.OpChanges\x12?\n\x0eGetPreferences\x12\x13.anki.generic.Empty\x1a\x18.anki.config.Preferences\x12\x46\n\x0eSetPreferences\x12\x18.anki.config.Preferences\x1a\x1a.anki.collection.OpChangesb\x06proto3'
  ,
  dependencies=[anki_dot_generic__pb2.DESCRIPTOR,anki_dot_collection__pb2.DESCRIPTOR,])



_CONFIGKEY_BOOL = _descriptor.EnumDescriptor(
  name='Bool',
  full_name='anki.config.ConfigKey.Bool',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BROWSER_TABLE_SHOW_NOTES_MODE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PREVIEW_BOTH_SIDES', index=1, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_TAGS', index=2, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_NOTETYPES', index=3, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_DECKS', index=4, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_SAVED_SEARCHES', index=5, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_TODAY', index=6, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_CARD_STATE', index=7, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLLAPSE_FLAGS', index=8, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SCHED_2021', index=9, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADDING_DEFAULTS_TO_CURRENT_DECK', index=10, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HIDE_AUDIO_PLAY_BUTTONS', index=11, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INTERRUPT_AUDIO_WHEN_ANSWERING', index=12, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PASTE_IMAGES_AS_PNG', index=13, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PASTE_STRIPS_FORMATTING', index=14, number=16,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NORMALIZE_NOTE_TEXT', index=15, number=17,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IGNORE_ACCENTS_IN_SEARCH', index=16, number=18,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=92,
  serialized_end=541,
)
_sym_db.RegisterEnumDescriptor(_CONFIGKEY_BOOL)

_CONFIGKEY_STRING = _descriptor.EnumDescriptor(
  name='String',
  full_name='anki.config.ConfigKey.String',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SET_DUE_BROWSER', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SET_DUE_REVIEWER', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DEFAULT_SEARCH_TEXT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CARD_STATE_CUSTOMIZER', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=543,
  serialized_end=646,
)
_sym_db.RegisterEnumDescriptor(_CONFIGKEY_STRING)

_PREFERENCES_SCHEDULING_NEWREVIEWMIX = _descriptor.EnumDescriptor(
  name='NewReviewMix',
  full_name='anki.config.Preferences.Scheduling.NewReviewMix',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DISTRIBUTE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='REVIEWS_FIRST', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NEW_FIRST', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1518,
  serialized_end=1582,
)
_sym_db.RegisterEnumDescriptor(_PREFERENCES_SCHEDULING_NEWREVIEWMIX)


_CONFIGKEY = _descriptor.Descriptor(
  name='ConfigKey',
  full_name='anki.config.ConfigKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONFIGKEY_BOOL,
    _CONFIGKEY_STRING,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=646,
)


_GETCONFIGBOOLREQUEST = _descriptor.Descriptor(
  name='GetConfigBoolRequest',
  full_name='anki.config.GetConfigBoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.GetConfigBoolRequest.key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=648,
  serialized_end=712,
)


_SETCONFIGBOOLREQUEST = _descriptor.Descriptor(
  name='SetConfigBoolRequest',
  full_name='anki.config.SetConfigBoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.SetConfigBoolRequest.key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='anki.config.SetConfigBoolRequest.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='undoable', full_name='anki.config.SetConfigBoolRequest.undoable', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=714,
  serialized_end=811,
)


_GETCONFIGSTRINGREQUEST = _descriptor.Descriptor(
  name='GetConfigStringRequest',
  full_name='anki.config.GetConfigStringRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.GetConfigStringRequest.key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=813,
  serialized_end=881,
)


_SETCONFIGSTRINGREQUEST = _descriptor.Descriptor(
  name='SetConfigStringRequest',
  full_name='anki.config.SetConfigStringRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.SetConfigStringRequest.key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='anki.config.SetConfigStringRequest.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='undoable', full_name='anki.config.SetConfigStringRequest.undoable', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=883,
  serialized_end=984,
)


_OPTIONALSTRINGCONFIGKEY = _descriptor.Descriptor(
  name='OptionalStringConfigKey',
  full_name='anki.config.OptionalStringConfigKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.OptionalStringConfigKey.key', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=986,
  serialized_end=1055,
)


_SETCONFIGJSONREQUEST = _descriptor.Descriptor(
  name='SetConfigJsonRequest',
  full_name='anki.config.SetConfigJsonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.config.SetConfigJsonRequest.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value_json', full_name='anki.config.SetConfigJsonRequest.value_json', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='undoable', full_name='anki.config.SetConfigJsonRequest.undoable', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1057,
  serialized_end=1130,
)


_PREFERENCES_SCHEDULING = _descriptor.Descriptor(
  name='Scheduling',
  full_name='anki.config.Preferences.Scheduling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler_version', full_name='anki.config.Preferences.Scheduling.scheduler_version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rollover', full_name='anki.config.Preferences.Scheduling.rollover', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='learn_ahead_secs', full_name='anki.config.Preferences.Scheduling.learn_ahead_secs', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_review_mix', full_name='anki.config.Preferences.Scheduling.new_review_mix', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_timezone', full_name='anki.config.Preferences.Scheduling.new_timezone', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='day_learn_first', full_name='anki.config.Preferences.Scheduling.day_learn_first', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PREFERENCES_SCHEDULING_NEWREVIEWMIX,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1312,
  serialized_end=1582,
)

_PREFERENCES_REVIEWING = _descriptor.Descriptor(
  name='Reviewing',
  full_name='anki.config.Preferences.Reviewing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hide_audio_play_buttons', full_name='anki.config.Preferences.Reviewing.hide_audio_play_buttons', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='interrupt_audio_when_answering', full_name='anki.config.Preferences.Reviewing.interrupt_audio_when_answering', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='show_remaining_due_counts', full_name='anki.config.Preferences.Reviewing.show_remaining_due_counts', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='show_intervals_on_buttons', full_name='anki.config.Preferences.Reviewing.show_intervals_on_buttons', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_limit_secs', full_name='anki.config.Preferences.Reviewing.time_limit_secs', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1585,
  serialized_end=1764,
)

_PREFERENCES_EDITING = _descriptor.Descriptor(
  name='Editing',
  full_name='anki.config.Preferences.Editing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='adding_defaults_to_current_deck', full_name='anki.config.Preferences.Editing.adding_defaults_to_current_deck', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='paste_images_as_png', full_name='anki.config.Preferences.Editing.paste_images_as_png', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='paste_strips_formatting', full_name='anki.config.Preferences.Editing.paste_strips_formatting', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='default_search_text', full_name='anki.config.Preferences.Editing.default_search_text', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ignore_accents_in_search', full_name='anki.config.Preferences.Editing.ignore_accents_in_search', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1767,
  serialized_end=1942,
)

_PREFERENCES = _descriptor.Descriptor(
  name='Preferences',
  full_name='anki.config.Preferences',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduling', full_name='anki.config.Preferences.scheduling', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reviewing', full_name='anki.config.Preferences.reviewing', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='editing', full_name='anki.config.Preferences.editing', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PREFERENCES_SCHEDULING, _PREFERENCES_REVIEWING, _PREFERENCES_EDITING, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1133,
  serialized_end=1942,
)

_CONFIGKEY_BOOL.containing_type = _CONFIGKEY
_CONFIGKEY_STRING.containing_type = _CONFIGKEY
_GETCONFIGBOOLREQUEST.fields_by_name['key'].enum_type = _CONFIGKEY_BOOL
_SETCONFIGBOOLREQUEST.fields_by_name['key'].enum_type = _CONFIGKEY_BOOL
_GETCONFIGSTRINGREQUEST.fields_by_name['key'].enum_type = _CONFIGKEY_STRING
_SETCONFIGSTRINGREQUEST.fields_by_name['key'].enum_type = _CONFIGKEY_STRING
_OPTIONALSTRINGCONFIGKEY.fields_by_name['key'].enum_type = _CONFIGKEY_STRING
_PREFERENCES_SCHEDULING.fields_by_name['new_review_mix'].enum_type = _PREFERENCES_SCHEDULING_NEWREVIEWMIX
_PREFERENCES_SCHEDULING.containing_type = _PREFERENCES
_PREFERENCES_SCHEDULING_NEWREVIEWMIX.containing_type = _PREFERENCES_SCHEDULING
_PREFERENCES_REVIEWING.containing_type = _PREFERENCES
_PREFERENCES_EDITING.containing_type = _PREFERENCES
_PREFERENCES.fields_by_name['scheduling'].message_type = _PREFERENCES_SCHEDULING
_PREFERENCES.fields_by_name['reviewing'].message_type = _PREFERENCES_REVIEWING
_PREFERENCES.fields_by_name['editing'].message_type = _PREFERENCES_EDITING
DESCRIPTOR.message_types_by_name['ConfigKey'] = _CONFIGKEY
DESCRIPTOR.message_types_by_name['GetConfigBoolRequest'] = _GETCONFIGBOOLREQUEST
DESCRIPTOR.message_types_by_name['SetConfigBoolRequest'] = _SETCONFIGBOOLREQUEST
DESCRIPTOR.message_types_by_name['GetConfigStringRequest'] = _GETCONFIGSTRINGREQUEST
DESCRIPTOR.message_types_by_name['SetConfigStringRequest'] = _SETCONFIGSTRINGREQUEST
DESCRIPTOR.message_types_by_name['OptionalStringConfigKey'] = _OPTIONALSTRINGCONFIGKEY
DESCRIPTOR.message_types_by_name['SetConfigJsonRequest'] = _SETCONFIGJSONREQUEST
DESCRIPTOR.message_types_by_name['Preferences'] = _PREFERENCES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConfigKey = _reflection.GeneratedProtocolMessageType('ConfigKey', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGKEY,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.ConfigKey)
  })
_sym_db.RegisterMessage(ConfigKey)

GetConfigBoolRequest = _reflection.GeneratedProtocolMessageType('GetConfigBoolRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIGBOOLREQUEST,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.GetConfigBoolRequest)
  })
_sym_db.RegisterMessage(GetConfigBoolRequest)

SetConfigBoolRequest = _reflection.GeneratedProtocolMessageType('SetConfigBoolRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGBOOLREQUEST,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.SetConfigBoolRequest)
  })
_sym_db.RegisterMessage(SetConfigBoolRequest)

GetConfigStringRequest = _reflection.GeneratedProtocolMessageType('GetConfigStringRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIGSTRINGREQUEST,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.GetConfigStringRequest)
  })
_sym_db.RegisterMessage(GetConfigStringRequest)

SetConfigStringRequest = _reflection.GeneratedProtocolMessageType('SetConfigStringRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGSTRINGREQUEST,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.SetConfigStringRequest)
  })
_sym_db.RegisterMessage(SetConfigStringRequest)

OptionalStringConfigKey = _reflection.GeneratedProtocolMessageType('OptionalStringConfigKey', (_message.Message,), {
  'DESCRIPTOR' : _OPTIONALSTRINGCONFIGKEY,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.OptionalStringConfigKey)
  })
_sym_db.RegisterMessage(OptionalStringConfigKey)

SetConfigJsonRequest = _reflection.GeneratedProtocolMessageType('SetConfigJsonRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGJSONREQUEST,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.SetConfigJsonRequest)
  })
_sym_db.RegisterMessage(SetConfigJsonRequest)

Preferences = _reflection.GeneratedProtocolMessageType('Preferences', (_message.Message,), {

  'Scheduling' : _reflection.GeneratedProtocolMessageType('Scheduling', (_message.Message,), {
    'DESCRIPTOR' : _PREFERENCES_SCHEDULING,
    '__module__' : 'anki.config_pb2'
    # @@protoc_insertion_point(class_scope:anki.config.Preferences.Scheduling)
    })
  ,

  'Reviewing' : _reflection.GeneratedProtocolMessageType('Reviewing', (_message.Message,), {
    'DESCRIPTOR' : _PREFERENCES_REVIEWING,
    '__module__' : 'anki.config_pb2'
    # @@protoc_insertion_point(class_scope:anki.config.Preferences.Reviewing)
    })
  ,

  'Editing' : _reflection.GeneratedProtocolMessageType('Editing', (_message.Message,), {
    'DESCRIPTOR' : _PREFERENCES_EDITING,
    '__module__' : 'anki.config_pb2'
    # @@protoc_insertion_point(class_scope:anki.config.Preferences.Editing)
    })
  ,
  'DESCRIPTOR' : _PREFERENCES,
  '__module__' : 'anki.config_pb2'
  # @@protoc_insertion_point(class_scope:anki.config.Preferences)
  })
_sym_db.RegisterMessage(Preferences)
_sym_db.RegisterMessage(Preferences.Scheduling)
_sym_db.RegisterMessage(Preferences.Reviewing)
_sym_db.RegisterMessage(Preferences.Editing)



_CONFIGSERVICE = _descriptor.ServiceDescriptor(
  name='ConfigService',
  full_name='anki.config.ConfigService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1945,
  serialized_end=2752,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetConfigJson',
    full_name='anki.config.ConfigService.GetConfigJson',
    index=0,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=anki_dot_generic__pb2._JSON,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetConfigJson',
    full_name='anki.config.ConfigService.SetConfigJson',
    index=1,
    containing_service=None,
    input_type=_SETCONFIGJSONREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetConfigJsonNoUndo',
    full_name='anki.config.ConfigService.SetConfigJsonNoUndo',
    index=2,
    containing_service=None,
    input_type=_SETCONFIGJSONREQUEST,
    output_type=anki_dot_generic__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveConfig',
    full_name='anki.config.ConfigService.RemoveConfig',
    index=3,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAllConfig',
    full_name='anki.config.ConfigService.GetAllConfig',
    index=4,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=anki_dot_generic__pb2._JSON,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetConfigBool',
    full_name='anki.config.ConfigService.GetConfigBool',
    index=5,
    containing_service=None,
    input_type=_GETCONFIGBOOLREQUEST,
    output_type=anki_dot_generic__pb2._BOOL,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetConfigBool',
    full_name='anki.config.ConfigService.SetConfigBool',
    index=6,
    containing_service=None,
    input_type=_SETCONFIGBOOLREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetConfigString',
    full_name='anki.config.ConfigService.GetConfigString',
    index=7,
    containing_service=None,
    input_type=_GETCONFIGSTRINGREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetConfigString',
    full_name='anki.config.ConfigService.SetConfigString',
    index=8,
    containing_service=None,
    input_type=_SETCONFIGSTRINGREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetPreferences',
    full_name='anki.config.ConfigService.GetPreferences',
    index=9,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_PREFERENCES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetPreferences',
    full_name='anki.config.ConfigService.SetPreferences',
    index=10,
    containing_service=None,
    input_type=_PREFERENCES,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CONFIGSERVICE)

DESCRIPTOR.services_by_name['ConfigService'] = _CONFIGSERVICE

# @@protoc_insertion_point(module_scope)
