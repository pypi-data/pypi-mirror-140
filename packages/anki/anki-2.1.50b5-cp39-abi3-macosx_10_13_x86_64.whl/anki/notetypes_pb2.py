# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/notetypes.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki/notetypes.proto',
  package='anki.notetypes',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x14\x61nki/notetypes.proto\x12\x0e\x61nki.notetypes\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\"\x1a\n\nNotetypeId\x12\x0c\n\x04ntid\x18\x01 \x01(\x03\"\x80\n\n\x08Notetype\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nmtime_secs\x18\x03 \x01(\x03\x12\x0b\n\x03usn\x18\x04 \x01(\x11\x12/\n\x06\x63onfig\x18\x07 \x01(\x0b\x32\x1f.anki.notetypes.Notetype.Config\x12.\n\x06\x66ields\x18\x08 \x03(\x0b\x32\x1e.anki.notetypes.Notetype.Field\x12\x34\n\ttemplates\x18\t \x03(\x0b\x32!.anki.notetypes.Notetype.Template\x1a\xe3\x03\n\x06\x43onfig\x12\x32\n\x04kind\x18\x01 \x01(\x0e\x32$.anki.notetypes.Notetype.Config.Kind\x12\x16\n\x0esort_field_idx\x18\x02 \x01(\r\x12\x0b\n\x03\x63ss\x18\x03 \x01(\t\x12\x1d\n\x15target_deck_id_unused\x18\x04 \x01(\x03\x12\x11\n\tlatex_pre\x18\x05 \x01(\t\x12\x12\n\nlatex_post\x18\x06 \x01(\t\x12\x11\n\tlatex_svg\x18\x07 \x01(\x08\x12=\n\x04reqs\x18\x08 \x03(\x0b\x32/.anki.notetypes.Notetype.Config.CardRequirement\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\x1a\xae\x01\n\x0f\x43\x61rdRequirement\x12\x10\n\x08\x63\x61rd_ord\x18\x01 \x01(\r\x12\x42\n\x04kind\x18\x02 \x01(\x0e\x32\x34.anki.notetypes.Notetype.Config.CardRequirement.Kind\x12\x12\n\nfield_ords\x18\x03 \x03(\r\"1\n\x04Kind\x12\r\n\tKIND_NONE\x10\x00\x12\x0c\n\x08KIND_ANY\x10\x01\x12\x0c\n\x08KIND_ALL\x10\x02\"\'\n\x04Kind\x12\x0f\n\x0bKIND_NORMAL\x10\x00\x12\x0e\n\nKIND_CLOZE\x10\x01\x1a\xe1\x01\n\x05\x46ield\x12!\n\x03ord\x18\x01 \x01(\x0b\x32\x14.anki.generic.UInt32\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x35\n\x06\x63onfig\x18\x05 \x01(\x0b\x32%.anki.notetypes.Notetype.Field.Config\x1ap\n\x06\x43onfig\x12\x0e\n\x06sticky\x18\x01 \x01(\x08\x12\x0b\n\x03rtl\x18\x02 \x01(\x08\x12\x11\n\tfont_name\x18\x03 \x01(\t\x12\x11\n\tfont_size\x18\x04 \x01(\r\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\x1a\xd7\x02\n\x08Template\x12!\n\x03ord\x18\x01 \x01(\x0b\x32\x14.anki.generic.UInt32\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nmtime_secs\x18\x03 \x01(\x03\x12\x0b\n\x03usn\x18\x04 \x01(\x11\x12\x38\n\x06\x63onfig\x18\x05 \x01(\x0b\x32(.anki.notetypes.Notetype.Template.Config\x1a\xbe\x01\n\x06\x43onfig\x12\x10\n\x08q_format\x18\x01 \x01(\t\x12\x10\n\x08\x61_format\x18\x02 \x01(\t\x12\x18\n\x10q_format_browser\x18\x03 \x01(\t\x12\x18\n\x10\x61_format_browser\x18\x04 \x01(\t\x12\x16\n\x0etarget_deck_id\x18\x05 \x01(\x03\x12\x19\n\x11\x62rowser_font_name\x18\x06 \x01(\t\x12\x19\n\x11\x62rowser_font_size\x18\x07 \x01(\r\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\"_\n\x1a\x41\x64\x64OrUpdateNotetypeRequest\x12\x0c\n\x04json\x18\x01 \x01(\x0c\x12\x1e\n\x16preserve_usn_and_mtime\x18\x02 \x01(\x08\x12\x13\n\x0bskip_checks\x18\x03 \x01(\x08\"\xa6\x01\n\rStockNotetype\x12\x30\n\x04kind\x18\x01 \x01(\x0e\x32\".anki.notetypes.StockNotetype.Kind\"c\n\x04Kind\x12\t\n\x05\x42\x41SIC\x10\x00\x12\x16\n\x12\x42\x41SIC_AND_REVERSED\x10\x01\x12\x1b\n\x17\x42\x41SIC_OPTIONAL_REVERSED\x10\x02\x12\x10\n\x0c\x42\x41SIC_TYPING\x10\x03\x12\t\n\x05\x43LOZE\x10\x04\"@\n\rNotetypeNames\x12/\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1e.anki.notetypes.NotetypeNameId\"L\n\x11NotetypeUseCounts\x12\x37\n\x07\x65ntries\x18\x01 \x03(\x0b\x32&.anki.notetypes.NotetypeNameIdUseCount\"*\n\x0eNotetypeNameId\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"E\n\x16NotetypeNameIdUseCount\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tuse_count\x18\x03 \x01(\r\"1\n\x16GetAuxConfigKeyRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0b\n\x03key\x18\x02 \x01(\t\"X\n\x1eGetAuxTemplateConfigKeyRequest\x12\x13\n\x0bnotetype_id\x18\x01 \x01(\x03\x12\x14\n\x0c\x63\x61rd_ordinal\x18\x02 \x01(\r\x12\x0b\n\x03key\x18\x03 \x01(\t\"P\n\x1cGetChangeNotetypeInfoRequest\x12\x17\n\x0fold_notetype_id\x18\x01 \x01(\x03\x12\x17\n\x0fnew_notetype_id\x18\x02 \x01(\x03\"\xb9\x01\n\x15\x43hangeNotetypeRequest\x12\x10\n\x08note_ids\x18\x01 \x03(\x03\x12\x12\n\nnew_fields\x18\x02 \x03(\x05\x12\x15\n\rnew_templates\x18\x03 \x03(\x05\x12\x17\n\x0fold_notetype_id\x18\x04 \x01(\x03\x12\x17\n\x0fnew_notetype_id\x18\x05 \x01(\x03\x12\x16\n\x0e\x63urrent_schema\x18\x06 \x01(\x03\x12\x19\n\x11old_notetype_name\x18\x07 \x01(\t\"\xcf\x01\n\x12\x43hangeNotetypeInfo\x12\x17\n\x0fold_field_names\x18\x01 \x03(\t\x12\x1a\n\x12old_template_names\x18\x02 \x03(\t\x12\x17\n\x0fnew_field_names\x18\x03 \x03(\t\x12\x1a\n\x12new_template_names\x18\x04 \x03(\t\x12\x34\n\x05input\x18\x05 \x01(\x0b\x32%.anki.notetypes.ChangeNotetypeRequest\x12\x19\n\x11old_notetype_name\x18\x06 \x01(\t2\x98\n\n\x10NotetypesService\x12I\n\x0b\x41\x64\x64Notetype\x12\x18.anki.notetypes.Notetype\x1a .anki.collection.OpChangesWithId\x12\x46\n\x0eUpdateNotetype\x12\x18.anki.notetypes.Notetype\x1a\x1a.anki.collection.OpChanges\x12I\n\x11\x41\x64\x64NotetypeLegacy\x12\x12.anki.generic.Json\x1a .anki.collection.OpChangesWithId\x12\x46\n\x14UpdateNotetypeLegacy\x12\x12.anki.generic.Json\x1a\x1a.anki.collection.OpChanges\x12]\n\x13\x41\x64\x64OrUpdateNotetype\x12*.anki.notetypes.AddOrUpdateNotetypeRequest\x1a\x1a.anki.notetypes.NotetypeId\x12K\n\x16GetStockNotetypeLegacy\x12\x1d.anki.notetypes.StockNotetype\x1a\x12.anki.generic.Json\x12\x43\n\x0bGetNotetype\x12\x1a.anki.notetypes.NotetypeId\x1a\x18.anki.notetypes.Notetype\x12\x43\n\x11GetNotetypeLegacy\x12\x1a.anki.notetypes.NotetypeId\x1a\x12.anki.generic.Json\x12\x46\n\x10GetNotetypeNames\x12\x13.anki.generic.Empty\x1a\x1d.anki.notetypes.NotetypeNames\x12S\n\x19GetNotetypeNamesAndCounts\x12\x13.anki.generic.Empty\x1a!.anki.notetypes.NotetypeUseCounts\x12G\n\x13GetNotetypeIdByName\x12\x14.anki.generic.String\x1a\x1a.anki.notetypes.NotetypeId\x12H\n\x0eRemoveNotetype\x12\x1a.anki.notetypes.NotetypeId\x1a\x1a.anki.collection.OpChanges\x12W\n\x17GetAuxNotetypeConfigKey\x12&.anki.notetypes.GetAuxConfigKeyRequest\x1a\x14.anki.generic.String\x12_\n\x17GetAuxTemplateConfigKey\x12..anki.notetypes.GetAuxTemplateConfigKeyRequest\x1a\x14.anki.generic.String\x12i\n\x15GetChangeNotetypeInfo\x12,.anki.notetypes.GetChangeNotetypeInfoRequest\x1a\".anki.notetypes.ChangeNotetypeInfo\x12S\n\x0e\x43hangeNotetype\x12%.anki.notetypes.ChangeNotetypeRequest\x1a\x1a.anki.collection.OpChangesb\x06proto3'
  ,
  dependencies=[anki_dot_generic__pb2.DESCRIPTOR,anki_dot_collection__pb2.DESCRIPTOR,])



_NOTETYPE_CONFIG_CARDREQUIREMENT_KIND = _descriptor.EnumDescriptor(
  name='Kind',
  full_name='anki.notetypes.Notetype.Config.CardRequirement.Kind',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KIND_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KIND_ANY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KIND_ALL', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=728,
  serialized_end=777,
)
_sym_db.RegisterEnumDescriptor(_NOTETYPE_CONFIG_CARDREQUIREMENT_KIND)

_NOTETYPE_CONFIG_KIND = _descriptor.EnumDescriptor(
  name='Kind',
  full_name='anki.notetypes.Notetype.Config.Kind',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KIND_NORMAL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KIND_CLOZE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=779,
  serialized_end=818,
)
_sym_db.RegisterEnumDescriptor(_NOTETYPE_CONFIG_KIND)

_STOCKNOTETYPE_KIND = _descriptor.EnumDescriptor(
  name='Kind',
  full_name='anki.notetypes.StockNotetype.Kind',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BASIC', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BASIC_AND_REVERSED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BASIC_OPTIONAL_REVERSED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BASIC_TYPING', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CLOZE', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1559,
  serialized_end=1658,
)
_sym_db.RegisterEnumDescriptor(_STOCKNOTETYPE_KIND)


_NOTETYPEID = _descriptor.Descriptor(
  name='NotetypeId',
  full_name='anki.notetypes.NotetypeId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ntid', full_name='anki.notetypes.NotetypeId.ntid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=109,
)


_NOTETYPE_CONFIG_CARDREQUIREMENT = _descriptor.Descriptor(
  name='CardRequirement',
  full_name='anki.notetypes.Notetype.Config.CardRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_ord', full_name='anki.notetypes.Notetype.Config.CardRequirement.card_ord', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kind', full_name='anki.notetypes.Notetype.Config.CardRequirement.kind', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='field_ords', full_name='anki.notetypes.Notetype.Config.CardRequirement.field_ords', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NOTETYPE_CONFIG_CARDREQUIREMENT_KIND,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=603,
  serialized_end=777,
)

_NOTETYPE_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='anki.notetypes.Notetype.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kind', full_name='anki.notetypes.Notetype.Config.kind', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sort_field_idx', full_name='anki.notetypes.Notetype.Config.sort_field_idx', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='css', full_name='anki.notetypes.Notetype.Config.css', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_deck_id_unused', full_name='anki.notetypes.Notetype.Config.target_deck_id_unused', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex_pre', full_name='anki.notetypes.Notetype.Config.latex_pre', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex_post', full_name='anki.notetypes.Notetype.Config.latex_post', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latex_svg', full_name='anki.notetypes.Notetype.Config.latex_svg', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reqs', full_name='anki.notetypes.Notetype.Config.reqs', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='other', full_name='anki.notetypes.Notetype.Config.other', index=8,
      number=255, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_NOTETYPE_CONFIG_CARDREQUIREMENT, ],
  enum_types=[
    _NOTETYPE_CONFIG_KIND,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=818,
)

_NOTETYPE_FIELD_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='anki.notetypes.Notetype.Field.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sticky', full_name='anki.notetypes.Notetype.Field.Config.sticky', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rtl', full_name='anki.notetypes.Notetype.Field.Config.rtl', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='font_name', full_name='anki.notetypes.Notetype.Field.Config.font_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='font_size', full_name='anki.notetypes.Notetype.Field.Config.font_size', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='anki.notetypes.Notetype.Field.Config.description', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='other', full_name='anki.notetypes.Notetype.Field.Config.other', index=5,
      number=255, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=934,
  serialized_end=1046,
)

_NOTETYPE_FIELD = _descriptor.Descriptor(
  name='Field',
  full_name='anki.notetypes.Notetype.Field',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ord', full_name='anki.notetypes.Notetype.Field.ord', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='anki.notetypes.Notetype.Field.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config', full_name='anki.notetypes.Notetype.Field.config', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_NOTETYPE_FIELD_CONFIG, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=821,
  serialized_end=1046,
)

_NOTETYPE_TEMPLATE_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='anki.notetypes.Notetype.Template.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='q_format', full_name='anki.notetypes.Notetype.Template.Config.q_format', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='a_format', full_name='anki.notetypes.Notetype.Template.Config.a_format', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='q_format_browser', full_name='anki.notetypes.Notetype.Template.Config.q_format_browser', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='a_format_browser', full_name='anki.notetypes.Notetype.Template.Config.a_format_browser', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_deck_id', full_name='anki.notetypes.Notetype.Template.Config.target_deck_id', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='browser_font_name', full_name='anki.notetypes.Notetype.Template.Config.browser_font_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='browser_font_size', full_name='anki.notetypes.Notetype.Template.Config.browser_font_size', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='other', full_name='anki.notetypes.Notetype.Template.Config.other', index=7,
      number=255, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1202,
  serialized_end=1392,
)

_NOTETYPE_TEMPLATE = _descriptor.Descriptor(
  name='Template',
  full_name='anki.notetypes.Notetype.Template',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ord', full_name='anki.notetypes.Notetype.Template.ord', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='anki.notetypes.Notetype.Template.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mtime_secs', full_name='anki.notetypes.Notetype.Template.mtime_secs', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='usn', full_name='anki.notetypes.Notetype.Template.usn', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config', full_name='anki.notetypes.Notetype.Template.config', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_NOTETYPE_TEMPLATE_CONFIG, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1049,
  serialized_end=1392,
)

_NOTETYPE = _descriptor.Descriptor(
  name='Notetype',
  full_name='anki.notetypes.Notetype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='anki.notetypes.Notetype.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='anki.notetypes.Notetype.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mtime_secs', full_name='anki.notetypes.Notetype.mtime_secs', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='usn', full_name='anki.notetypes.Notetype.usn', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config', full_name='anki.notetypes.Notetype.config', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fields', full_name='anki.notetypes.Notetype.fields', index=5,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='templates', full_name='anki.notetypes.Notetype.templates', index=6,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_NOTETYPE_CONFIG, _NOTETYPE_FIELD, _NOTETYPE_TEMPLATE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=1392,
)


_ADDORUPDATENOTETYPEREQUEST = _descriptor.Descriptor(
  name='AddOrUpdateNotetypeRequest',
  full_name='anki.notetypes.AddOrUpdateNotetypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='json', full_name='anki.notetypes.AddOrUpdateNotetypeRequest.json', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='preserve_usn_and_mtime', full_name='anki.notetypes.AddOrUpdateNotetypeRequest.preserve_usn_and_mtime', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip_checks', full_name='anki.notetypes.AddOrUpdateNotetypeRequest.skip_checks', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1394,
  serialized_end=1489,
)


_STOCKNOTETYPE = _descriptor.Descriptor(
  name='StockNotetype',
  full_name='anki.notetypes.StockNotetype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kind', full_name='anki.notetypes.StockNotetype.kind', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STOCKNOTETYPE_KIND,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1492,
  serialized_end=1658,
)


_NOTETYPENAMES = _descriptor.Descriptor(
  name='NotetypeNames',
  full_name='anki.notetypes.NotetypeNames',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='anki.notetypes.NotetypeNames.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1660,
  serialized_end=1724,
)


_NOTETYPEUSECOUNTS = _descriptor.Descriptor(
  name='NotetypeUseCounts',
  full_name='anki.notetypes.NotetypeUseCounts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='anki.notetypes.NotetypeUseCounts.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1726,
  serialized_end=1802,
)


_NOTETYPENAMEID = _descriptor.Descriptor(
  name='NotetypeNameId',
  full_name='anki.notetypes.NotetypeNameId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='anki.notetypes.NotetypeNameId.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='anki.notetypes.NotetypeNameId.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1804,
  serialized_end=1846,
)


_NOTETYPENAMEIDUSECOUNT = _descriptor.Descriptor(
  name='NotetypeNameIdUseCount',
  full_name='anki.notetypes.NotetypeNameIdUseCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='anki.notetypes.NotetypeNameIdUseCount.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='anki.notetypes.NotetypeNameIdUseCount.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_count', full_name='anki.notetypes.NotetypeNameIdUseCount.use_count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1848,
  serialized_end=1917,
)


_GETAUXCONFIGKEYREQUEST = _descriptor.Descriptor(
  name='GetAuxConfigKeyRequest',
  full_name='anki.notetypes.GetAuxConfigKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='anki.notetypes.GetAuxConfigKeyRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.notetypes.GetAuxConfigKeyRequest.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1919,
  serialized_end=1968,
)


_GETAUXTEMPLATECONFIGKEYREQUEST = _descriptor.Descriptor(
  name='GetAuxTemplateConfigKeyRequest',
  full_name='anki.notetypes.GetAuxTemplateConfigKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='notetype_id', full_name='anki.notetypes.GetAuxTemplateConfigKeyRequest.notetype_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_ordinal', full_name='anki.notetypes.GetAuxTemplateConfigKeyRequest.card_ordinal', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='anki.notetypes.GetAuxTemplateConfigKeyRequest.key', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1970,
  serialized_end=2058,
)


_GETCHANGENOTETYPEINFOREQUEST = _descriptor.Descriptor(
  name='GetChangeNotetypeInfoRequest',
  full_name='anki.notetypes.GetChangeNotetypeInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='old_notetype_id', full_name='anki.notetypes.GetChangeNotetypeInfoRequest.old_notetype_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_notetype_id', full_name='anki.notetypes.GetChangeNotetypeInfoRequest.new_notetype_id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2060,
  serialized_end=2140,
)


_CHANGENOTETYPEREQUEST = _descriptor.Descriptor(
  name='ChangeNotetypeRequest',
  full_name='anki.notetypes.ChangeNotetypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note_ids', full_name='anki.notetypes.ChangeNotetypeRequest.note_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_fields', full_name='anki.notetypes.ChangeNotetypeRequest.new_fields', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_templates', full_name='anki.notetypes.ChangeNotetypeRequest.new_templates', index=2,
      number=3, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='old_notetype_id', full_name='anki.notetypes.ChangeNotetypeRequest.old_notetype_id', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_notetype_id', full_name='anki.notetypes.ChangeNotetypeRequest.new_notetype_id', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_schema', full_name='anki.notetypes.ChangeNotetypeRequest.current_schema', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='old_notetype_name', full_name='anki.notetypes.ChangeNotetypeRequest.old_notetype_name', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2143,
  serialized_end=2328,
)


_CHANGENOTETYPEINFO = _descriptor.Descriptor(
  name='ChangeNotetypeInfo',
  full_name='anki.notetypes.ChangeNotetypeInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='old_field_names', full_name='anki.notetypes.ChangeNotetypeInfo.old_field_names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='old_template_names', full_name='anki.notetypes.ChangeNotetypeInfo.old_template_names', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_field_names', full_name='anki.notetypes.ChangeNotetypeInfo.new_field_names', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_template_names', full_name='anki.notetypes.ChangeNotetypeInfo.new_template_names', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='input', full_name='anki.notetypes.ChangeNotetypeInfo.input', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='old_notetype_name', full_name='anki.notetypes.ChangeNotetypeInfo.old_notetype_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2331,
  serialized_end=2538,
)

_NOTETYPE_CONFIG_CARDREQUIREMENT.fields_by_name['kind'].enum_type = _NOTETYPE_CONFIG_CARDREQUIREMENT_KIND
_NOTETYPE_CONFIG_CARDREQUIREMENT.containing_type = _NOTETYPE_CONFIG
_NOTETYPE_CONFIG_CARDREQUIREMENT_KIND.containing_type = _NOTETYPE_CONFIG_CARDREQUIREMENT
_NOTETYPE_CONFIG.fields_by_name['kind'].enum_type = _NOTETYPE_CONFIG_KIND
_NOTETYPE_CONFIG.fields_by_name['reqs'].message_type = _NOTETYPE_CONFIG_CARDREQUIREMENT
_NOTETYPE_CONFIG.containing_type = _NOTETYPE
_NOTETYPE_CONFIG_KIND.containing_type = _NOTETYPE_CONFIG
_NOTETYPE_FIELD_CONFIG.containing_type = _NOTETYPE_FIELD
_NOTETYPE_FIELD.fields_by_name['ord'].message_type = anki_dot_generic__pb2._UINT32
_NOTETYPE_FIELD.fields_by_name['config'].message_type = _NOTETYPE_FIELD_CONFIG
_NOTETYPE_FIELD.containing_type = _NOTETYPE
_NOTETYPE_TEMPLATE_CONFIG.containing_type = _NOTETYPE_TEMPLATE
_NOTETYPE_TEMPLATE.fields_by_name['ord'].message_type = anki_dot_generic__pb2._UINT32
_NOTETYPE_TEMPLATE.fields_by_name['config'].message_type = _NOTETYPE_TEMPLATE_CONFIG
_NOTETYPE_TEMPLATE.containing_type = _NOTETYPE
_NOTETYPE.fields_by_name['config'].message_type = _NOTETYPE_CONFIG
_NOTETYPE.fields_by_name['fields'].message_type = _NOTETYPE_FIELD
_NOTETYPE.fields_by_name['templates'].message_type = _NOTETYPE_TEMPLATE
_STOCKNOTETYPE.fields_by_name['kind'].enum_type = _STOCKNOTETYPE_KIND
_STOCKNOTETYPE_KIND.containing_type = _STOCKNOTETYPE
_NOTETYPENAMES.fields_by_name['entries'].message_type = _NOTETYPENAMEID
_NOTETYPEUSECOUNTS.fields_by_name['entries'].message_type = _NOTETYPENAMEIDUSECOUNT
_CHANGENOTETYPEINFO.fields_by_name['input'].message_type = _CHANGENOTETYPEREQUEST
DESCRIPTOR.message_types_by_name['NotetypeId'] = _NOTETYPEID
DESCRIPTOR.message_types_by_name['Notetype'] = _NOTETYPE
DESCRIPTOR.message_types_by_name['AddOrUpdateNotetypeRequest'] = _ADDORUPDATENOTETYPEREQUEST
DESCRIPTOR.message_types_by_name['StockNotetype'] = _STOCKNOTETYPE
DESCRIPTOR.message_types_by_name['NotetypeNames'] = _NOTETYPENAMES
DESCRIPTOR.message_types_by_name['NotetypeUseCounts'] = _NOTETYPEUSECOUNTS
DESCRIPTOR.message_types_by_name['NotetypeNameId'] = _NOTETYPENAMEID
DESCRIPTOR.message_types_by_name['NotetypeNameIdUseCount'] = _NOTETYPENAMEIDUSECOUNT
DESCRIPTOR.message_types_by_name['GetAuxConfigKeyRequest'] = _GETAUXCONFIGKEYREQUEST
DESCRIPTOR.message_types_by_name['GetAuxTemplateConfigKeyRequest'] = _GETAUXTEMPLATECONFIGKEYREQUEST
DESCRIPTOR.message_types_by_name['GetChangeNotetypeInfoRequest'] = _GETCHANGENOTETYPEINFOREQUEST
DESCRIPTOR.message_types_by_name['ChangeNotetypeRequest'] = _CHANGENOTETYPEREQUEST
DESCRIPTOR.message_types_by_name['ChangeNotetypeInfo'] = _CHANGENOTETYPEINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NotetypeId = _reflection.GeneratedProtocolMessageType('NotetypeId', (_message.Message,), {
  'DESCRIPTOR' : _NOTETYPEID,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.NotetypeId)
  })
_sym_db.RegisterMessage(NotetypeId)

Notetype = _reflection.GeneratedProtocolMessageType('Notetype', (_message.Message,), {

  'Config' : _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {

    'CardRequirement' : _reflection.GeneratedProtocolMessageType('CardRequirement', (_message.Message,), {
      'DESCRIPTOR' : _NOTETYPE_CONFIG_CARDREQUIREMENT,
      '__module__' : 'anki.notetypes_pb2'
      # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Config.CardRequirement)
      })
    ,
    'DESCRIPTOR' : _NOTETYPE_CONFIG,
    '__module__' : 'anki.notetypes_pb2'
    # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Config)
    })
  ,

  'Field' : _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), {

    'Config' : _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
      'DESCRIPTOR' : _NOTETYPE_FIELD_CONFIG,
      '__module__' : 'anki.notetypes_pb2'
      # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Field.Config)
      })
    ,
    'DESCRIPTOR' : _NOTETYPE_FIELD,
    '__module__' : 'anki.notetypes_pb2'
    # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Field)
    })
  ,

  'Template' : _reflection.GeneratedProtocolMessageType('Template', (_message.Message,), {

    'Config' : _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
      'DESCRIPTOR' : _NOTETYPE_TEMPLATE_CONFIG,
      '__module__' : 'anki.notetypes_pb2'
      # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Template.Config)
      })
    ,
    'DESCRIPTOR' : _NOTETYPE_TEMPLATE,
    '__module__' : 'anki.notetypes_pb2'
    # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype.Template)
    })
  ,
  'DESCRIPTOR' : _NOTETYPE,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.Notetype)
  })
_sym_db.RegisterMessage(Notetype)
_sym_db.RegisterMessage(Notetype.Config)
_sym_db.RegisterMessage(Notetype.Config.CardRequirement)
_sym_db.RegisterMessage(Notetype.Field)
_sym_db.RegisterMessage(Notetype.Field.Config)
_sym_db.RegisterMessage(Notetype.Template)
_sym_db.RegisterMessage(Notetype.Template.Config)

AddOrUpdateNotetypeRequest = _reflection.GeneratedProtocolMessageType('AddOrUpdateNotetypeRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDORUPDATENOTETYPEREQUEST,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.AddOrUpdateNotetypeRequest)
  })
_sym_db.RegisterMessage(AddOrUpdateNotetypeRequest)

StockNotetype = _reflection.GeneratedProtocolMessageType('StockNotetype', (_message.Message,), {
  'DESCRIPTOR' : _STOCKNOTETYPE,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.StockNotetype)
  })
_sym_db.RegisterMessage(StockNotetype)

NotetypeNames = _reflection.GeneratedProtocolMessageType('NotetypeNames', (_message.Message,), {
  'DESCRIPTOR' : _NOTETYPENAMES,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.NotetypeNames)
  })
_sym_db.RegisterMessage(NotetypeNames)

NotetypeUseCounts = _reflection.GeneratedProtocolMessageType('NotetypeUseCounts', (_message.Message,), {
  'DESCRIPTOR' : _NOTETYPEUSECOUNTS,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.NotetypeUseCounts)
  })
_sym_db.RegisterMessage(NotetypeUseCounts)

NotetypeNameId = _reflection.GeneratedProtocolMessageType('NotetypeNameId', (_message.Message,), {
  'DESCRIPTOR' : _NOTETYPENAMEID,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.NotetypeNameId)
  })
_sym_db.RegisterMessage(NotetypeNameId)

NotetypeNameIdUseCount = _reflection.GeneratedProtocolMessageType('NotetypeNameIdUseCount', (_message.Message,), {
  'DESCRIPTOR' : _NOTETYPENAMEIDUSECOUNT,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.NotetypeNameIdUseCount)
  })
_sym_db.RegisterMessage(NotetypeNameIdUseCount)

GetAuxConfigKeyRequest = _reflection.GeneratedProtocolMessageType('GetAuxConfigKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETAUXCONFIGKEYREQUEST,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.GetAuxConfigKeyRequest)
  })
_sym_db.RegisterMessage(GetAuxConfigKeyRequest)

GetAuxTemplateConfigKeyRequest = _reflection.GeneratedProtocolMessageType('GetAuxTemplateConfigKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETAUXTEMPLATECONFIGKEYREQUEST,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.GetAuxTemplateConfigKeyRequest)
  })
_sym_db.RegisterMessage(GetAuxTemplateConfigKeyRequest)

GetChangeNotetypeInfoRequest = _reflection.GeneratedProtocolMessageType('GetChangeNotetypeInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCHANGENOTETYPEINFOREQUEST,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.GetChangeNotetypeInfoRequest)
  })
_sym_db.RegisterMessage(GetChangeNotetypeInfoRequest)

ChangeNotetypeRequest = _reflection.GeneratedProtocolMessageType('ChangeNotetypeRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHANGENOTETYPEREQUEST,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.ChangeNotetypeRequest)
  })
_sym_db.RegisterMessage(ChangeNotetypeRequest)

ChangeNotetypeInfo = _reflection.GeneratedProtocolMessageType('ChangeNotetypeInfo', (_message.Message,), {
  'DESCRIPTOR' : _CHANGENOTETYPEINFO,
  '__module__' : 'anki.notetypes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notetypes.ChangeNotetypeInfo)
  })
_sym_db.RegisterMessage(ChangeNotetypeInfo)



_NOTETYPESSERVICE = _descriptor.ServiceDescriptor(
  name='NotetypesService',
  full_name='anki.notetypes.NotetypesService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=2541,
  serialized_end=3845,
  methods=[
  _descriptor.MethodDescriptor(
    name='AddNotetype',
    full_name='anki.notetypes.NotetypesService.AddNotetype',
    index=0,
    containing_service=None,
    input_type=_NOTETYPE,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateNotetype',
    full_name='anki.notetypes.NotetypesService.UpdateNotetype',
    index=1,
    containing_service=None,
    input_type=_NOTETYPE,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AddNotetypeLegacy',
    full_name='anki.notetypes.NotetypesService.AddNotetypeLegacy',
    index=2,
    containing_service=None,
    input_type=anki_dot_generic__pb2._JSON,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateNotetypeLegacy',
    full_name='anki.notetypes.NotetypesService.UpdateNotetypeLegacy',
    index=3,
    containing_service=None,
    input_type=anki_dot_generic__pb2._JSON,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AddOrUpdateNotetype',
    full_name='anki.notetypes.NotetypesService.AddOrUpdateNotetype',
    index=4,
    containing_service=None,
    input_type=_ADDORUPDATENOTETYPEREQUEST,
    output_type=_NOTETYPEID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetStockNotetypeLegacy',
    full_name='anki.notetypes.NotetypesService.GetStockNotetypeLegacy',
    index=5,
    containing_service=None,
    input_type=_STOCKNOTETYPE,
    output_type=anki_dot_generic__pb2._JSON,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNotetype',
    full_name='anki.notetypes.NotetypesService.GetNotetype',
    index=6,
    containing_service=None,
    input_type=_NOTETYPEID,
    output_type=_NOTETYPE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNotetypeLegacy',
    full_name='anki.notetypes.NotetypesService.GetNotetypeLegacy',
    index=7,
    containing_service=None,
    input_type=_NOTETYPEID,
    output_type=anki_dot_generic__pb2._JSON,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNotetypeNames',
    full_name='anki.notetypes.NotetypesService.GetNotetypeNames',
    index=8,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_NOTETYPENAMES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNotetypeNamesAndCounts',
    full_name='anki.notetypes.NotetypesService.GetNotetypeNamesAndCounts',
    index=9,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_NOTETYPEUSECOUNTS,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNotetypeIdByName',
    full_name='anki.notetypes.NotetypesService.GetNotetypeIdByName',
    index=10,
    containing_service=None,
    input_type=anki_dot_generic__pb2._STRING,
    output_type=_NOTETYPEID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveNotetype',
    full_name='anki.notetypes.NotetypesService.RemoveNotetype',
    index=11,
    containing_service=None,
    input_type=_NOTETYPEID,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAuxNotetypeConfigKey',
    full_name='anki.notetypes.NotetypesService.GetAuxNotetypeConfigKey',
    index=12,
    containing_service=None,
    input_type=_GETAUXCONFIGKEYREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAuxTemplateConfigKey',
    full_name='anki.notetypes.NotetypesService.GetAuxTemplateConfigKey',
    index=13,
    containing_service=None,
    input_type=_GETAUXTEMPLATECONFIGKEYREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetChangeNotetypeInfo',
    full_name='anki.notetypes.NotetypesService.GetChangeNotetypeInfo',
    index=14,
    containing_service=None,
    input_type=_GETCHANGENOTETYPEINFOREQUEST,
    output_type=_CHANGENOTETYPEINFO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ChangeNotetype',
    full_name='anki.notetypes.NotetypesService.ChangeNotetype',
    index=15,
    containing_service=None,
    input_type=_CHANGENOTETYPEREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_NOTETYPESSERVICE)

DESCRIPTOR.services_by_name['NotetypesService'] = _NOTETYPESSERVICE

# @@protoc_insertion_point(module_scope)
