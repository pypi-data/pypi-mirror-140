# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/scheduler.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import cards_pb2 as anki_dot_cards__pb2
from anki import decks_pb2 as anki_dot_decks__pb2
from anki import collection_pb2 as anki_dot_collection__pb2
from anki import config_pb2 as anki_dot_config__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki/scheduler.proto',
  package='anki.scheduler',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x14\x61nki/scheduler.proto\x12\x0e\x61nki.scheduler\x1a\x12\x61nki/generic.proto\x1a\x10\x61nki/cards.proto\x1a\x10\x61nki/decks.proto\x1a\x15\x61nki/collection.proto\x1a\x11\x61nki/config.proto\"\x84\x08\n\x0fSchedulingState\x12\x38\n\x06normal\x18\x01 \x01(\x0b\x32&.anki.scheduler.SchedulingState.NormalH\x00\x12<\n\x08\x66iltered\x18\x02 \x01(\x0b\x32(.anki.scheduler.SchedulingState.FilteredH\x00\x1a\x17\n\x03New\x12\x10\n\x08position\x18\x01 \x01(\r\x1a;\n\x08Learning\x12\x17\n\x0fremaining_steps\x18\x01 \x01(\r\x12\x16\n\x0escheduled_secs\x18\x02 \x01(\r\x1al\n\x06Review\x12\x16\n\x0escheduled_days\x18\x01 \x01(\r\x12\x14\n\x0c\x65lapsed_days\x18\x02 \x01(\r\x12\x13\n\x0b\x65\x61se_factor\x18\x03 \x01(\x02\x12\x0e\n\x06lapses\x18\x04 \x01(\r\x12\x0f\n\x07leeched\x18\x05 \x01(\x08\x1a\x80\x01\n\nRelearning\x12\x36\n\x06review\x18\x01 \x01(\x0b\x32&.anki.scheduler.SchedulingState.Review\x12:\n\x08learning\x18\x02 \x01(\x0b\x32(.anki.scheduler.SchedulingState.Learning\x1a\xff\x01\n\x06Normal\x12\x32\n\x03new\x18\x01 \x01(\x0b\x32#.anki.scheduler.SchedulingState.NewH\x00\x12<\n\x08learning\x18\x02 \x01(\x0b\x32(.anki.scheduler.SchedulingState.LearningH\x00\x12\x38\n\x06review\x18\x03 \x01(\x0b\x32&.anki.scheduler.SchedulingState.ReviewH\x00\x12@\n\nrelearning\x18\x04 \x01(\x0b\x32*.anki.scheduler.SchedulingState.RelearningH\x00\x42\x07\n\x05value\x1a\x33\n\x07Preview\x12\x16\n\x0escheduled_secs\x18\x01 \x01(\r\x12\x10\n\x08\x66inished\x18\x02 \x01(\x08\x1aT\n\x12ReschedulingFilter\x12>\n\x0eoriginal_state\x18\x01 \x01(\x0b\x32&.anki.scheduler.SchedulingState.Normal\x1a\x9b\x01\n\x08\x46iltered\x12:\n\x07preview\x18\x01 \x01(\x0b\x32\'.anki.scheduler.SchedulingState.PreviewH\x00\x12J\n\x0crescheduling\x18\x02 \x01(\x0b\x32\x32.anki.scheduler.SchedulingState.ReschedulingFilterH\x00\x42\x07\n\x05valueB\x07\n\x05value\"\xc7\x02\n\x0bQueuedCards\x12\x35\n\x05\x63\x61rds\x18\x01 \x03(\x0b\x32&.anki.scheduler.QueuedCards.QueuedCard\x12\x11\n\tnew_count\x18\x02 \x01(\r\x12\x16\n\x0elearning_count\x18\x03 \x01(\r\x12\x14\n\x0creview_count\x18\x04 \x01(\r\x1a\x93\x01\n\nQueuedCard\x12\x1e\n\x04\x63\x61rd\x18\x01 \x01(\x0b\x32\x10.anki.cards.Card\x12\x30\n\x05queue\x18\x02 \x01(\x0e\x32!.anki.scheduler.QueuedCards.Queue\x12\x33\n\x0bnext_states\x18\x03 \x01(\x0b\x32\x1e.anki.scheduler.NextCardStates\"*\n\x05Queue\x12\x07\n\x03NEW\x10\x00\x12\x0c\n\x08LEARNING\x10\x01\x12\n\n\x06REVIEW\x10\x02\"L\n\x15GetQueuedCardsRequest\x12\x13\n\x0b\x66\x65tch_limit\x18\x01 \x01(\r\x12\x1e\n\x16intraday_learning_only\x18\x02 \x01(\x08\"E\n\x18SchedTimingTodayResponse\x12\x14\n\x0c\x64\x61ys_elapsed\x18\x01 \x01(\r\x12\x13\n\x0bnext_day_at\x18\x02 \x01(\x03\"<\n\x1aStudiedTodayMessageRequest\x12\r\n\x05\x63\x61rds\x18\x01 \x01(\r\x12\x0f\n\x07seconds\x18\x02 \x01(\x01\"i\n\x12UpdateStatsRequest\x12\x0f\n\x07\x64\x65\x63k_id\x18\x01 \x01(\x03\x12\x11\n\tnew_delta\x18\x02 \x01(\x05\x12\x14\n\x0creview_delta\x18\x04 \x01(\x05\x12\x19\n\x11millisecond_delta\x18\x05 \x01(\x05\"O\n\x13\x45xtendLimitsRequest\x12\x0f\n\x07\x64\x65\x63k_id\x18\x01 \x01(\x03\x12\x11\n\tnew_delta\x18\x02 \x01(\x05\x12\x14\n\x0creview_delta\x18\x03 \x01(\x05\"9\n\x1a\x43ountsForDeckTodayResponse\x12\x0b\n\x03new\x18\x01 \x01(\x05\x12\x0e\n\x06review\x18\x02 \x01(\x05\"\x8b\x02\n\x14\x43ongratsInfoResponse\x12\x17\n\x0flearn_remaining\x18\x01 \x01(\r\x12\x1d\n\x15secs_until_next_learn\x18\x02 \x01(\r\x12\x18\n\x10review_remaining\x18\x03 \x01(\x08\x12\x15\n\rnew_remaining\x18\x04 \x01(\x08\x12\x19\n\x11have_sched_buried\x18\x05 \x01(\x08\x12\x18\n\x10have_user_buried\x18\x06 \x01(\x08\x12\x18\n\x10is_filtered_deck\x18\x07 \x01(\x08\x12!\n\x19\x62ridge_commands_supported\x18\x08 \x01(\x08\x12\x18\n\x10\x64\x65\x63k_description\x18\t \x01(\t\"\x8a\x01\n\x11UnburyDeckRequest\x12\x0f\n\x07\x64\x65\x63k_id\x18\x01 \x01(\x03\x12\x34\n\x04mode\x18\x02 \x01(\x0e\x32&.anki.scheduler.UnburyDeckRequest.Mode\".\n\x04Mode\x12\x07\n\x03\x41LL\x10\x00\x12\x0e\n\nSCHED_ONLY\x10\x01\x12\r\n\tUSER_ONLY\x10\x02\"\xb1\x01\n\x19\x42uryOrSuspendCardsRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x10\n\x08note_ids\x18\x02 \x03(\x03\x12<\n\x04mode\x18\x03 \x01(\x0e\x32..anki.scheduler.BuryOrSuspendCardsRequest.Mode\"2\n\x04Mode\x12\x0b\n\x07SUSPEND\x10\x00\x12\x0e\n\nBURY_SCHED\x10\x01\x12\r\n\tBURY_USER\x10\x02\":\n\x19ScheduleCardsAsNewRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x0b\n\x03log\x18\x02 \x01(\x08\"m\n\x11SetDueDateRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x0c\n\x04\x64\x61ys\x18\x02 \x01(\t\x12\x38\n\nconfig_key\x18\x03 \x01(\x0b\x32$.anki.config.OptionalStringConfigKey\"y\n\x10SortCardsRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x15\n\rstarting_from\x18\x02 \x01(\r\x12\x11\n\tstep_size\x18\x03 \x01(\r\x12\x11\n\trandomize\x18\x04 \x01(\x08\x12\x16\n\x0eshift_existing\x18\x05 \x01(\x08\"5\n\x0fSortDeckRequest\x12\x0f\n\x07\x64\x65\x63k_id\x18\x01 \x01(\x03\x12\x11\n\trandomize\x18\x02 \x01(\x08\"\xff\x01\n\x0eNextCardStates\x12\x30\n\x07\x63urrent\x18\x01 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12.\n\x05\x61gain\x18\x02 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12-\n\x04hard\x18\x03 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12-\n\x04good\x18\x04 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12-\n\x04\x65\x61sy\x18\x05 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\"\xa7\x02\n\nCardAnswer\x12\x0f\n\x07\x63\x61rd_id\x18\x01 \x01(\x03\x12\x36\n\rcurrent_state\x18\x02 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12\x32\n\tnew_state\x18\x03 \x01(\x0b\x32\x1f.anki.scheduler.SchedulingState\x12\x31\n\x06rating\x18\x04 \x01(\x0e\x32!.anki.scheduler.CardAnswer.Rating\x12\x1a\n\x12\x61nswered_at_millis\x18\x05 \x01(\x03\x12\x1a\n\x12milliseconds_taken\x18\x06 \x01(\r\"1\n\x06Rating\x12\t\n\x05\x41GAIN\x10\x00\x12\x08\n\x04HARD\x10\x01\x12\x08\n\x04GOOD\x10\x02\x12\x08\n\x04\x45\x41SY\x10\x03\"\xc5\x03\n\x12\x43ustomStudyRequest\x12\x19\n\x0fnew_limit_delta\x18\x01 \x01(\x05H\x00\x12\x1c\n\x12review_limit_delta\x18\x02 \x01(\x05H\x00\x12\x15\n\x0b\x66orgot_days\x18\x03 \x01(\rH\x00\x12\x1b\n\x11review_ahead_days\x18\x04 \x01(\rH\x00\x12\x16\n\x0cpreview_days\x18\x05 \x01(\rH\x00\x12\x37\n\x04\x63ram\x18\x06 \x01(\x0b\x32\'.anki.scheduler.CustomStudyRequest.CramH\x00\x1a\xe7\x01\n\x04\x43ram\x12>\n\x04kind\x18\x01 \x01(\x0e\x32\x30.anki.scheduler.CustomStudyRequest.Cram.CramKind\x12\x12\n\ncard_limit\x18\x02 \x01(\r\x12\x17\n\x0ftags_to_include\x18\x03 \x03(\t\x12\x17\n\x0ftags_to_exclude\x18\x04 \x03(\t\"Y\n\x08\x43ramKind\x12\x11\n\rCRAM_KIND_DUE\x10\x00\x12\x11\n\rCRAM_KIND_NEW\x10\x01\x12\x14\n\x10\x43RAM_KIND_REVIEW\x10\x02\x12\x11\n\rCRAM_KIND_ALL\x10\x03\x42\x07\n\x05value2\x9e\x0e\n\x10SchedulerService\x12T\n\x0eGetQueuedCards\x12%.anki.scheduler.GetQueuedCardsRequest\x1a\x1b.anki.scheduler.QueuedCards\x12\x44\n\nAnswerCard\x12\x1a.anki.scheduler.CardAnswer\x1a\x1a.anki.collection.OpChanges\x12Q\n\x10SchedTimingToday\x12\x13.anki.generic.Empty\x1a(.anki.scheduler.SchedTimingTodayResponse\x12\x39\n\x0cStudiedToday\x12\x13.anki.generic.Empty\x1a\x14.anki.generic.String\x12W\n\x13StudiedTodayMessage\x12*.anki.scheduler.StudiedTodayMessageRequest\x1a\x14.anki.generic.String\x12\x46\n\x0bUpdateStats\x12\".anki.scheduler.UpdateStatsRequest\x1a\x13.anki.generic.Empty\x12H\n\x0c\x45xtendLimits\x12#.anki.scheduler.ExtendLimitsRequest\x1a\x13.anki.generic.Empty\x12T\n\x12\x43ountsForDeckToday\x12\x12.anki.decks.DeckId\x1a*.anki.scheduler.CountsForDeckTodayResponse\x12I\n\x0c\x43ongratsInfo\x12\x13.anki.generic.Empty\x1a$.anki.scheduler.CongratsInfoResponse\x12Q\n\x1eRestoreBuriedAndSuspendedCards\x12\x13.anki.cards.CardIds\x1a\x1a.anki.collection.OpChanges\x12K\n\nUnburyDeck\x12!.anki.scheduler.UnburyDeckRequest\x1a\x1a.anki.collection.OpChanges\x12\x64\n\x12\x42uryOrSuspendCards\x12).anki.scheduler.BuryOrSuspendCardsRequest\x1a#.anki.collection.OpChangesWithCount\x12\x43\n\x11\x45mptyFilteredDeck\x12\x12.anki.decks.DeckId\x1a\x1a.anki.collection.OpChanges\x12N\n\x13RebuildFilteredDeck\x12\x12.anki.decks.DeckId\x1a#.anki.collection.OpChangesWithCount\x12[\n\x12ScheduleCardsAsNew\x12).anki.scheduler.ScheduleCardsAsNewRequest\x1a\x1a.anki.collection.OpChanges\x12K\n\nSetDueDate\x12!.anki.scheduler.SetDueDateRequest\x1a\x1a.anki.collection.OpChanges\x12R\n\tSortCards\x12 .anki.scheduler.SortCardsRequest\x1a#.anki.collection.OpChangesWithCount\x12P\n\x08SortDeck\x12\x1f.anki.scheduler.SortDeckRequest\x1a#.anki.collection.OpChangesWithCount\x12G\n\x11GetNextCardStates\x12\x12.anki.cards.CardId\x1a\x1e.anki.scheduler.NextCardStates\x12N\n\x12\x44\x65scribeNextStates\x12\x1e.anki.scheduler.NextCardStates\x1a\x18.anki.generic.StringList\x12\x43\n\x0cStateIsLeech\x12\x1f.anki.scheduler.SchedulingState\x1a\x12.anki.generic.Bool\x12<\n\x10UpgradeScheduler\x12\x13.anki.generic.Empty\x1a\x13.anki.generic.Empty\x12M\n\x0b\x43ustomStudy\x12\".anki.scheduler.CustomStudyRequest\x1a\x1a.anki.collection.OpChangesb\x06proto3'
  ,
  dependencies=[anki_dot_generic__pb2.DESCRIPTOR,anki_dot_cards__pb2.DESCRIPTOR,anki_dot_decks__pb2.DESCRIPTOR,anki_dot_collection__pb2.DESCRIPTOR,anki_dot_config__pb2.DESCRIPTOR,])



_QUEUEDCARDS_QUEUE = _descriptor.EnumDescriptor(
  name='Queue',
  full_name='anki.scheduler.QueuedCards.Queue',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NEW', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LEARNING', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='REVIEW', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1455,
  serialized_end=1497,
)
_sym_db.RegisterEnumDescriptor(_QUEUEDCARDS_QUEUE)

_UNBURYDECKREQUEST_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='anki.scheduler.UnburyDeckRequest.Mode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SCHED_ONLY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='USER_ONLY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2320,
  serialized_end=2366,
)
_sym_db.RegisterEnumDescriptor(_UNBURYDECKREQUEST_MODE)

_BURYORSUSPENDCARDSREQUEST_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='anki.scheduler.BuryOrSuspendCardsRequest.Mode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUSPEND', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BURY_SCHED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BURY_USER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2496,
  serialized_end=2546,
)
_sym_db.RegisterEnumDescriptor(_BURYORSUSPENDCARDSREQUEST_MODE)

_CARDANSWER_RATING = _descriptor.EnumDescriptor(
  name='Rating',
  full_name='anki.scheduler.CardAnswer.Rating',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AGAIN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HARD', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GOOD', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EASY', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3402,
  serialized_end=3451,
)
_sym_db.RegisterEnumDescriptor(_CARDANSWER_RATING)

_CUSTOMSTUDYREQUEST_CRAM_CRAMKIND = _descriptor.EnumDescriptor(
  name='CramKind',
  full_name='anki.scheduler.CustomStudyRequest.Cram.CramKind',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CRAM_KIND_DUE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CRAM_KIND_NEW', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CRAM_KIND_REVIEW', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CRAM_KIND_ALL', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3809,
  serialized_end=3898,
)
_sym_db.RegisterEnumDescriptor(_CUSTOMSTUDYREQUEST_CRAM_CRAMKIND)


_SCHEDULINGSTATE_NEW = _descriptor.Descriptor(
  name='New',
  full_name='anki.scheduler.SchedulingState.New',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='position', full_name='anki.scheduler.SchedulingState.New.position', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=278,
  serialized_end=301,
)

_SCHEDULINGSTATE_LEARNING = _descriptor.Descriptor(
  name='Learning',
  full_name='anki.scheduler.SchedulingState.Learning',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='remaining_steps', full_name='anki.scheduler.SchedulingState.Learning.remaining_steps', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='scheduled_secs', full_name='anki.scheduler.SchedulingState.Learning.scheduled_secs', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=362,
)

_SCHEDULINGSTATE_REVIEW = _descriptor.Descriptor(
  name='Review',
  full_name='anki.scheduler.SchedulingState.Review',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduled_days', full_name='anki.scheduler.SchedulingState.Review.scheduled_days', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='elapsed_days', full_name='anki.scheduler.SchedulingState.Review.elapsed_days', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ease_factor', full_name='anki.scheduler.SchedulingState.Review.ease_factor', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lapses', full_name='anki.scheduler.SchedulingState.Review.lapses', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='leeched', full_name='anki.scheduler.SchedulingState.Review.leeched', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=364,
  serialized_end=472,
)

_SCHEDULINGSTATE_RELEARNING = _descriptor.Descriptor(
  name='Relearning',
  full_name='anki.scheduler.SchedulingState.Relearning',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='review', full_name='anki.scheduler.SchedulingState.Relearning.review', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='learning', full_name='anki.scheduler.SchedulingState.Relearning.learning', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=475,
  serialized_end=603,
)

_SCHEDULINGSTATE_NORMAL = _descriptor.Descriptor(
  name='Normal',
  full_name='anki.scheduler.SchedulingState.Normal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='new', full_name='anki.scheduler.SchedulingState.Normal.new', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='learning', full_name='anki.scheduler.SchedulingState.Normal.learning', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review', full_name='anki.scheduler.SchedulingState.Normal.review', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='relearning', full_name='anki.scheduler.SchedulingState.Normal.relearning', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.scheduler.SchedulingState.Normal.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=606,
  serialized_end=861,
)

_SCHEDULINGSTATE_PREVIEW = _descriptor.Descriptor(
  name='Preview',
  full_name='anki.scheduler.SchedulingState.Preview',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduled_secs', full_name='anki.scheduler.SchedulingState.Preview.scheduled_secs', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='finished', full_name='anki.scheduler.SchedulingState.Preview.finished', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=863,
  serialized_end=914,
)

_SCHEDULINGSTATE_RESCHEDULINGFILTER = _descriptor.Descriptor(
  name='ReschedulingFilter',
  full_name='anki.scheduler.SchedulingState.ReschedulingFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_state', full_name='anki.scheduler.SchedulingState.ReschedulingFilter.original_state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=916,
  serialized_end=1000,
)

_SCHEDULINGSTATE_FILTERED = _descriptor.Descriptor(
  name='Filtered',
  full_name='anki.scheduler.SchedulingState.Filtered',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='preview', full_name='anki.scheduler.SchedulingState.Filtered.preview', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rescheduling', full_name='anki.scheduler.SchedulingState.Filtered.rescheduling', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.scheduler.SchedulingState.Filtered.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1003,
  serialized_end=1158,
)

_SCHEDULINGSTATE = _descriptor.Descriptor(
  name='SchedulingState',
  full_name='anki.scheduler.SchedulingState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='normal', full_name='anki.scheduler.SchedulingState.normal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filtered', full_name='anki.scheduler.SchedulingState.filtered', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SCHEDULINGSTATE_NEW, _SCHEDULINGSTATE_LEARNING, _SCHEDULINGSTATE_REVIEW, _SCHEDULINGSTATE_RELEARNING, _SCHEDULINGSTATE_NORMAL, _SCHEDULINGSTATE_PREVIEW, _SCHEDULINGSTATE_RESCHEDULINGFILTER, _SCHEDULINGSTATE_FILTERED, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.scheduler.SchedulingState.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=139,
  serialized_end=1167,
)


_QUEUEDCARDS_QUEUEDCARD = _descriptor.Descriptor(
  name='QueuedCard',
  full_name='anki.scheduler.QueuedCards.QueuedCard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card', full_name='anki.scheduler.QueuedCards.QueuedCard.card', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='queue', full_name='anki.scheduler.QueuedCards.QueuedCard.queue', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='next_states', full_name='anki.scheduler.QueuedCards.QueuedCard.next_states', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1306,
  serialized_end=1453,
)

_QUEUEDCARDS = _descriptor.Descriptor(
  name='QueuedCards',
  full_name='anki.scheduler.QueuedCards',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='cards', full_name='anki.scheduler.QueuedCards.cards', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_count', full_name='anki.scheduler.QueuedCards.new_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='learning_count', full_name='anki.scheduler.QueuedCards.learning_count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_count', full_name='anki.scheduler.QueuedCards.review_count', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_QUEUEDCARDS_QUEUEDCARD, ],
  enum_types=[
    _QUEUEDCARDS_QUEUE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1170,
  serialized_end=1497,
)


_GETQUEUEDCARDSREQUEST = _descriptor.Descriptor(
  name='GetQueuedCardsRequest',
  full_name='anki.scheduler.GetQueuedCardsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fetch_limit', full_name='anki.scheduler.GetQueuedCardsRequest.fetch_limit', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='intraday_learning_only', full_name='anki.scheduler.GetQueuedCardsRequest.intraday_learning_only', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1499,
  serialized_end=1575,
)


_SCHEDTIMINGTODAYRESPONSE = _descriptor.Descriptor(
  name='SchedTimingTodayResponse',
  full_name='anki.scheduler.SchedTimingTodayResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='days_elapsed', full_name='anki.scheduler.SchedTimingTodayResponse.days_elapsed', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='next_day_at', full_name='anki.scheduler.SchedTimingTodayResponse.next_day_at', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1577,
  serialized_end=1646,
)


_STUDIEDTODAYMESSAGEREQUEST = _descriptor.Descriptor(
  name='StudiedTodayMessageRequest',
  full_name='anki.scheduler.StudiedTodayMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='cards', full_name='anki.scheduler.StudiedTodayMessageRequest.cards', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='seconds', full_name='anki.scheduler.StudiedTodayMessageRequest.seconds', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1648,
  serialized_end=1708,
)


_UPDATESTATSREQUEST = _descriptor.Descriptor(
  name='UpdateStatsRequest',
  full_name='anki.scheduler.UpdateStatsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.scheduler.UpdateStatsRequest.deck_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_delta', full_name='anki.scheduler.UpdateStatsRequest.new_delta', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_delta', full_name='anki.scheduler.UpdateStatsRequest.review_delta', index=2,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='millisecond_delta', full_name='anki.scheduler.UpdateStatsRequest.millisecond_delta', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1710,
  serialized_end=1815,
)


_EXTENDLIMITSREQUEST = _descriptor.Descriptor(
  name='ExtendLimitsRequest',
  full_name='anki.scheduler.ExtendLimitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.scheduler.ExtendLimitsRequest.deck_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_delta', full_name='anki.scheduler.ExtendLimitsRequest.new_delta', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_delta', full_name='anki.scheduler.ExtendLimitsRequest.review_delta', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1817,
  serialized_end=1896,
)


_COUNTSFORDECKTODAYRESPONSE = _descriptor.Descriptor(
  name='CountsForDeckTodayResponse',
  full_name='anki.scheduler.CountsForDeckTodayResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='new', full_name='anki.scheduler.CountsForDeckTodayResponse.new', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review', full_name='anki.scheduler.CountsForDeckTodayResponse.review', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1898,
  serialized_end=1955,
)


_CONGRATSINFORESPONSE = _descriptor.Descriptor(
  name='CongratsInfoResponse',
  full_name='anki.scheduler.CongratsInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='learn_remaining', full_name='anki.scheduler.CongratsInfoResponse.learn_remaining', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='secs_until_next_learn', full_name='anki.scheduler.CongratsInfoResponse.secs_until_next_learn', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_remaining', full_name='anki.scheduler.CongratsInfoResponse.review_remaining', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_remaining', full_name='anki.scheduler.CongratsInfoResponse.new_remaining', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='have_sched_buried', full_name='anki.scheduler.CongratsInfoResponse.have_sched_buried', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='have_user_buried', full_name='anki.scheduler.CongratsInfoResponse.have_user_buried', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='is_filtered_deck', full_name='anki.scheduler.CongratsInfoResponse.is_filtered_deck', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bridge_commands_supported', full_name='anki.scheduler.CongratsInfoResponse.bridge_commands_supported', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deck_description', full_name='anki.scheduler.CongratsInfoResponse.deck_description', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1958,
  serialized_end=2225,
)


_UNBURYDECKREQUEST = _descriptor.Descriptor(
  name='UnburyDeckRequest',
  full_name='anki.scheduler.UnburyDeckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.scheduler.UnburyDeckRequest.deck_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='anki.scheduler.UnburyDeckRequest.mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _UNBURYDECKREQUEST_MODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2228,
  serialized_end=2366,
)


_BURYORSUSPENDCARDSREQUEST = _descriptor.Descriptor(
  name='BuryOrSuspendCardsRequest',
  full_name='anki.scheduler.BuryOrSuspendCardsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.scheduler.BuryOrSuspendCardsRequest.card_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='note_ids', full_name='anki.scheduler.BuryOrSuspendCardsRequest.note_ids', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='anki.scheduler.BuryOrSuspendCardsRequest.mode', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _BURYORSUSPENDCARDSREQUEST_MODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2369,
  serialized_end=2546,
)


_SCHEDULECARDSASNEWREQUEST = _descriptor.Descriptor(
  name='ScheduleCardsAsNewRequest',
  full_name='anki.scheduler.ScheduleCardsAsNewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.scheduler.ScheduleCardsAsNewRequest.card_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log', full_name='anki.scheduler.ScheduleCardsAsNewRequest.log', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2548,
  serialized_end=2606,
)


_SETDUEDATEREQUEST = _descriptor.Descriptor(
  name='SetDueDateRequest',
  full_name='anki.scheduler.SetDueDateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.scheduler.SetDueDateRequest.card_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='days', full_name='anki.scheduler.SetDueDateRequest.days', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='config_key', full_name='anki.scheduler.SetDueDateRequest.config_key', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2608,
  serialized_end=2717,
)


_SORTCARDSREQUEST = _descriptor.Descriptor(
  name='SortCardsRequest',
  full_name='anki.scheduler.SortCardsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.scheduler.SortCardsRequest.card_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='starting_from', full_name='anki.scheduler.SortCardsRequest.starting_from', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='step_size', full_name='anki.scheduler.SortCardsRequest.step_size', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='randomize', full_name='anki.scheduler.SortCardsRequest.randomize', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='shift_existing', full_name='anki.scheduler.SortCardsRequest.shift_existing', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2719,
  serialized_end=2840,
)


_SORTDECKREQUEST = _descriptor.Descriptor(
  name='SortDeckRequest',
  full_name='anki.scheduler.SortDeckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.scheduler.SortDeckRequest.deck_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='randomize', full_name='anki.scheduler.SortDeckRequest.randomize', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2842,
  serialized_end=2895,
)


_NEXTCARDSTATES = _descriptor.Descriptor(
  name='NextCardStates',
  full_name='anki.scheduler.NextCardStates',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='current', full_name='anki.scheduler.NextCardStates.current', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='again', full_name='anki.scheduler.NextCardStates.again', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hard', full_name='anki.scheduler.NextCardStates.hard', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='good', full_name='anki.scheduler.NextCardStates.good', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='easy', full_name='anki.scheduler.NextCardStates.easy', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2898,
  serialized_end=3153,
)


_CARDANSWER = _descriptor.Descriptor(
  name='CardAnswer',
  full_name='anki.scheduler.CardAnswer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='card_id', full_name='anki.scheduler.CardAnswer.card_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_state', full_name='anki.scheduler.CardAnswer.current_state', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_state', full_name='anki.scheduler.CardAnswer.new_state', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rating', full_name='anki.scheduler.CardAnswer.rating', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='answered_at_millis', full_name='anki.scheduler.CardAnswer.answered_at_millis', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='milliseconds_taken', full_name='anki.scheduler.CardAnswer.milliseconds_taken', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CARDANSWER_RATING,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3156,
  serialized_end=3451,
)


_CUSTOMSTUDYREQUEST_CRAM = _descriptor.Descriptor(
  name='Cram',
  full_name='anki.scheduler.CustomStudyRequest.Cram',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kind', full_name='anki.scheduler.CustomStudyRequest.Cram.kind', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_limit', full_name='anki.scheduler.CustomStudyRequest.Cram.card_limit', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tags_to_include', full_name='anki.scheduler.CustomStudyRequest.Cram.tags_to_include', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tags_to_exclude', full_name='anki.scheduler.CustomStudyRequest.Cram.tags_to_exclude', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CUSTOMSTUDYREQUEST_CRAM_CRAMKIND,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3667,
  serialized_end=3898,
)

_CUSTOMSTUDYREQUEST = _descriptor.Descriptor(
  name='CustomStudyRequest',
  full_name='anki.scheduler.CustomStudyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='new_limit_delta', full_name='anki.scheduler.CustomStudyRequest.new_limit_delta', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_limit_delta', full_name='anki.scheduler.CustomStudyRequest.review_limit_delta', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='forgot_days', full_name='anki.scheduler.CustomStudyRequest.forgot_days', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='review_ahead_days', full_name='anki.scheduler.CustomStudyRequest.review_ahead_days', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='preview_days', full_name='anki.scheduler.CustomStudyRequest.preview_days', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cram', full_name='anki.scheduler.CustomStudyRequest.cram', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CUSTOMSTUDYREQUEST_CRAM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='anki.scheduler.CustomStudyRequest.value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3454,
  serialized_end=3907,
)

_SCHEDULINGSTATE_NEW.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_LEARNING.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_REVIEW.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_RELEARNING.fields_by_name['review'].message_type = _SCHEDULINGSTATE_REVIEW
_SCHEDULINGSTATE_RELEARNING.fields_by_name['learning'].message_type = _SCHEDULINGSTATE_LEARNING
_SCHEDULINGSTATE_RELEARNING.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_NORMAL.fields_by_name['new'].message_type = _SCHEDULINGSTATE_NEW
_SCHEDULINGSTATE_NORMAL.fields_by_name['learning'].message_type = _SCHEDULINGSTATE_LEARNING
_SCHEDULINGSTATE_NORMAL.fields_by_name['review'].message_type = _SCHEDULINGSTATE_REVIEW
_SCHEDULINGSTATE_NORMAL.fields_by_name['relearning'].message_type = _SCHEDULINGSTATE_RELEARNING
_SCHEDULINGSTATE_NORMAL.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_NORMAL.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_NORMAL.fields_by_name['new'])
_SCHEDULINGSTATE_NORMAL.fields_by_name['new'].containing_oneof = _SCHEDULINGSTATE_NORMAL.oneofs_by_name['value']
_SCHEDULINGSTATE_NORMAL.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_NORMAL.fields_by_name['learning'])
_SCHEDULINGSTATE_NORMAL.fields_by_name['learning'].containing_oneof = _SCHEDULINGSTATE_NORMAL.oneofs_by_name['value']
_SCHEDULINGSTATE_NORMAL.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_NORMAL.fields_by_name['review'])
_SCHEDULINGSTATE_NORMAL.fields_by_name['review'].containing_oneof = _SCHEDULINGSTATE_NORMAL.oneofs_by_name['value']
_SCHEDULINGSTATE_NORMAL.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_NORMAL.fields_by_name['relearning'])
_SCHEDULINGSTATE_NORMAL.fields_by_name['relearning'].containing_oneof = _SCHEDULINGSTATE_NORMAL.oneofs_by_name['value']
_SCHEDULINGSTATE_PREVIEW.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_RESCHEDULINGFILTER.fields_by_name['original_state'].message_type = _SCHEDULINGSTATE_NORMAL
_SCHEDULINGSTATE_RESCHEDULINGFILTER.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_FILTERED.fields_by_name['preview'].message_type = _SCHEDULINGSTATE_PREVIEW
_SCHEDULINGSTATE_FILTERED.fields_by_name['rescheduling'].message_type = _SCHEDULINGSTATE_RESCHEDULINGFILTER
_SCHEDULINGSTATE_FILTERED.containing_type = _SCHEDULINGSTATE
_SCHEDULINGSTATE_FILTERED.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_FILTERED.fields_by_name['preview'])
_SCHEDULINGSTATE_FILTERED.fields_by_name['preview'].containing_oneof = _SCHEDULINGSTATE_FILTERED.oneofs_by_name['value']
_SCHEDULINGSTATE_FILTERED.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE_FILTERED.fields_by_name['rescheduling'])
_SCHEDULINGSTATE_FILTERED.fields_by_name['rescheduling'].containing_oneof = _SCHEDULINGSTATE_FILTERED.oneofs_by_name['value']
_SCHEDULINGSTATE.fields_by_name['normal'].message_type = _SCHEDULINGSTATE_NORMAL
_SCHEDULINGSTATE.fields_by_name['filtered'].message_type = _SCHEDULINGSTATE_FILTERED
_SCHEDULINGSTATE.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE.fields_by_name['normal'])
_SCHEDULINGSTATE.fields_by_name['normal'].containing_oneof = _SCHEDULINGSTATE.oneofs_by_name['value']
_SCHEDULINGSTATE.oneofs_by_name['value'].fields.append(
  _SCHEDULINGSTATE.fields_by_name['filtered'])
_SCHEDULINGSTATE.fields_by_name['filtered'].containing_oneof = _SCHEDULINGSTATE.oneofs_by_name['value']
_QUEUEDCARDS_QUEUEDCARD.fields_by_name['card'].message_type = anki_dot_cards__pb2._CARD
_QUEUEDCARDS_QUEUEDCARD.fields_by_name['queue'].enum_type = _QUEUEDCARDS_QUEUE
_QUEUEDCARDS_QUEUEDCARD.fields_by_name['next_states'].message_type = _NEXTCARDSTATES
_QUEUEDCARDS_QUEUEDCARD.containing_type = _QUEUEDCARDS
_QUEUEDCARDS.fields_by_name['cards'].message_type = _QUEUEDCARDS_QUEUEDCARD
_QUEUEDCARDS_QUEUE.containing_type = _QUEUEDCARDS
_UNBURYDECKREQUEST.fields_by_name['mode'].enum_type = _UNBURYDECKREQUEST_MODE
_UNBURYDECKREQUEST_MODE.containing_type = _UNBURYDECKREQUEST
_BURYORSUSPENDCARDSREQUEST.fields_by_name['mode'].enum_type = _BURYORSUSPENDCARDSREQUEST_MODE
_BURYORSUSPENDCARDSREQUEST_MODE.containing_type = _BURYORSUSPENDCARDSREQUEST
_SETDUEDATEREQUEST.fields_by_name['config_key'].message_type = anki_dot_config__pb2._OPTIONALSTRINGCONFIGKEY
_NEXTCARDSTATES.fields_by_name['current'].message_type = _SCHEDULINGSTATE
_NEXTCARDSTATES.fields_by_name['again'].message_type = _SCHEDULINGSTATE
_NEXTCARDSTATES.fields_by_name['hard'].message_type = _SCHEDULINGSTATE
_NEXTCARDSTATES.fields_by_name['good'].message_type = _SCHEDULINGSTATE
_NEXTCARDSTATES.fields_by_name['easy'].message_type = _SCHEDULINGSTATE
_CARDANSWER.fields_by_name['current_state'].message_type = _SCHEDULINGSTATE
_CARDANSWER.fields_by_name['new_state'].message_type = _SCHEDULINGSTATE
_CARDANSWER.fields_by_name['rating'].enum_type = _CARDANSWER_RATING
_CARDANSWER_RATING.containing_type = _CARDANSWER
_CUSTOMSTUDYREQUEST_CRAM.fields_by_name['kind'].enum_type = _CUSTOMSTUDYREQUEST_CRAM_CRAMKIND
_CUSTOMSTUDYREQUEST_CRAM.containing_type = _CUSTOMSTUDYREQUEST
_CUSTOMSTUDYREQUEST_CRAM_CRAMKIND.containing_type = _CUSTOMSTUDYREQUEST_CRAM
_CUSTOMSTUDYREQUEST.fields_by_name['cram'].message_type = _CUSTOMSTUDYREQUEST_CRAM
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['new_limit_delta'])
_CUSTOMSTUDYREQUEST.fields_by_name['new_limit_delta'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['review_limit_delta'])
_CUSTOMSTUDYREQUEST.fields_by_name['review_limit_delta'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['forgot_days'])
_CUSTOMSTUDYREQUEST.fields_by_name['forgot_days'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['review_ahead_days'])
_CUSTOMSTUDYREQUEST.fields_by_name['review_ahead_days'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['preview_days'])
_CUSTOMSTUDYREQUEST.fields_by_name['preview_days'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
_CUSTOMSTUDYREQUEST.oneofs_by_name['value'].fields.append(
  _CUSTOMSTUDYREQUEST.fields_by_name['cram'])
_CUSTOMSTUDYREQUEST.fields_by_name['cram'].containing_oneof = _CUSTOMSTUDYREQUEST.oneofs_by_name['value']
DESCRIPTOR.message_types_by_name['SchedulingState'] = _SCHEDULINGSTATE
DESCRIPTOR.message_types_by_name['QueuedCards'] = _QUEUEDCARDS
DESCRIPTOR.message_types_by_name['GetQueuedCardsRequest'] = _GETQUEUEDCARDSREQUEST
DESCRIPTOR.message_types_by_name['SchedTimingTodayResponse'] = _SCHEDTIMINGTODAYRESPONSE
DESCRIPTOR.message_types_by_name['StudiedTodayMessageRequest'] = _STUDIEDTODAYMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['UpdateStatsRequest'] = _UPDATESTATSREQUEST
DESCRIPTOR.message_types_by_name['ExtendLimitsRequest'] = _EXTENDLIMITSREQUEST
DESCRIPTOR.message_types_by_name['CountsForDeckTodayResponse'] = _COUNTSFORDECKTODAYRESPONSE
DESCRIPTOR.message_types_by_name['CongratsInfoResponse'] = _CONGRATSINFORESPONSE
DESCRIPTOR.message_types_by_name['UnburyDeckRequest'] = _UNBURYDECKREQUEST
DESCRIPTOR.message_types_by_name['BuryOrSuspendCardsRequest'] = _BURYORSUSPENDCARDSREQUEST
DESCRIPTOR.message_types_by_name['ScheduleCardsAsNewRequest'] = _SCHEDULECARDSASNEWREQUEST
DESCRIPTOR.message_types_by_name['SetDueDateRequest'] = _SETDUEDATEREQUEST
DESCRIPTOR.message_types_by_name['SortCardsRequest'] = _SORTCARDSREQUEST
DESCRIPTOR.message_types_by_name['SortDeckRequest'] = _SORTDECKREQUEST
DESCRIPTOR.message_types_by_name['NextCardStates'] = _NEXTCARDSTATES
DESCRIPTOR.message_types_by_name['CardAnswer'] = _CARDANSWER
DESCRIPTOR.message_types_by_name['CustomStudyRequest'] = _CUSTOMSTUDYREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SchedulingState = _reflection.GeneratedProtocolMessageType('SchedulingState', (_message.Message,), {

  'New' : _reflection.GeneratedProtocolMessageType('New', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_NEW,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.New)
    })
  ,

  'Learning' : _reflection.GeneratedProtocolMessageType('Learning', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_LEARNING,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Learning)
    })
  ,

  'Review' : _reflection.GeneratedProtocolMessageType('Review', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_REVIEW,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Review)
    })
  ,

  'Relearning' : _reflection.GeneratedProtocolMessageType('Relearning', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_RELEARNING,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Relearning)
    })
  ,

  'Normal' : _reflection.GeneratedProtocolMessageType('Normal', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_NORMAL,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Normal)
    })
  ,

  'Preview' : _reflection.GeneratedProtocolMessageType('Preview', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_PREVIEW,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Preview)
    })
  ,

  'ReschedulingFilter' : _reflection.GeneratedProtocolMessageType('ReschedulingFilter', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_RESCHEDULINGFILTER,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.ReschedulingFilter)
    })
  ,

  'Filtered' : _reflection.GeneratedProtocolMessageType('Filtered', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULINGSTATE_FILTERED,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState.Filtered)
    })
  ,
  'DESCRIPTOR' : _SCHEDULINGSTATE,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.SchedulingState)
  })
_sym_db.RegisterMessage(SchedulingState)
_sym_db.RegisterMessage(SchedulingState.New)
_sym_db.RegisterMessage(SchedulingState.Learning)
_sym_db.RegisterMessage(SchedulingState.Review)
_sym_db.RegisterMessage(SchedulingState.Relearning)
_sym_db.RegisterMessage(SchedulingState.Normal)
_sym_db.RegisterMessage(SchedulingState.Preview)
_sym_db.RegisterMessage(SchedulingState.ReschedulingFilter)
_sym_db.RegisterMessage(SchedulingState.Filtered)

QueuedCards = _reflection.GeneratedProtocolMessageType('QueuedCards', (_message.Message,), {

  'QueuedCard' : _reflection.GeneratedProtocolMessageType('QueuedCard', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEDCARDS_QUEUEDCARD,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.QueuedCards.QueuedCard)
    })
  ,
  'DESCRIPTOR' : _QUEUEDCARDS,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.QueuedCards)
  })
_sym_db.RegisterMessage(QueuedCards)
_sym_db.RegisterMessage(QueuedCards.QueuedCard)

GetQueuedCardsRequest = _reflection.GeneratedProtocolMessageType('GetQueuedCardsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETQUEUEDCARDSREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.GetQueuedCardsRequest)
  })
_sym_db.RegisterMessage(GetQueuedCardsRequest)

SchedTimingTodayResponse = _reflection.GeneratedProtocolMessageType('SchedTimingTodayResponse', (_message.Message,), {
  'DESCRIPTOR' : _SCHEDTIMINGTODAYRESPONSE,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.SchedTimingTodayResponse)
  })
_sym_db.RegisterMessage(SchedTimingTodayResponse)

StudiedTodayMessageRequest = _reflection.GeneratedProtocolMessageType('StudiedTodayMessageRequest', (_message.Message,), {
  'DESCRIPTOR' : _STUDIEDTODAYMESSAGEREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.StudiedTodayMessageRequest)
  })
_sym_db.RegisterMessage(StudiedTodayMessageRequest)

UpdateStatsRequest = _reflection.GeneratedProtocolMessageType('UpdateStatsRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESTATSREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.UpdateStatsRequest)
  })
_sym_db.RegisterMessage(UpdateStatsRequest)

ExtendLimitsRequest = _reflection.GeneratedProtocolMessageType('ExtendLimitsRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXTENDLIMITSREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.ExtendLimitsRequest)
  })
_sym_db.RegisterMessage(ExtendLimitsRequest)

CountsForDeckTodayResponse = _reflection.GeneratedProtocolMessageType('CountsForDeckTodayResponse', (_message.Message,), {
  'DESCRIPTOR' : _COUNTSFORDECKTODAYRESPONSE,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.CountsForDeckTodayResponse)
  })
_sym_db.RegisterMessage(CountsForDeckTodayResponse)

CongratsInfoResponse = _reflection.GeneratedProtocolMessageType('CongratsInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONGRATSINFORESPONSE,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.CongratsInfoResponse)
  })
_sym_db.RegisterMessage(CongratsInfoResponse)

UnburyDeckRequest = _reflection.GeneratedProtocolMessageType('UnburyDeckRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNBURYDECKREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.UnburyDeckRequest)
  })
_sym_db.RegisterMessage(UnburyDeckRequest)

BuryOrSuspendCardsRequest = _reflection.GeneratedProtocolMessageType('BuryOrSuspendCardsRequest', (_message.Message,), {
  'DESCRIPTOR' : _BURYORSUSPENDCARDSREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.BuryOrSuspendCardsRequest)
  })
_sym_db.RegisterMessage(BuryOrSuspendCardsRequest)

ScheduleCardsAsNewRequest = _reflection.GeneratedProtocolMessageType('ScheduleCardsAsNewRequest', (_message.Message,), {
  'DESCRIPTOR' : _SCHEDULECARDSASNEWREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.ScheduleCardsAsNewRequest)
  })
_sym_db.RegisterMessage(ScheduleCardsAsNewRequest)

SetDueDateRequest = _reflection.GeneratedProtocolMessageType('SetDueDateRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETDUEDATEREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.SetDueDateRequest)
  })
_sym_db.RegisterMessage(SetDueDateRequest)

SortCardsRequest = _reflection.GeneratedProtocolMessageType('SortCardsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SORTCARDSREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.SortCardsRequest)
  })
_sym_db.RegisterMessage(SortCardsRequest)

SortDeckRequest = _reflection.GeneratedProtocolMessageType('SortDeckRequest', (_message.Message,), {
  'DESCRIPTOR' : _SORTDECKREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.SortDeckRequest)
  })
_sym_db.RegisterMessage(SortDeckRequest)

NextCardStates = _reflection.GeneratedProtocolMessageType('NextCardStates', (_message.Message,), {
  'DESCRIPTOR' : _NEXTCARDSTATES,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.NextCardStates)
  })
_sym_db.RegisterMessage(NextCardStates)

CardAnswer = _reflection.GeneratedProtocolMessageType('CardAnswer', (_message.Message,), {
  'DESCRIPTOR' : _CARDANSWER,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.CardAnswer)
  })
_sym_db.RegisterMessage(CardAnswer)

CustomStudyRequest = _reflection.GeneratedProtocolMessageType('CustomStudyRequest', (_message.Message,), {

  'Cram' : _reflection.GeneratedProtocolMessageType('Cram', (_message.Message,), {
    'DESCRIPTOR' : _CUSTOMSTUDYREQUEST_CRAM,
    '__module__' : 'anki.scheduler_pb2'
    # @@protoc_insertion_point(class_scope:anki.scheduler.CustomStudyRequest.Cram)
    })
  ,
  'DESCRIPTOR' : _CUSTOMSTUDYREQUEST,
  '__module__' : 'anki.scheduler_pb2'
  # @@protoc_insertion_point(class_scope:anki.scheduler.CustomStudyRequest)
  })
_sym_db.RegisterMessage(CustomStudyRequest)
_sym_db.RegisterMessage(CustomStudyRequest.Cram)



_SCHEDULERSERVICE = _descriptor.ServiceDescriptor(
  name='SchedulerService',
  full_name='anki.scheduler.SchedulerService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=3910,
  serialized_end=5732,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetQueuedCards',
    full_name='anki.scheduler.SchedulerService.GetQueuedCards',
    index=0,
    containing_service=None,
    input_type=_GETQUEUEDCARDSREQUEST,
    output_type=_QUEUEDCARDS,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AnswerCard',
    full_name='anki.scheduler.SchedulerService.AnswerCard',
    index=1,
    containing_service=None,
    input_type=_CARDANSWER,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SchedTimingToday',
    full_name='anki.scheduler.SchedulerService.SchedTimingToday',
    index=2,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_SCHEDTIMINGTODAYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StudiedToday',
    full_name='anki.scheduler.SchedulerService.StudiedToday',
    index=3,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StudiedTodayMessage',
    full_name='anki.scheduler.SchedulerService.StudiedTodayMessage',
    index=4,
    containing_service=None,
    input_type=_STUDIEDTODAYMESSAGEREQUEST,
    output_type=anki_dot_generic__pb2._STRING,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateStats',
    full_name='anki.scheduler.SchedulerService.UpdateStats',
    index=5,
    containing_service=None,
    input_type=_UPDATESTATSREQUEST,
    output_type=anki_dot_generic__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ExtendLimits',
    full_name='anki.scheduler.SchedulerService.ExtendLimits',
    index=6,
    containing_service=None,
    input_type=_EXTENDLIMITSREQUEST,
    output_type=anki_dot_generic__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CountsForDeckToday',
    full_name='anki.scheduler.SchedulerService.CountsForDeckToday',
    index=7,
    containing_service=None,
    input_type=anki_dot_decks__pb2._DECKID,
    output_type=_COUNTSFORDECKTODAYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CongratsInfo',
    full_name='anki.scheduler.SchedulerService.CongratsInfo',
    index=8,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=_CONGRATSINFORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RestoreBuriedAndSuspendedCards',
    full_name='anki.scheduler.SchedulerService.RestoreBuriedAndSuspendedCards',
    index=9,
    containing_service=None,
    input_type=anki_dot_cards__pb2._CARDIDS,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UnburyDeck',
    full_name='anki.scheduler.SchedulerService.UnburyDeck',
    index=10,
    containing_service=None,
    input_type=_UNBURYDECKREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='BuryOrSuspendCards',
    full_name='anki.scheduler.SchedulerService.BuryOrSuspendCards',
    index=11,
    containing_service=None,
    input_type=_BURYORSUSPENDCARDSREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='EmptyFilteredDeck',
    full_name='anki.scheduler.SchedulerService.EmptyFilteredDeck',
    index=12,
    containing_service=None,
    input_type=anki_dot_decks__pb2._DECKID,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RebuildFilteredDeck',
    full_name='anki.scheduler.SchedulerService.RebuildFilteredDeck',
    index=13,
    containing_service=None,
    input_type=anki_dot_decks__pb2._DECKID,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ScheduleCardsAsNew',
    full_name='anki.scheduler.SchedulerService.ScheduleCardsAsNew',
    index=14,
    containing_service=None,
    input_type=_SCHEDULECARDSASNEWREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetDueDate',
    full_name='anki.scheduler.SchedulerService.SetDueDate',
    index=15,
    containing_service=None,
    input_type=_SETDUEDATEREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SortCards',
    full_name='anki.scheduler.SchedulerService.SortCards',
    index=16,
    containing_service=None,
    input_type=_SORTCARDSREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SortDeck',
    full_name='anki.scheduler.SchedulerService.SortDeck',
    index=17,
    containing_service=None,
    input_type=_SORTDECKREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNextCardStates',
    full_name='anki.scheduler.SchedulerService.GetNextCardStates',
    index=18,
    containing_service=None,
    input_type=anki_dot_cards__pb2._CARDID,
    output_type=_NEXTCARDSTATES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DescribeNextStates',
    full_name='anki.scheduler.SchedulerService.DescribeNextStates',
    index=19,
    containing_service=None,
    input_type=_NEXTCARDSTATES,
    output_type=anki_dot_generic__pb2._STRINGLIST,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StateIsLeech',
    full_name='anki.scheduler.SchedulerService.StateIsLeech',
    index=20,
    containing_service=None,
    input_type=_SCHEDULINGSTATE,
    output_type=anki_dot_generic__pb2._BOOL,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpgradeScheduler',
    full_name='anki.scheduler.SchedulerService.UpgradeScheduler',
    index=21,
    containing_service=None,
    input_type=anki_dot_generic__pb2._EMPTY,
    output_type=anki_dot_generic__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CustomStudy',
    full_name='anki.scheduler.SchedulerService.CustomStudy',
    index=22,
    containing_service=None,
    input_type=_CUSTOMSTUDYREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SCHEDULERSERVICE)

DESCRIPTOR.services_by_name['SchedulerService'] = _SCHEDULERSERVICE

# @@protoc_insertion_point(module_scope)
