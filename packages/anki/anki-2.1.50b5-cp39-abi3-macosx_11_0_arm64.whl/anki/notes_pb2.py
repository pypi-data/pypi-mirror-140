# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/notes.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import notetypes_pb2 as anki_dot_notetypes__pb2
from anki import collection_pb2 as anki_dot_collection__pb2
from anki import decks_pb2 as anki_dot_decks__pb2
from anki import cards_pb2 as anki_dot_cards__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki/notes.proto',
  package='anki.notes',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10\x61nki/notes.proto\x12\nanki.notes\x1a\x14\x61nki/notetypes.proto\x1a\x15\x61nki/collection.proto\x1a\x10\x61nki/decks.proto\x1a\x10\x61nki/cards.proto\"\x15\n\x06NoteId\x12\x0b\n\x03nid\x18\x01 \x01(\x03\"\x1b\n\x07NoteIds\x12\x10\n\x08note_ids\x18\x01 \x03(\x03\"t\n\x04Note\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04guid\x18\x02 \x01(\t\x12\x13\n\x0bnotetype_id\x18\x03 \x01(\x03\x12\x12\n\nmtime_secs\x18\x04 \x01(\r\x12\x0b\n\x03usn\x18\x05 \x01(\x05\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12\x0e\n\x06\x66ields\x18\x07 \x03(\t\"A\n\x0e\x41\x64\x64NoteRequest\x12\x1e\n\x04note\x18\x01 \x01(\x0b\x32\x10.anki.notes.Note\x12\x0f\n\x07\x64\x65\x63k_id\x18\x02 \x01(\x03\"O\n\x0f\x41\x64\x64NoteResponse\x12\x0f\n\x07note_id\x18\x01 \x01(\x03\x12+\n\x07\x63hanges\x18\x02 \x01(\x0b\x32\x1a.anki.collection.OpChanges\"N\n\x12UpdateNotesRequest\x12\x1f\n\x05notes\x18\x01 \x03(\x0b\x32\x10.anki.notes.Note\x12\x17\n\x0fskip_undo_entry\x18\x02 \x01(\x08\"D\n\x18\x44\x65\x66\x61ultsForAddingRequest\x12(\n home_deck_of_current_review_card\x18\x01 \x01(\x03\"7\n\x0f\x44\x65\x63kAndNotetype\x12\x0f\n\x07\x64\x65\x63k_id\x18\x01 \x01(\x03\x12\x13\n\x0bnotetype_id\x18\x02 \x01(\x03\"8\n\x12RemoveNotesRequest\x12\x10\n\x08note_ids\x18\x01 \x03(\x03\x12\x10\n\x08\x63\x61rd_ids\x18\x02 \x03(\x03\"-\n\x1a\x43lozeNumbersInNoteResponse\x12\x0f\n\x07numbers\x18\x01 \x03(\r\"\\\n\x17\x41\x66terNoteUpdatesRequest\x12\x0c\n\x04nids\x18\x01 \x03(\x03\x12\x1b\n\x13mark_notes_modified\x18\x02 \x01(\x08\x12\x16\n\x0egenerate_cards\x18\x03 \x01(\x08\")\n\x19\x46ieldNamesForNotesRequest\x12\x0c\n\x04nids\x18\x01 \x03(\x03\",\n\x1a\x46ieldNamesForNotesResponse\x12\x0e\n\x06\x66ields\x18\x01 \x03(\t\"\xc2\x01\n\x17NoteFieldsCheckResponse\x12\x38\n\x05state\x18\x01 \x01(\x0e\x32).anki.notes.NoteFieldsCheckResponse.State\"m\n\x05State\x12\n\n\x06NORMAL\x10\x00\x12\t\n\x05\x45MPTY\x10\x01\x12\r\n\tDUPLICATE\x10\x02\x12\x11\n\rMISSING_CLOZE\x10\x03\x12\x16\n\x12NOTETYPE_NOT_CLOZE\x10\x04\x12\x13\n\x0f\x46IELD_NOT_CLOZE\x10\x05\x32\xdf\x07\n\x0cNotesService\x12\x37\n\x07NewNote\x12\x1a.anki.notetypes.NotetypeId\x1a\x10.anki.notes.Note\x12\x42\n\x07\x41\x64\x64Note\x12\x1a.anki.notes.AddNoteRequest\x1a\x1b.anki.notes.AddNoteResponse\x12V\n\x11\x44\x65\x66\x61ultsForAdding\x12$.anki.notes.DefaultsForAddingRequest\x1a\x1b.anki.notes.DeckAndNotetype\x12H\n\x16\x44\x65\x66\x61ultDeckForNotetype\x12\x1a.anki.notetypes.NotetypeId\x1a\x12.anki.decks.DeckId\x12I\n\x0bUpdateNotes\x12\x1e.anki.notes.UpdateNotesRequest\x1a\x1a.anki.collection.OpChanges\x12/\n\x07GetNote\x12\x12.anki.notes.NoteId\x1a\x10.anki.notes.Note\x12R\n\x0bRemoveNotes\x12\x1e.anki.notes.RemoveNotesRequest\x1a#.anki.collection.OpChangesWithCount\x12N\n\x12\x43lozeNumbersInNote\x12\x10.anki.notes.Note\x1a&.anki.notes.ClozeNumbersInNoteResponse\x12\\\n\x10\x41\x66terNoteUpdates\x12#.anki.notes.AfterNoteUpdatesRequest\x1a#.anki.collection.OpChangesWithCount\x12\x63\n\x12\x46ieldNamesForNotes\x12%.anki.notes.FieldNamesForNotesRequest\x1a&.anki.notes.FieldNamesForNotesResponse\x12H\n\x0fNoteFieldsCheck\x12\x10.anki.notes.Note\x1a#.anki.notes.NoteFieldsCheckResponse\x12\x36\n\x0b\x43\x61rdsOfNote\x12\x12.anki.notes.NoteId\x1a\x13.anki.cards.CardIds\x12K\n\x18GetSingleNotetypeOfNotes\x12\x13.anki.notes.NoteIds\x1a\x1a.anki.notetypes.NotetypeIdb\x06proto3'
  ,
  dependencies=[anki_dot_notetypes__pb2.DESCRIPTOR,anki_dot_collection__pb2.DESCRIPTOR,anki_dot_decks__pb2.DESCRIPTOR,anki_dot_cards__pb2.DESCRIPTOR,])



_NOTEFIELDSCHECKRESPONSE_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='anki.notes.NoteFieldsCheckResponse.State',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DUPLICATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MISSING_CLOZE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NOTETYPE_NOT_CLOZE', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FIELD_NOT_CLOZE', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1012,
  serialized_end=1121,
)
_sym_db.RegisterEnumDescriptor(_NOTEFIELDSCHECKRESPONSE_STATE)


_NOTEID = _descriptor.Descriptor(
  name='NoteId',
  full_name='anki.notes.NoteId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nid', full_name='anki.notes.NoteId.nid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=113,
  serialized_end=134,
)


_NOTEIDS = _descriptor.Descriptor(
  name='NoteIds',
  full_name='anki.notes.NoteIds',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note_ids', full_name='anki.notes.NoteIds.note_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=136,
  serialized_end=163,
)


_NOTE = _descriptor.Descriptor(
  name='Note',
  full_name='anki.notes.Note',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='anki.notes.Note.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='guid', full_name='anki.notes.Note.guid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notetype_id', full_name='anki.notes.Note.notetype_id', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mtime_secs', full_name='anki.notes.Note.mtime_secs', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='usn', full_name='anki.notes.Note.usn', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tags', full_name='anki.notes.Note.tags', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fields', full_name='anki.notes.Note.fields', index=6,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=281,
)


_ADDNOTEREQUEST = _descriptor.Descriptor(
  name='AddNoteRequest',
  full_name='anki.notes.AddNoteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note', full_name='anki.notes.AddNoteRequest.note', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.notes.AddNoteRequest.deck_id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=283,
  serialized_end=348,
)


_ADDNOTERESPONSE = _descriptor.Descriptor(
  name='AddNoteResponse',
  full_name='anki.notes.AddNoteResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note_id', full_name='anki.notes.AddNoteResponse.note_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='changes', full_name='anki.notes.AddNoteResponse.changes', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=350,
  serialized_end=429,
)


_UPDATENOTESREQUEST = _descriptor.Descriptor(
  name='UpdateNotesRequest',
  full_name='anki.notes.UpdateNotesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='notes', full_name='anki.notes.UpdateNotesRequest.notes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip_undo_entry', full_name='anki.notes.UpdateNotesRequest.skip_undo_entry', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=431,
  serialized_end=509,
)


_DEFAULTSFORADDINGREQUEST = _descriptor.Descriptor(
  name='DefaultsForAddingRequest',
  full_name='anki.notes.DefaultsForAddingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='home_deck_of_current_review_card', full_name='anki.notes.DefaultsForAddingRequest.home_deck_of_current_review_card', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=511,
  serialized_end=579,
)


_DECKANDNOTETYPE = _descriptor.Descriptor(
  name='DeckAndNotetype',
  full_name='anki.notes.DeckAndNotetype',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='deck_id', full_name='anki.notes.DeckAndNotetype.deck_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notetype_id', full_name='anki.notes.DeckAndNotetype.notetype_id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=581,
  serialized_end=636,
)


_REMOVENOTESREQUEST = _descriptor.Descriptor(
  name='RemoveNotesRequest',
  full_name='anki.notes.RemoveNotesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='note_ids', full_name='anki.notes.RemoveNotesRequest.note_ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='card_ids', full_name='anki.notes.RemoveNotesRequest.card_ids', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=638,
  serialized_end=694,
)


_CLOZENUMBERSINNOTERESPONSE = _descriptor.Descriptor(
  name='ClozeNumbersInNoteResponse',
  full_name='anki.notes.ClozeNumbersInNoteResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='numbers', full_name='anki.notes.ClozeNumbersInNoteResponse.numbers', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=696,
  serialized_end=741,
)


_AFTERNOTEUPDATESREQUEST = _descriptor.Descriptor(
  name='AfterNoteUpdatesRequest',
  full_name='anki.notes.AfterNoteUpdatesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nids', full_name='anki.notes.AfterNoteUpdatesRequest.nids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mark_notes_modified', full_name='anki.notes.AfterNoteUpdatesRequest.mark_notes_modified', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='generate_cards', full_name='anki.notes.AfterNoteUpdatesRequest.generate_cards', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=743,
  serialized_end=835,
)


_FIELDNAMESFORNOTESREQUEST = _descriptor.Descriptor(
  name='FieldNamesForNotesRequest',
  full_name='anki.notes.FieldNamesForNotesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nids', full_name='anki.notes.FieldNamesForNotesRequest.nids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=837,
  serialized_end=878,
)


_FIELDNAMESFORNOTESRESPONSE = _descriptor.Descriptor(
  name='FieldNamesForNotesResponse',
  full_name='anki.notes.FieldNamesForNotesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='anki.notes.FieldNamesForNotesResponse.fields', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=880,
  serialized_end=924,
)


_NOTEFIELDSCHECKRESPONSE = _descriptor.Descriptor(
  name='NoteFieldsCheckResponse',
  full_name='anki.notes.NoteFieldsCheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='anki.notes.NoteFieldsCheckResponse.state', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NOTEFIELDSCHECKRESPONSE_STATE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=927,
  serialized_end=1121,
)

_ADDNOTEREQUEST.fields_by_name['note'].message_type = _NOTE
_ADDNOTERESPONSE.fields_by_name['changes'].message_type = anki_dot_collection__pb2._OPCHANGES
_UPDATENOTESREQUEST.fields_by_name['notes'].message_type = _NOTE
_NOTEFIELDSCHECKRESPONSE.fields_by_name['state'].enum_type = _NOTEFIELDSCHECKRESPONSE_STATE
_NOTEFIELDSCHECKRESPONSE_STATE.containing_type = _NOTEFIELDSCHECKRESPONSE
DESCRIPTOR.message_types_by_name['NoteId'] = _NOTEID
DESCRIPTOR.message_types_by_name['NoteIds'] = _NOTEIDS
DESCRIPTOR.message_types_by_name['Note'] = _NOTE
DESCRIPTOR.message_types_by_name['AddNoteRequest'] = _ADDNOTEREQUEST
DESCRIPTOR.message_types_by_name['AddNoteResponse'] = _ADDNOTERESPONSE
DESCRIPTOR.message_types_by_name['UpdateNotesRequest'] = _UPDATENOTESREQUEST
DESCRIPTOR.message_types_by_name['DefaultsForAddingRequest'] = _DEFAULTSFORADDINGREQUEST
DESCRIPTOR.message_types_by_name['DeckAndNotetype'] = _DECKANDNOTETYPE
DESCRIPTOR.message_types_by_name['RemoveNotesRequest'] = _REMOVENOTESREQUEST
DESCRIPTOR.message_types_by_name['ClozeNumbersInNoteResponse'] = _CLOZENUMBERSINNOTERESPONSE
DESCRIPTOR.message_types_by_name['AfterNoteUpdatesRequest'] = _AFTERNOTEUPDATESREQUEST
DESCRIPTOR.message_types_by_name['FieldNamesForNotesRequest'] = _FIELDNAMESFORNOTESREQUEST
DESCRIPTOR.message_types_by_name['FieldNamesForNotesResponse'] = _FIELDNAMESFORNOTESRESPONSE
DESCRIPTOR.message_types_by_name['NoteFieldsCheckResponse'] = _NOTEFIELDSCHECKRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NoteId = _reflection.GeneratedProtocolMessageType('NoteId', (_message.Message,), {
  'DESCRIPTOR' : _NOTEID,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.NoteId)
  })
_sym_db.RegisterMessage(NoteId)

NoteIds = _reflection.GeneratedProtocolMessageType('NoteIds', (_message.Message,), {
  'DESCRIPTOR' : _NOTEIDS,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.NoteIds)
  })
_sym_db.RegisterMessage(NoteIds)

Note = _reflection.GeneratedProtocolMessageType('Note', (_message.Message,), {
  'DESCRIPTOR' : _NOTE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.Note)
  })
_sym_db.RegisterMessage(Note)

AddNoteRequest = _reflection.GeneratedProtocolMessageType('AddNoteRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDNOTEREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.AddNoteRequest)
  })
_sym_db.RegisterMessage(AddNoteRequest)

AddNoteResponse = _reflection.GeneratedProtocolMessageType('AddNoteResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDNOTERESPONSE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.AddNoteResponse)
  })
_sym_db.RegisterMessage(AddNoteResponse)

UpdateNotesRequest = _reflection.GeneratedProtocolMessageType('UpdateNotesRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATENOTESREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.UpdateNotesRequest)
  })
_sym_db.RegisterMessage(UpdateNotesRequest)

DefaultsForAddingRequest = _reflection.GeneratedProtocolMessageType('DefaultsForAddingRequest', (_message.Message,), {
  'DESCRIPTOR' : _DEFAULTSFORADDINGREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.DefaultsForAddingRequest)
  })
_sym_db.RegisterMessage(DefaultsForAddingRequest)

DeckAndNotetype = _reflection.GeneratedProtocolMessageType('DeckAndNotetype', (_message.Message,), {
  'DESCRIPTOR' : _DECKANDNOTETYPE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.DeckAndNotetype)
  })
_sym_db.RegisterMessage(DeckAndNotetype)

RemoveNotesRequest = _reflection.GeneratedProtocolMessageType('RemoveNotesRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVENOTESREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.RemoveNotesRequest)
  })
_sym_db.RegisterMessage(RemoveNotesRequest)

ClozeNumbersInNoteResponse = _reflection.GeneratedProtocolMessageType('ClozeNumbersInNoteResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLOZENUMBERSINNOTERESPONSE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.ClozeNumbersInNoteResponse)
  })
_sym_db.RegisterMessage(ClozeNumbersInNoteResponse)

AfterNoteUpdatesRequest = _reflection.GeneratedProtocolMessageType('AfterNoteUpdatesRequest', (_message.Message,), {
  'DESCRIPTOR' : _AFTERNOTEUPDATESREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.AfterNoteUpdatesRequest)
  })
_sym_db.RegisterMessage(AfterNoteUpdatesRequest)

FieldNamesForNotesRequest = _reflection.GeneratedProtocolMessageType('FieldNamesForNotesRequest', (_message.Message,), {
  'DESCRIPTOR' : _FIELDNAMESFORNOTESREQUEST,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.FieldNamesForNotesRequest)
  })
_sym_db.RegisterMessage(FieldNamesForNotesRequest)

FieldNamesForNotesResponse = _reflection.GeneratedProtocolMessageType('FieldNamesForNotesResponse', (_message.Message,), {
  'DESCRIPTOR' : _FIELDNAMESFORNOTESRESPONSE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.FieldNamesForNotesResponse)
  })
_sym_db.RegisterMessage(FieldNamesForNotesResponse)

NoteFieldsCheckResponse = _reflection.GeneratedProtocolMessageType('NoteFieldsCheckResponse', (_message.Message,), {
  'DESCRIPTOR' : _NOTEFIELDSCHECKRESPONSE,
  '__module__' : 'anki.notes_pb2'
  # @@protoc_insertion_point(class_scope:anki.notes.NoteFieldsCheckResponse)
  })
_sym_db.RegisterMessage(NoteFieldsCheckResponse)



_NOTESSERVICE = _descriptor.ServiceDescriptor(
  name='NotesService',
  full_name='anki.notes.NotesService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1124,
  serialized_end=2115,
  methods=[
  _descriptor.MethodDescriptor(
    name='NewNote',
    full_name='anki.notes.NotesService.NewNote',
    index=0,
    containing_service=None,
    input_type=anki_dot_notetypes__pb2._NOTETYPEID,
    output_type=_NOTE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AddNote',
    full_name='anki.notes.NotesService.AddNote',
    index=1,
    containing_service=None,
    input_type=_ADDNOTEREQUEST,
    output_type=_ADDNOTERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DefaultsForAdding',
    full_name='anki.notes.NotesService.DefaultsForAdding',
    index=2,
    containing_service=None,
    input_type=_DEFAULTSFORADDINGREQUEST,
    output_type=_DECKANDNOTETYPE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DefaultDeckForNotetype',
    full_name='anki.notes.NotesService.DefaultDeckForNotetype',
    index=3,
    containing_service=None,
    input_type=anki_dot_notetypes__pb2._NOTETYPEID,
    output_type=anki_dot_decks__pb2._DECKID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateNotes',
    full_name='anki.notes.NotesService.UpdateNotes',
    index=4,
    containing_service=None,
    input_type=_UPDATENOTESREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetNote',
    full_name='anki.notes.NotesService.GetNote',
    index=5,
    containing_service=None,
    input_type=_NOTEID,
    output_type=_NOTE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveNotes',
    full_name='anki.notes.NotesService.RemoveNotes',
    index=6,
    containing_service=None,
    input_type=_REMOVENOTESREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ClozeNumbersInNote',
    full_name='anki.notes.NotesService.ClozeNumbersInNote',
    index=7,
    containing_service=None,
    input_type=_NOTE,
    output_type=_CLOZENUMBERSINNOTERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AfterNoteUpdates',
    full_name='anki.notes.NotesService.AfterNoteUpdates',
    index=8,
    containing_service=None,
    input_type=_AFTERNOTEUPDATESREQUEST,
    output_type=anki_dot_collection__pb2._OPCHANGESWITHCOUNT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FieldNamesForNotes',
    full_name='anki.notes.NotesService.FieldNamesForNotes',
    index=9,
    containing_service=None,
    input_type=_FIELDNAMESFORNOTESREQUEST,
    output_type=_FIELDNAMESFORNOTESRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='NoteFieldsCheck',
    full_name='anki.notes.NotesService.NoteFieldsCheck',
    index=10,
    containing_service=None,
    input_type=_NOTE,
    output_type=_NOTEFIELDSCHECKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CardsOfNote',
    full_name='anki.notes.NotesService.CardsOfNote',
    index=11,
    containing_service=None,
    input_type=_NOTEID,
    output_type=anki_dot_cards__pb2._CARDIDS,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSingleNotetypeOfNotes',
    full_name='anki.notes.NotesService.GetSingleNotetypeOfNotes',
    index=12,
    containing_service=None,
    input_type=_NOTEIDS,
    output_type=anki_dot_notetypes__pb2._NOTETYPEID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_NOTESSERVICE)

DESCRIPTOR.services_by_name['NotesService'] = _NOTESSERVICE

# @@protoc_insertion_point(module_scope)
