#!/usr/bin/env bash
#
# qemu bring-up a cloud-init in a quick-n-dirty fashion using cijoe and qemu
#
# This script uses the '${CIJ_ENVS}/refenv-qemu.sh' for a bunch of things
#
# * Needs permissions to create subfolder in ${QEMU_GUESTS}
# * Run the qemu instance defined in ${QEMU_BIN}
# * Download cloud-init images using wget/curl from the WWW
#
# Once the qemu-guest has been brought up, then you are dumped into a cijoe-shell with the
# '/tmp/envdef.sh' active, such that you can invoke e.g.
#
# * cij.cmd "hostname"; # Run a commands inside the qemu-guest
# * ssh.shell;          # Get a shell inside the qemu-guest (by SSH-ing into it)
#
# Set these variables to modify behavior:
#
# CIJ_TARGET_ENV_FNAME: Set this to a cijoe target environment definiton and it will be used along
# with the 'refenv-qemu.sh', regardless, the actual environment used will reside in '/tmp/envdef.h'
#
# shellcheck disable=SC1090
#
qemu.cloudimg.up.main() {
	# Import cijoe and environment definition 'refenv-qemu'
	pushd "$(cij_root)" && source modules/cijoe.sh && popd || exit

	local tedef=/tmp/envdef.sh

	cij.info "Creating cijoe target environment definition in '${tedef}'"
	{
		cat "${CIJ_ENVS}/refenv-qemu.sh"
		if [[ -v CIJ_TARGET_ENV_FNAME ]]; then
		  tail -n +2 "${CIJ_ENVS}/${CIJ_TARGET_ENV_FNAME}"
		fi
		# Uncomment this for stdout/stdin interaction with the guest
		#echo "export QEMU_GUEST_CONSOLE=stdio"
	} > "${tedef}"
	source /tmp/envdef.sh

	local guest="${QEMU_GUESTS}/${QEMU_GUEST_NAME}"

	cij.info "Creating directory-structure for qemu-guest at '${guest}'"
	if ! mkdir -p "${guest}"; then
		cij.err "Failed creating: '${guest}'"
		return
	fi

	cij.info "cloud-init: adding meta-data"
	{
		cat "${CIJ_TESTFILES}/cloudinit/debian-bullseye/meta-data"
	} > "${guest}/meta-data"

	cij.info "cloud-init: adding user-data with '${HOME}/.ssh/id_rsa.pub' injected"
	{
		cat "${CIJ_TESTFILES}/cloudinit/debian-bullseye/user-data"
		echo "ssh_authorized_keys:"
		echo -n "- "
		cat "${HOME}/.ssh/id_rsa.pub"
	} > "${guest}/user-data"

	qemu.img_from_url "https://cloud.debian.org/images/cloud/bullseye/daily/latest/debian-11-generic-amd64-daily.qcow2"

	sleep 10

	cij.info "populatinog QEMU_ARGS_EXTRA with pcie configuration"
	source "${CIJ_TESTFILES}/qemu_setup_nvme_1c2ns_nvm_zrwa.sh"
	qemu_setup_pcie
	export QEMU_ARGS_EXTRA="$QEMU_SETUP_PCIE"
	qemu.run

	sleep 30
	cijoe "${tedef}"
}

qemu.cloudimg.up.main
